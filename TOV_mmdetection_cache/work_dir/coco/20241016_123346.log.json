{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+e282583", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [2]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07595, "stage0_loss_instance_mil": 0.69059, "stage0_bag_acc": 23.52089, "stage0_mean_ious": 0.275, "stage0_s": 0.0, "stage0_m": 0.02272, "stage0_l": 0.18097, "stage0_h": 0.28162, "stage1_loss_instance_mil": 0.19338, "stage1_bag_acc": 12.82872, "stage1_neg_loss": 0.00085, "stage1_mean_ious": 0.2691, "stage1_s": 0.0, "stage1_m": 0.02306, "stage1_l": 0.20241, "stage1_h": 0.27174, "loss": 0.88482, "grad_norm": 3.36647, "time": 1.76447}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02483, "stage0_loss_instance_mil": 0.58544, "stage0_bag_acc": 54.57584, "stage0_mean_ious": 0.27823, "stage0_s": 0.0, "stage0_m": 0.0319, "stage0_l": 0.22353, "stage0_h": 0.28063, "stage1_loss_instance_mil": 0.25281, "stage1_bag_acc": 18.69293, "stage1_neg_loss": 0.00332, "stage1_mean_ious": 0.25858, "stage1_s": 0.0, "stage1_m": 0.0357, "stage1_l": 0.23019, "stage1_h": 0.25587, "loss": 0.84157, "grad_norm": 4.89248, "time": 1.68993}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02501, "stage0_loss_instance_mil": 0.28072, "stage0_bag_acc": 85.85702, "stage0_mean_ious": 0.3082, "stage0_s": 0.0, "stage0_m": 0.05709, "stage0_l": 0.17606, "stage0_h": 0.32098, "stage1_loss_instance_mil": 0.31539, "stage1_bag_acc": 78.75447, "stage1_neg_loss": 0.06727, "stage1_mean_ious": 0.28415, "stage1_s": 0.0, "stage1_m": 0.05321, "stage1_l": 0.16114, "stage1_h": 0.29635, "loss": 0.66339, "grad_norm": 13.59181, "time": 1.70677}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18840, "data_time": 0.07443, "stage0_loss_instance_mil": 0.06889, "stage0_bag_acc": 96.45715, "stage0_mean_ious": 0.29756, "stage0_s": 0.0, "stage0_m": 0.08804, "stage0_l": 0.13636, "stage0_h": 0.31467, "stage1_loss_instance_mil": 0.32783, "stage1_bag_acc": 98.2564, "stage1_neg_loss": 0.08804, "stage1_mean_ious": 0.27086, "stage1_s": 0.0, "stage1_m": 0.06388, "stage1_l": 0.12055, "stage1_h": 0.28954, "loss": 0.48476, "grad_norm": 16.14104, "time": 1.73471}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18840, "data_time": 0.02579, "stage0_loss_instance_mil": 0.08187, "stage0_bag_acc": 95.19933, "stage0_mean_ious": 0.34211, "stage0_s": 0.0, "stage0_m": 0.05566, "stage0_l": 0.15493, "stage0_h": 0.35862, "stage1_loss_instance_mil": 0.30921, "stage1_bag_acc": 96.20779, "stage1_neg_loss": 0.08812, "stage1_mean_ious": 0.30906, "stage1_s": 0.0, "stage1_m": 0.03728, "stage1_l": 0.13969, "stage1_h": 0.32489, "loss": 0.4792, "grad_norm": 15.91484, "time": 1.71765}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18840, "data_time": 0.02494, "stage0_loss_instance_mil": 0.05801, "stage0_bag_acc": 96.85604, "stage0_mean_ious": 0.37822, "stage0_s": 0.0, "stage0_m": 0.02976, "stage0_l": 0.16786, "stage0_h": 0.39832, "stage1_loss_instance_mil": 0.27482, "stage1_bag_acc": 97.85185, "stage1_neg_loss": 0.09247, "stage1_mean_ious": 0.35077, "stage1_s": 0.0, "stage1_m": 0.03025, "stage1_l": 0.16139, "stage1_h": 0.36809, "loss": 0.42529, "grad_norm": 18.79338, "time": 1.7041}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18840, "data_time": 0.07562, "stage0_loss_instance_mil": 0.03411, "stage0_bag_acc": 98.5072, "stage0_mean_ious": 0.3812, "stage0_s": 0.0, "stage0_m": 0.06036, "stage0_l": 0.13875, "stage0_h": 0.40743, "stage1_loss_instance_mil": 0.27848, "stage1_bag_acc": 97.90076, "stage1_neg_loss": 0.08184, "stage1_mean_ious": 0.35273, "stage1_s": 0.0, "stage1_m": 0.03989, "stage1_l": 0.12637, "stage1_h": 0.37817, "loss": 0.39442, "grad_norm": 18.45412, "time": 1.78442}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02465, "stage0_loss_instance_mil": 0.01796, "stage0_bag_acc": 99.17078, "stage0_mean_ious": 0.39907, "stage0_s": 0.0, "stage0_m": 0.04643, "stage0_l": 0.12237, "stage0_h": 0.4367, "stage1_loss_instance_mil": 0.24041, "stage1_bag_acc": 99.56851, "stage1_neg_loss": 0.09115, "stage1_mean_ious": 0.36875, "stage1_s": 0.0, "stage1_m": 0.0303, "stage1_l": 0.10159, "stage1_h": 0.40589, "loss": 0.34952, "grad_norm": 20.01138, "time": 1.72164}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02545, "stage0_loss_instance_mil": 0.02348, "stage0_bag_acc": 99.30447, "stage0_mean_ious": 0.35628, "stage0_s": 0.0, "stage0_m": 0.04812, "stage0_l": 0.12175, "stage0_h": 0.3869, "stage1_loss_instance_mil": 0.22998, "stage1_bag_acc": 99.42892, "stage1_neg_loss": 0.08239, "stage1_mean_ious": 0.3265, "stage1_s": 0.0, "stage1_m": 0.02648, "stage1_l": 0.10964, "stage1_h": 0.35813, "loss": 0.33585, "grad_norm": 18.00318, "time": 1.71587}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.067, "bbox_mAP_50": 0.254, "bbox_mAP_75": 0.115, "bbox_mAP_s": 0.035, "bbox_mAP_m": 0.016, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.067 0.254 0.115 0.035 0.016 0.005"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07542, "stage0_loss_instance_mil": 0.07209, "stage0_bag_acc": 94.61903, "stage0_mean_ious": 0.40149, "stage0_s": 0.0, "stage0_m": 0.01507, "stage0_l": 0.14226, "stage0_h": 0.43091, "stage1_loss_instance_mil": 0.22077, "stage1_bag_acc": 96.30924, "stage1_neg_loss": 0.07617, "stage1_mean_ious": 0.3638, "stage1_s": 0.0, "stage1_m": 0.01044, "stage1_l": 0.12065, "stage1_h": 0.39175, "loss": 0.36903, "grad_norm": 16.45364, "time": 1.75164}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02543, "stage0_loss_instance_mil": 0.0226, "stage0_bag_acc": 98.98707, "stage0_mean_ious": 0.37595, "stage0_s": 0.00844, "stage0_m": 0.02438, "stage0_l": 0.17324, "stage0_h": 0.40693, "stage1_loss_instance_mil": 0.19947, "stage1_bag_acc": 99.38923, "stage1_neg_loss": 0.07104, "stage1_mean_ious": 0.34507, "stage1_s": 0.00872, "stage1_m": 0.01404, "stage1_l": 0.15168, "stage1_h": 0.3755, "loss": 0.29312, "grad_norm": 13.23575, "time": 1.69202}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02536, "stage0_loss_instance_mil": 0.01638, "stage0_bag_acc": 99.41577, "stage0_mean_ious": 0.39375, "stage0_s": 0.0, "stage0_m": 0.04257, "stage0_l": 0.09452, "stage0_h": 0.42553, "stage1_loss_instance_mil": 0.1706, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.08036, "stage1_mean_ious": 0.35999, "stage1_s": 0.0, "stage1_m": 0.02774, "stage1_l": 0.07224, "stage1_h": 0.39289, "loss": 0.26734, "grad_norm": 19.76352, "time": 1.74005}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07222, "stage0_loss_instance_mil": 0.0147, "stage0_bag_acc": 99.27757, "stage0_mean_ious": 0.36884, "stage0_s": 0.0, "stage0_m": 0.02824, "stage0_l": 0.13692, "stage0_h": 0.404, "stage1_loss_instance_mil": 0.16265, "stage1_bag_acc": 99.29117, "stage1_neg_loss": 0.06306, "stage1_mean_ious": 0.33832, "stage1_s": 0.0, "stage1_m": 0.01824, "stage1_l": 0.10998, "stage1_h": 0.37354, "loss": 0.24041, "grad_norm": 14.03004, "time": 1.76552}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02402, "stage0_loss_instance_mil": 0.01345, "stage0_bag_acc": 99.2432, "stage0_mean_ious": 0.36652, "stage0_s": 0.0, "stage0_m": 0.03047, "stage0_l": 0.11004, "stage0_h": 0.40193, "stage1_loss_instance_mil": 0.17516, "stage1_bag_acc": 99.41399, "stage1_neg_loss": 0.06668, "stage1_mean_ious": 0.33299, "stage1_s": 0.0, "stage1_m": 0.01733, "stage1_l": 0.09826, "stage1_h": 0.36712, "loss": 0.2553, "grad_norm": 14.0501, "time": 1.68168}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02774, "stage0_loss_instance_mil": 0.01743, "stage0_bag_acc": 98.91765, "stage0_mean_ious": 0.38287, "stage0_s": 0.0, "stage0_m": 0.06095, "stage0_l": 0.14204, "stage0_h": 0.41682, "stage1_loss_instance_mil": 0.14444, "stage1_bag_acc": 98.96717, "stage1_neg_loss": 0.054, "stage1_mean_ious": 0.35599, "stage1_s": 0.0, "stage1_m": 0.05362, "stage1_l": 0.12785, "stage1_h": 0.38877, "loss": 0.21586, "grad_norm": 10.27038, "time": 1.76374}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07287, "stage0_loss_instance_mil": 0.0086, "stage0_bag_acc": 99.70193, "stage0_mean_ious": 0.41915, "stage0_s": 0.0, "stage0_m": 0.04625, "stage0_l": 0.12785, "stage0_h": 0.45754, "stage1_loss_instance_mil": 0.1326, "stage1_bag_acc": 99.68804, "stage1_neg_loss": 0.06487, "stage1_mean_ious": 0.38265, "stage1_s": 0.0, "stage1_m": 0.03269, "stage1_l": 0.11394, "stage1_h": 0.41994, "loss": 0.20606, "grad_norm": 12.73158, "time": 1.75974}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.0256, "stage0_loss_instance_mil": 0.01211, "stage0_bag_acc": 99.30795, "stage0_mean_ious": 0.38195, "stage0_s": 0.0, "stage0_m": 0.05589, "stage0_l": 0.14849, "stage0_h": 0.4249, "stage1_loss_instance_mil": 0.14602, "stage1_bag_acc": 99.38892, "stage1_neg_loss": 0.06645, "stage1_mean_ious": 0.35533, "stage1_s": 0.0, "stage1_m": 0.04035, "stage1_l": 0.13628, "stage1_h": 0.39745, "loss": 0.22458, "grad_norm": 15.44308, "time": 1.74401}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02603, "stage0_loss_instance_mil": 0.02279, "stage0_bag_acc": 98.87381, "stage0_mean_ious": 0.41549, "stage0_s": 0.0, "stage0_m": 0.04512, "stage0_l": 0.15734, "stage0_h": 0.45524, "stage1_loss_instance_mil": 0.11985, "stage1_bag_acc": 98.91495, "stage1_neg_loss": 0.04997, "stage1_mean_ious": 0.38613, "stage1_s": 0.0, "stage1_m": 0.03444, "stage1_l": 0.15, "stage1_h": 0.42454, "loss": 0.1926, "grad_norm": 9.00249, "time": 1.73782}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.088, "bbox_mAP_50": 0.307, "bbox_mAP_75": 0.157, "bbox_mAP_s": 0.05, "bbox_mAP_m": 0.027, "bbox_mAP_l": 0.009, "bbox_mAP_copypaste": "0.088 0.307 0.157 0.050 0.027 0.009"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07515, "stage0_loss_instance_mil": 0.01068, "stage0_bag_acc": 99.32478, "stage0_mean_ious": 0.38346, "stage0_s": 0.0, "stage0_m": 0.04232, "stage0_l": 0.10291, "stage0_h": 0.42285, "stage1_loss_instance_mil": 0.1016, "stage1_bag_acc": 99.82143, "stage1_neg_loss": 0.04874, "stage1_mean_ious": 0.35388, "stage1_s": 0.0, "stage1_m": 0.03113, "stage1_l": 0.08864, "stage1_h": 0.3914, "loss": 0.16102, "grad_norm": 7.94838, "time": 1.78841}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02677, "stage0_loss_instance_mil": 0.01384, "stage0_bag_acc": 99.35963, "stage0_mean_ious": 0.41023, "stage0_s": 0.0, "stage0_m": 0.0336, "stage0_l": 0.14343, "stage0_h": 0.43868, "stage1_loss_instance_mil": 0.1184, "stage1_bag_acc": 99.1013, "stage1_neg_loss": 0.0499, "stage1_mean_ious": 0.38884, "stage1_s": 0.0, "stage1_m": 0.02486, "stage1_l": 0.13134, "stage1_h": 0.41624, "loss": 0.18215, "grad_norm": 9.19099, "time": 1.7514}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02564, "stage0_loss_instance_mil": 0.01499, "stage0_bag_acc": 99.06815, "stage0_mean_ious": 0.39385, "stage0_s": 0.00815, "stage0_m": 0.03015, "stage0_l": 0.129, "stage0_h": 0.42825, "stage1_loss_instance_mil": 0.10018, "stage1_bag_acc": 99.46861, "stage1_neg_loss": 0.04646, "stage1_mean_ious": 0.36759, "stage1_s": 0.00931, "stage1_m": 0.02198, "stage1_l": 0.11059, "stage1_h": 0.40268, "loss": 0.16163, "grad_norm": 8.58198, "time": 1.7433}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.0809, "stage0_loss_instance_mil": 0.0175, "stage0_bag_acc": 98.77887, "stage0_mean_ious": 0.38577, "stage0_s": 0.0, "stage0_m": 0.02278, "stage0_l": 0.1627, "stage0_h": 0.41297, "stage1_loss_instance_mil": 0.10341, "stage1_bag_acc": 99.22246, "stage1_neg_loss": 0.0447, "stage1_mean_ious": 0.36499, "stage1_s": 0.0, "stage1_m": 0.01442, "stage1_l": 0.151, "stage1_h": 0.39132, "loss": 0.16561, "grad_norm": 8.62069, "time": 1.81282}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02924, "stage0_loss_instance_mil": 0.01184, "stage0_bag_acc": 99.40528, "stage0_mean_ious": 0.40771, "stage0_s": 0.0, "stage0_m": 0.02213, "stage0_l": 0.15019, "stage0_h": 0.44379, "stage1_loss_instance_mil": 0.1101, "stage1_bag_acc": 99.11917, "stage1_neg_loss": 0.04701, "stage1_mean_ious": 0.39099, "stage1_s": 0.0, "stage1_m": 0.01347, "stage1_l": 0.14301, "stage1_h": 0.42614, "loss": 0.16895, "grad_norm": 9.30326, "time": 1.78609}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02912, "stage0_loss_instance_mil": 0.00875, "stage0_bag_acc": 99.33214, "stage0_mean_ious": 0.38781, "stage0_s": 0.0, "stage0_m": 0.04814, "stage0_l": 0.10013, "stage0_h": 0.42242, "stage1_loss_instance_mil": 0.09442, "stage1_bag_acc": 99.82066, "stage1_neg_loss": 0.0438, "stage1_mean_ious": 0.36255, "stage1_s": 0.0, "stage1_m": 0.03415, "stage1_l": 0.07989, "stage1_h": 0.39844, "loss": 0.14697, "grad_norm": 7.33587, "time": 1.73173}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07669, "stage0_loss_instance_mil": 0.00759, "stage0_bag_acc": 99.53513, "stage0_mean_ious": 0.39194, "stage0_s": 0.0, "stage0_m": 0.04553, "stage0_l": 0.14554, "stage0_h": 0.43017, "stage1_loss_instance_mil": 0.07239, "stage1_bag_acc": 99.76389, "stage1_neg_loss": 0.03436, "stage1_mean_ious": 0.36857, "stage1_s": 0.0, "stage1_m": 0.03398, "stage1_l": 0.12077, "stage1_h": 0.40699, "loss": 0.11434, "grad_norm": 5.1628, "time": 1.81188}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02589, "stage0_loss_instance_mil": 0.00275, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.37743, "stage0_s": 0.0, "stage0_m": 0.02575, "stage0_l": 0.11347, "stage0_h": 0.41957, "stage1_loss_instance_mil": 0.07002, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03798, "stage1_mean_ious": 0.35705, "stage1_s": 0.0, "stage1_m": 0.02181, "stage1_l": 0.09629, "stage1_h": 0.39834, "loss": 0.11076, "grad_norm": 5.75131, "time": 1.72724}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02468, "stage0_loss_instance_mil": 0.00189, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.39613, "stage0_s": 0.0, "stage0_m": 0.02827, "stage0_l": 0.16184, "stage0_h": 0.42868, "stage1_loss_instance_mil": 0.07876, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03915, "stage1_mean_ious": 0.37192, "stage1_s": 0.0, "stage1_m": 0.01793, "stage1_l": 0.15119, "stage1_h": 0.40377, "loss": 0.1198, "grad_norm": 5.71378, "time": 1.73733}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 180, "bbox_mAP": 0.102, "bbox_mAP_50": 0.33, "bbox_mAP_75": 0.18, "bbox_mAP_s": 0.075, "bbox_mAP_m": 0.041, "bbox_mAP_l": 0.015, "bbox_mAP_copypaste": "0.102 0.330 0.180 0.075 0.041 0.015"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07525, "stage0_loss_instance_mil": 0.00548, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.38717, "stage0_s": 0.0, "stage0_m": 0.02315, "stage0_l": 0.13817, "stage0_h": 0.4286, "stage1_loss_instance_mil": 0.06863, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.03985, "stage1_mean_ious": 0.3659, "stage1_s": 0.0, "stage1_m": 0.01546, "stage1_l": 0.12648, "stage1_h": 0.405, "loss": 0.11396, "grad_norm": 5.64674, "time": 1.76352}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02478, "stage0_loss_instance_mil": 0.00814, "stage0_bag_acc": 99.86667, "stage0_mean_ious": 0.38312, "stage0_s": 0.00804, "stage0_m": 0.03827, "stage0_l": 0.16977, "stage0_h": 0.41675, "stage1_loss_instance_mil": 0.07444, "stage1_bag_acc": 99.86667, "stage1_neg_loss": 0.03975, "stage1_mean_ious": 0.36131, "stage1_s": 0.00896, "stage1_m": 0.02947, "stage1_l": 0.161, "stage1_h": 0.39519, "loss": 0.12233, "grad_norm": 6.09493, "time": 1.74558}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.0256, "stage0_loss_instance_mil": 0.00296, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.39427, "stage0_s": 0.0, "stage0_m": 0.01451, "stage0_l": 0.12899, "stage0_h": 0.42864, "stage1_loss_instance_mil": 0.06446, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.03708, "stage1_mean_ious": 0.38174, "stage1_s": 0.0, "stage1_m": 0.01054, "stage1_l": 0.1237, "stage1_h": 0.41509, "loss": 0.10449, "grad_norm": 5.78742, "time": 1.75477}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07494, "stage0_loss_instance_mil": 0.00149, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.3924, "stage0_s": 0.0, "stage0_m": 0.04905, "stage0_l": 0.11675, "stage0_h": 0.43425, "stage1_loss_instance_mil": 0.06809, "stage1_bag_acc": 99.86667, "stage1_neg_loss": 0.03711, "stage1_mean_ious": 0.36678, "stage1_s": 0.0, "stage1_m": 0.03651, "stage1_l": 0.1043, "stage1_h": 0.40826, "loss": 0.10669, "grad_norm": 5.40106, "time": 1.79085}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02694, "stage0_loss_instance_mil": 0.00136, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.39131, "stage0_s": 0.0, "stage0_m": 0.01958, "stage0_l": 0.14825, "stage0_h": 0.42296, "stage1_loss_instance_mil": 0.06341, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.033, "stage1_mean_ious": 0.36897, "stage1_s": 0.0, "stage1_m": 0.01189, "stage1_l": 0.13504, "stage1_h": 0.39985, "loss": 0.09777, "grad_norm": 4.89323, "time": 1.7697}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02636, "stage0_loss_instance_mil": 0.002, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.39965, "stage0_s": 0.0, "stage0_m": 0.03577, "stage0_l": 0.10921, "stage0_h": 0.44424, "stage1_loss_instance_mil": 0.0675, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03778, "stage1_mean_ious": 0.37535, "stage1_s": 0.0, "stage1_m": 0.02299, "stage1_l": 0.09535, "stage1_h": 0.4194, "loss": 0.10728, "grad_norm": 5.62243, "time": 1.72861}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07289, "stage0_loss_instance_mil": 0.00383, "stage0_bag_acc": 99.90909, "stage0_mean_ious": 0.37574, "stage0_s": 0.0, "stage0_m": 0.04666, "stage0_l": 0.12922, "stage0_h": 0.40751, "stage1_loss_instance_mil": 0.06074, "stage1_bag_acc": 99.90909, "stage1_neg_loss": 0.0407, "stage1_mean_ious": 0.35488, "stage1_s": 0.0, "stage1_m": 0.0373, "stage1_l": 0.11396, "stage1_h": 0.38794, "loss": 0.10527, "grad_norm": 5.56662, "time": 1.78265}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18840, "data_time": 0.02536, "stage0_loss_instance_mil": 0.00356, "stage0_bag_acc": 99.79144, "stage0_mean_ious": 0.40316, "stage0_s": 0.0, "stage0_m": 0.03036, "stage0_l": 0.14085, "stage0_h": 0.43369, "stage1_loss_instance_mil": 0.06903, "stage1_bag_acc": 99.88235, "stage1_neg_loss": 0.03868, "stage1_mean_ious": 0.37916, "stage1_s": 0.0, "stage1_m": 0.01803, "stage1_l": 0.13039, "stage1_h": 0.40891, "loss": 0.11128, "grad_norm": 4.98686, "time": 1.7488}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18840, "data_time": 0.02585, "stage0_loss_instance_mil": 0.00211, "stage0_bag_acc": 99.91667, "stage0_mean_ious": 0.3949, "stage0_s": 0.0, "stage0_m": 0.00925, "stage0_l": 0.12918, "stage0_h": 0.42554, "stage1_loss_instance_mil": 0.06192, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03461, "stage1_mean_ious": 0.37574, "stage1_s": 0.0, "stage1_m": 0.00597, "stage1_l": 0.11855, "stage1_h": 0.40639, "loss": 0.09864, "grad_norm": 5.41067, "time": 1.76846}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 180, "bbox_mAP": 0.103, "bbox_mAP_50": 0.337, "bbox_mAP_75": 0.184, "bbox_mAP_s": 0.075, "bbox_mAP_m": 0.039, "bbox_mAP_l": 0.014, "bbox_mAP_copypaste": "0.103 0.337 0.184 0.075 0.039 0.014"}
