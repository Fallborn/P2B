{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=6,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18767, "data_time": 0.0769, "stage0_loss_instance_mil": 0.66046, "stage0_bag_acc": 25.68851, "stage0_mean_ious": 0.07817, "stage0_s": 0.0, "stage0_m": 0.05351, "stage0_l": 0.1044, "stage0_h": 0.07085, "stage1_loss_instance_mil": 0.20704, "stage1_bag_acc": 16.6898, "stage1_neg_loss": 0.00288, "stage1_mean_ious": 0.07774, "stage1_s": 0.0, "stage1_m": 0.05572, "stage1_l": 0.10756, "stage1_h": 0.06932, "loss": 0.87038, "grad_norm": 3.47659, "time": 1.83642}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18767, "data_time": 0.02631, "stage0_loss_instance_mil": 0.54936, "stage0_bag_acc": 40.38653, "stage0_mean_ious": 0.08283, "stage0_s": 0.0, "stage0_m": 0.0374, "stage0_l": 0.09729, "stage0_h": 0.07379, "stage1_loss_instance_mil": 0.26516, "stage1_bag_acc": 24.50006, "stage1_neg_loss": 0.01068, "stage1_mean_ious": 0.08281, "stage1_s": 0.0, "stage1_m": 0.03914, "stage1_l": 0.09797, "stage1_h": 0.07341, "loss": 0.82521, "grad_norm": 5.18871, "time": 1.72971}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18767, "data_time": 0.02535, "stage0_loss_instance_mil": 0.24845, "stage0_bag_acc": 89.20994, "stage0_mean_ious": 0.08948, "stage0_s": 0.0, "stage0_m": 0.0273, "stage0_l": 0.13412, "stage0_h": 0.07895, "stage1_loss_instance_mil": 0.35775, "stage1_bag_acc": 77.53097, "stage1_neg_loss": 0.06795, "stage1_mean_ious": 0.08938, "stage1_s": 0.0, "stage1_m": 0.02667, "stage1_l": 0.13187, "stage1_h": 0.07903, "loss": 0.67416, "grad_norm": 10.23163, "time": 1.72205}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18767, "data_time": 0.07732, "stage0_loss_instance_mil": 0.11323, "stage0_bag_acc": 93.38664, "stage0_mean_ious": 0.0963, "stage0_s": 0.0, "stage0_m": 0.05312, "stage0_l": 0.15215, "stage0_h": 0.08584, "stage1_loss_instance_mil": 0.3465, "stage1_bag_acc": 95.81132, "stage1_neg_loss": 0.0799, "stage1_mean_ious": 0.09385, "stage1_s": 0.0, "stage1_m": 0.04964, "stage1_l": 0.15134, "stage1_h": 0.0832, "loss": 0.53963, "grad_norm": 11.02801, "time": 1.79253}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 2e-05, "memory": 18767, "data_time": 0.02585, "stage0_loss_instance_mil": 0.1092, "stage0_bag_acc": 93.82993, "stage0_mean_ious": 0.08612, "stage0_s": 0.0, "stage0_m": 0.03804, "stage0_l": 0.10575, "stage0_h": 0.07912, "stage1_loss_instance_mil": 0.32111, "stage1_bag_acc": 94.93273, "stage1_neg_loss": 0.08029, "stage1_mean_ious": 0.08198, "stage1_s": 0.0, "stage1_m": 0.03723, "stage1_l": 0.09884, "stage1_h": 0.07522, "loss": 0.51061, "grad_norm": 9.64556, "time": 1.70011}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18767, "data_time": 0.02675, "stage0_loss_instance_mil": 0.07426, "stage0_bag_acc": 96.03201, "stage0_mean_ious": 0.09149, "stage0_s": 0.00647, "stage0_m": 0.02458, "stage0_l": 0.09952, "stage0_h": 0.08561, "stage1_loss_instance_mil": 0.29021, "stage1_bag_acc": 95.99704, "stage1_neg_loss": 0.07831, "stage1_mean_ious": 0.08708, "stage1_s": 0.00448, "stage1_m": 0.02146, "stage1_l": 0.09335, "stage1_h": 0.08204, "loss": 0.44279, "grad_norm": 10.20031, "time": 1.74028}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 3e-05, "memory": 18767, "data_time": 0.07884, "stage0_loss_instance_mil": 0.08074, "stage0_bag_acc": 94.38395, "stage0_mean_ious": 0.0876, "stage0_s": 0.00719, "stage0_m": 0.02759, "stage0_l": 0.10901, "stage0_h": 0.08037, "stage1_loss_instance_mil": 0.25558, "stage1_bag_acc": 95.41691, "stage1_neg_loss": 0.07751, "stage1_mean_ious": 0.08494, "stage1_s": 0.00658, "stage1_m": 0.02644, "stage1_l": 0.10622, "stage1_h": 0.07777, "loss": 0.41383, "grad_norm": 10.83131, "time": 1.77806}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 4e-05, "memory": 18767, "data_time": 0.02572, "stage0_loss_instance_mil": 0.06988, "stage0_bag_acc": 94.8305, "stage0_mean_ious": 0.09757, "stage0_s": 0.0, "stage0_m": 0.03122, "stage0_l": 0.12235, "stage0_h": 0.0891, "stage1_loss_instance_mil": 0.25564, "stage1_bag_acc": 96.28765, "stage1_neg_loss": 0.07153, "stage1_mean_ious": 0.09033, "stage1_s": 0.0, "stage1_m": 0.0244, "stage1_l": 0.113, "stage1_h": 0.08257, "loss": 0.39705, "grad_norm": 12.76668, "time": 1.72492}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 4e-05, "memory": 18767, "data_time": 0.02662, "stage0_loss_instance_mil": 0.04709, "stage0_bag_acc": 96.70382, "stage0_mean_ious": 0.09777, "stage0_s": 0.0, "stage0_m": 0.02365, "stage0_l": 0.1163, "stage0_h": 0.08955, "stage1_loss_instance_mil": 0.22809, "stage1_bag_acc": 97.74007, "stage1_neg_loss": 0.07492, "stage1_mean_ious": 0.0908, "stage1_s": 0.0, "stage1_m": 0.02156, "stage1_l": 0.113, "stage1_h": 0.0823, "loss": 0.35011, "grad_norm": 11.34715, "time": 1.71098}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18767, "data_time": 0.07447, "stage0_loss_instance_mil": 0.05759, "stage0_bag_acc": 95.64056, "stage0_mean_ious": 0.09196, "stage0_s": 0.0, "stage0_m": 0.01922, "stage0_l": 0.11495, "stage0_h": 0.08477, "stage1_loss_instance_mil": 0.2154, "stage1_bag_acc": 96.48173, "stage1_neg_loss": 0.07553, "stage1_mean_ious": 0.08489, "stage1_s": 0.0, "stage1_m": 0.0159, "stage1_l": 0.10634, "stage1_h": 0.07831, "loss": 0.34853, "grad_norm": 14.8941, "time": 1.76176}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18767, "data_time": 0.02724, "stage0_loss_instance_mil": 0.05501, "stage0_bag_acc": 95.78568, "stage0_mean_ious": 0.09616, "stage0_s": 0.0, "stage0_m": 0.02817, "stage0_l": 0.13282, "stage0_h": 0.08943, "stage1_loss_instance_mil": 0.20502, "stage1_bag_acc": 96.77102, "stage1_neg_loss": 0.06263, "stage1_mean_ious": 0.08808, "stage1_s": 0.0, "stage1_m": 0.02544, "stage1_l": 0.12371, "stage1_h": 0.08138, "loss": 0.32267, "grad_norm": 11.1654, "time": 1.76068}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18767, "data_time": 0.02644, "stage0_loss_instance_mil": 0.03555, "stage0_bag_acc": 97.7718, "stage0_mean_ious": 0.09501, "stage0_s": 0.0, "stage0_m": 0.01839, "stage0_l": 0.11699, "stage0_h": 0.08871, "stage1_loss_instance_mil": 0.16993, "stage1_bag_acc": 98.3219, "stage1_neg_loss": 0.06333, "stage1_mean_ious": 0.0868, "stage1_s": 0.0, "stage1_m": 0.01538, "stage1_l": 0.10744, "stage1_h": 0.0811, "loss": 0.26881, "grad_norm": 9.07884, "time": 1.77902}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18767, "data_time": 0.07873, "stage0_loss_instance_mil": 0.028, "stage0_bag_acc": 98.43228, "stage0_mean_ious": 0.09449, "stage0_s": 0.0, "stage0_m": 0.03767, "stage0_l": 0.1191, "stage0_h": 0.08555, "stage1_loss_instance_mil": 0.17473, "stage1_bag_acc": 97.98585, "stage1_neg_loss": 0.06346, "stage1_mean_ious": 0.08687, "stage1_s": 0.0, "stage1_m": 0.03476, "stage1_l": 0.11177, "stage1_h": 0.07855, "loss": 0.2662, "grad_norm": 9.96347, "time": 1.82139}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18767, "data_time": 0.02675, "stage0_loss_instance_mil": 0.04504, "stage0_bag_acc": 97.12878, "stage0_mean_ious": 0.09374, "stage0_s": 0.0, "stage0_m": 0.03425, "stage0_l": 0.10042, "stage0_h": 0.08614, "stage1_loss_instance_mil": 0.17349, "stage1_bag_acc": 97.87901, "stage1_neg_loss": 0.0591, "stage1_mean_ious": 0.08677, "stage1_s": 0.0, "stage1_m": 0.03014, "stage1_l": 0.0913, "stage1_h": 0.0801, "loss": 0.27762, "grad_norm": 10.52913, "time": 1.75438}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18767, "data_time": 0.02618, "stage0_loss_instance_mil": 0.04678, "stage0_bag_acc": 97.04674, "stage0_mean_ious": 0.0994, "stage0_s": 0.0, "stage0_m": 0.02538, "stage0_l": 0.12081, "stage0_h": 0.09025, "stage1_loss_instance_mil": 0.1662, "stage1_bag_acc": 98.29827, "stage1_neg_loss": 0.05798, "stage1_mean_ious": 0.09175, "stage1_s": 0.0, "stage1_m": 0.02498, "stage1_l": 0.11721, "stage1_h": 0.0824, "loss": 0.27096, "grad_norm": 11.11162, "time": 1.74726}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18767, "data_time": 0.08226, "stage0_loss_instance_mil": 0.02011, "stage0_bag_acc": 98.55483, "stage0_mean_ious": 0.09175, "stage0_s": 0.0, "stage0_m": 0.02736, "stage0_l": 0.1172, "stage0_h": 0.08429, "stage1_loss_instance_mil": 0.13358, "stage1_bag_acc": 98.49959, "stage1_neg_loss": 0.05148, "stage1_mean_ious": 0.0852, "stage1_s": 0.0, "stage1_m": 0.02779, "stage1_l": 0.11131, "stage1_h": 0.07788, "loss": 0.20517, "grad_norm": 7.66019, "time": 1.79583}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18767, "data_time": 0.03351, "stage0_loss_instance_mil": 0.02928, "stage0_bag_acc": 97.87279, "stage0_mean_ious": 0.09062, "stage0_s": 0.0, "stage0_m": 0.04559, "stage0_l": 0.10948, "stage0_h": 0.08243, "stage1_loss_instance_mil": 0.13416, "stage1_bag_acc": 98.30184, "stage1_neg_loss": 0.04917, "stage1_mean_ious": 0.08525, "stage1_s": 0.0, "stage1_m": 0.04253, "stage1_l": 0.10592, "stage1_h": 0.07766, "loss": 0.21261, "grad_norm": 7.04914, "time": 1.75005}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18767, "data_time": 0.03189, "stage0_loss_instance_mil": 0.0376, "stage0_bag_acc": 97.83415, "stage0_mean_ious": 0.09192, "stage0_s": 0.0, "stage0_m": 0.03746, "stage0_l": 0.13387, "stage0_h": 0.08112, "stage1_loss_instance_mil": 0.14124, "stage1_bag_acc": 97.82741, "stage1_neg_loss": 0.05632, "stage1_mean_ious": 0.08536, "stage1_s": 0.0, "stage1_m": 0.03535, "stage1_l": 0.12774, "stage1_h": 0.07473, "loss": 0.23516, "grad_norm": 9.55646, "time": 1.74485}
{"mode": "val", "epoch": 6, "iter": 150, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.012, "bbox_mAP_50": 0.046, "bbox_mAP_75": 0.017, "bbox_mAP_s": 0.008, "bbox_mAP_m": 0.004, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.012 0.046 0.017 0.008 0.004 0.003"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18767, "data_time": 0.0763, "stage0_loss_instance_mil": 0.02584, "stage0_bag_acc": 98.18649, "stage0_mean_ious": 0.09195, "stage0_s": 0.0, "stage0_m": 0.03759, "stage0_l": 0.11734, "stage0_h": 0.08271, "stage1_loss_instance_mil": 0.12786, "stage1_bag_acc": 98.97422, "stage1_neg_loss": 0.04859, "stage1_mean_ious": 0.08496, "stage1_s": 0.0, "stage1_m": 0.03571, "stage1_l": 0.11196, "stage1_h": 0.07634, "loss": 0.20229, "grad_norm": 8.12787, "time": 1.78599}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18767, "data_time": 0.02599, "stage0_loss_instance_mil": 0.03201, "stage0_bag_acc": 97.29726, "stage0_mean_ious": 0.08723, "stage0_s": 0.0, "stage0_m": 0.0328, "stage0_l": 0.11457, "stage0_h": 0.078, "stage1_loss_instance_mil": 0.13001, "stage1_bag_acc": 98.1818, "stage1_neg_loss": 0.04861, "stage1_mean_ious": 0.08119, "stage1_s": 0.0, "stage1_m": 0.03179, "stage1_l": 0.10535, "stage1_h": 0.07263, "loss": 0.21062, "grad_norm": 8.23108, "time": 1.7078}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18767, "data_time": 0.02725, "stage0_loss_instance_mil": 0.02834, "stage0_bag_acc": 98.37369, "stage0_mean_ious": 0.08882, "stage0_s": 0.0, "stage0_m": 0.0501, "stage0_l": 0.11515, "stage0_h": 0.07789, "stage1_loss_instance_mil": 0.11534, "stage1_bag_acc": 98.90566, "stage1_neg_loss": 0.04628, "stage1_mean_ious": 0.08089, "stage1_s": 0.0, "stage1_m": 0.04668, "stage1_l": 0.1094, "stage1_h": 0.07025, "loss": 0.18995, "grad_norm": 6.72497, "time": 1.72517}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18767, "data_time": 0.07553, "stage0_loss_instance_mil": 0.02627, "stage0_bag_acc": 98.46784, "stage0_mean_ious": 0.08578, "stage0_s": 0.0, "stage0_m": 0.03533, "stage0_l": 0.11177, "stage0_h": 0.07635, "stage1_loss_instance_mil": 0.10806, "stage1_bag_acc": 98.81248, "stage1_neg_loss": 0.0434, "stage1_mean_ious": 0.08111, "stage1_s": 0.0, "stage1_m": 0.03303, "stage1_l": 0.10543, "stage1_h": 0.07209, "loss": 0.17773, "grad_norm": 6.57485, "time": 1.75876}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18767, "data_time": 0.02693, "stage0_loss_instance_mil": 0.01666, "stage0_bag_acc": 98.74363, "stage0_mean_ious": 0.08847, "stage0_s": 0.0, "stage0_m": 0.0496, "stage0_l": 0.11602, "stage0_h": 0.07743, "stage1_loss_instance_mil": 0.11421, "stage1_bag_acc": 99.43397, "stage1_neg_loss": 0.04963, "stage1_mean_ious": 0.08307, "stage1_s": 0.0, "stage1_m": 0.04553, "stage1_l": 0.11059, "stage1_h": 0.07266, "loss": 0.1805, "grad_norm": 7.12196, "time": 1.78419}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18767, "data_time": 0.02734, "stage0_loss_instance_mil": 0.03015, "stage0_bag_acc": 97.68759, "stage0_mean_ious": 0.08071, "stage0_s": 0.00565, "stage0_m": 0.02412, "stage0_l": 0.09842, "stage0_h": 0.07241, "stage1_loss_instance_mil": 0.12048, "stage1_bag_acc": 98.34773, "stage1_neg_loss": 0.04667, "stage1_mean_ious": 0.07672, "stage1_s": 0.00416, "stage1_m": 0.026, "stage1_l": 0.09454, "stage1_h": 0.06814, "loss": 0.19731, "grad_norm": 7.17077, "time": 1.75282}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18767, "data_time": 0.07691, "stage0_loss_instance_mil": 0.01595, "stage0_bag_acc": 99.05287, "stage0_mean_ious": 0.07773, "stage0_s": 0.0, "stage0_m": 0.04328, "stage0_l": 0.09625, "stage0_h": 0.06947, "stage1_loss_instance_mil": 0.09998, "stage1_bag_acc": 99.06803, "stage1_neg_loss": 0.04544, "stage1_mean_ious": 0.07531, "stage1_s": 0.0, "stage1_m": 0.0399, "stage1_l": 0.09664, "stage1_h": 0.06692, "loss": 0.16137, "grad_norm": 4.81338, "time": 1.82842}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18767, "data_time": 0.02673, "stage0_loss_instance_mil": 0.01295, "stage0_bag_acc": 99.41989, "stage0_mean_ious": 0.08263, "stage0_s": 0.00648, "stage0_m": 0.0512, "stage0_l": 0.10944, "stage0_h": 0.0715, "stage1_loss_instance_mil": 0.10067, "stage1_bag_acc": 99.3443, "stage1_neg_loss": 0.04261, "stage1_mean_ious": 0.07934, "stage1_s": 0.00658, "stage1_m": 0.05246, "stage1_l": 0.10579, "stage1_h": 0.06835, "loss": 0.15623, "grad_norm": 4.86964, "time": 1.75041}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18767, "data_time": 0.02689, "stage0_loss_instance_mil": 0.00689, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.08085, "stage0_s": 0.0, "stage0_m": 0.04108, "stage0_l": 0.11327, "stage0_h": 0.07049, "stage1_loss_instance_mil": 0.09502, "stage1_bag_acc": 99.6364, "stage1_neg_loss": 0.04146, "stage1_mean_ious": 0.07704, "stage1_s": 0.0, "stage1_m": 0.04027, "stage1_l": 0.10857, "stage1_h": 0.06719, "loss": 0.14336, "grad_norm": 4.35683, "time": 1.73356}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18767, "data_time": 0.07603, "stage0_loss_instance_mil": 0.00596, "stage0_bag_acc": 99.68409, "stage0_mean_ious": 0.08343, "stage0_s": 0.0, "stage0_m": 0.02417, "stage0_l": 0.11318, "stage0_h": 0.07324, "stage1_loss_instance_mil": 0.09128, "stage1_bag_acc": 99.52609, "stage1_neg_loss": 0.03751, "stage1_mean_ious": 0.07909, "stage1_s": 0.0, "stage1_m": 0.02262, "stage1_l": 0.10936, "stage1_h": 0.06866, "loss": 0.13475, "grad_norm": 4.21215, "time": 1.8419}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18767, "data_time": 0.02757, "stage0_loss_instance_mil": 0.02113, "stage0_bag_acc": 98.34431, "stage0_mean_ious": 0.08465, "stage0_s": 0.0, "stage0_m": 0.03364, "stage0_l": 0.10892, "stage0_h": 0.07618, "stage1_loss_instance_mil": 0.08862, "stage1_bag_acc": 99.24883, "stage1_neg_loss": 0.0436, "stage1_mean_ious": 0.07965, "stage1_s": 0.0, "stage1_m": 0.0351, "stage1_l": 0.10358, "stage1_h": 0.07112, "loss": 0.15335, "grad_norm": 4.80263, "time": 1.72385}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18767, "data_time": 0.02784, "stage0_loss_instance_mil": 0.011, "stage0_bag_acc": 99.35214, "stage0_mean_ious": 0.07881, "stage0_s": 0.0, "stage0_m": 0.02757, "stage0_l": 0.10676, "stage0_h": 0.06937, "stage1_loss_instance_mil": 0.09796, "stage1_bag_acc": 99.48947, "stage1_neg_loss": 0.04312, "stage1_mean_ious": 0.07495, "stage1_s": 0.0, "stage1_m": 0.02864, "stage1_l": 0.09993, "stage1_h": 0.06589, "loss": 0.15209, "grad_norm": 4.77797, "time": 1.74093}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18775, "data_time": 0.08033, "stage0_loss_instance_mil": 0.01093, "stage0_bag_acc": 99.26851, "stage0_mean_ious": 0.0813, "stage0_s": 0.0, "stage0_m": 0.04337, "stage0_l": 0.1066, "stage0_h": 0.07277, "stage1_loss_instance_mil": 0.09206, "stage1_bag_acc": 99.63333, "stage1_neg_loss": 0.03827, "stage1_mean_ious": 0.07819, "stage1_s": 0.0, "stage1_m": 0.04061, "stage1_l": 0.1027, "stage1_h": 0.06985, "loss": 0.14126, "grad_norm": 4.54376, "time": 1.81705}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18775, "data_time": 0.02751, "stage0_loss_instance_mil": 0.00983, "stage0_bag_acc": 99.36486, "stage0_mean_ious": 0.07755, "stage0_s": 0.0, "stage0_m": 0.01784, "stage0_l": 0.11591, "stage0_h": 0.0675, "stage1_loss_instance_mil": 0.08324, "stage1_bag_acc": 99.56269, "stage1_neg_loss": 0.03679, "stage1_mean_ious": 0.07332, "stage1_s": 0.0, "stage1_m": 0.0175, "stage1_l": 0.10905, "stage1_h": 0.06417, "loss": 0.12986, "grad_norm": 4.71358, "time": 1.75288}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18775, "data_time": 0.02756, "stage0_loss_instance_mil": 0.00874, "stage0_bag_acc": 99.66471, "stage0_mean_ious": 0.08451, "stage0_s": 0.0, "stage0_m": 0.07301, "stage0_l": 0.11693, "stage0_h": 0.07396, "stage1_loss_instance_mil": 0.09609, "stage1_bag_acc": 99.26274, "stage1_neg_loss": 0.04474, "stage1_mean_ious": 0.07983, "stage1_s": 0.0, "stage1_m": 0.06551, "stage1_l": 0.11148, "stage1_h": 0.06975, "loss": 0.14957, "grad_norm": 4.74711, "time": 1.75118}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18775, "data_time": 0.07843, "stage0_loss_instance_mil": 0.00917, "stage0_bag_acc": 99.42228, "stage0_mean_ious": 0.07912, "stage0_s": 0.0, "stage0_m": 0.04008, "stage0_l": 0.10073, "stage0_h": 0.06936, "stage1_loss_instance_mil": 0.08091, "stage1_bag_acc": 99.63423, "stage1_neg_loss": 0.03581, "stage1_mean_ious": 0.07625, "stage1_s": 0.0, "stage1_m": 0.03815, "stage1_l": 0.09745, "stage1_h": 0.06674, "loss": 0.12589, "grad_norm": 4.54173, "time": 1.7681}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18775, "data_time": 0.02695, "stage0_loss_instance_mil": 0.00856, "stage0_bag_acc": 99.39349, "stage0_mean_ious": 0.08292, "stage0_s": 0.0, "stage0_m": 0.04033, "stage0_l": 0.11371, "stage0_h": 0.07302, "stage1_loss_instance_mil": 0.08905, "stage1_bag_acc": 99.67183, "stage1_neg_loss": 0.04431, "stage1_mean_ious": 0.07898, "stage1_s": 0.0, "stage1_m": 0.04087, "stage1_l": 0.10721, "stage1_h": 0.06926, "loss": 0.14192, "grad_norm": 4.87277, "time": 1.75651}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18775, "data_time": 0.02775, "stage0_loss_instance_mil": 0.00908, "stage0_bag_acc": 99.51291, "stage0_mean_ious": 0.08555, "stage0_s": 0.00609, "stage0_m": 0.03086, "stage0_l": 0.11226, "stage0_h": 0.07587, "stage1_loss_instance_mil": 0.08825, "stage1_bag_acc": 99.47983, "stage1_neg_loss": 0.04008, "stage1_mean_ious": 0.08084, "stage1_s": 0.00533, "stage1_m": 0.0286, "stage1_l": 0.10908, "stage1_h": 0.07143, "loss": 0.13741, "grad_norm": 4.46195, "time": 1.739}
{"mode": "val", "epoch": 12, "iter": 150, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.007, "bbox_mAP_50": 0.027, "bbox_mAP_75": 0.011, "bbox_mAP_s": 0.005, "bbox_mAP_m": 0.003, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.007 0.027 0.011 0.005 0.003 0.001"}
