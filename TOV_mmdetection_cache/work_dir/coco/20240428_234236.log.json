{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+c820f32", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPNPADNN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=2,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [4]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 19677, "data_time": 0.07338, "stage0_loss_instance_mil": 0.6964, "stage0_bag_acc": 24.63361, "stage0_mean_ious": 0.29235, "stage0_s": 0.0, "stage0_m": 0.03985, "stage0_l": 0.22107, "stage0_h": 0.29283, "stage1_loss_instance_mil": 0.17536, "stage1_bag_acc": 19.7944, "stage1_neg_loss": 0.00107, "stage1_mean_ious": 0.28662, "stage1_s": 0.0, "stage1_m": 0.03774, "stage1_l": 0.21396, "stage1_h": 0.28763, "loss": 0.87283, "grad_norm": 1.46646, "time": 1.66381}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 19680, "data_time": 0.02344, "stage0_loss_instance_mil": 0.65326, "stage0_bag_acc": 47.02473, "stage0_mean_ious": 0.31241, "stage0_s": 0.0, "stage0_m": 0.04998, "stage0_l": 0.24026, "stage0_h": 0.31781, "stage1_loss_instance_mil": 0.19426, "stage1_bag_acc": 22.34994, "stage1_neg_loss": 0.00192, "stage1_mean_ious": 0.30792, "stage1_s": 0.0, "stage1_m": 0.04477, "stage1_l": 0.22752, "stage1_h": 0.31513, "loss": 0.84944, "grad_norm": 2.32407, "time": 1.55581}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 19723, "data_time": 0.02492, "stage0_loss_instance_mil": 0.41869, "stage0_bag_acc": 82.74276, "stage0_mean_ious": 0.3132, "stage0_s": 0.0, "stage0_m": 0.04374, "stage0_l": 0.20757, "stage0_h": 0.32321, "stage1_loss_instance_mil": 0.29024, "stage1_bag_acc": 54.98317, "stage1_neg_loss": 0.03531, "stage1_mean_ious": 0.29172, "stage1_s": 0.0, "stage1_m": 0.03691, "stage1_l": 0.19492, "stage1_h": 0.3007, "loss": 0.74425, "grad_norm": 8.07324, "time": 1.62391}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 19723, "data_time": 0.07116, "stage0_loss_instance_mil": 0.16506, "stage0_bag_acc": 92.85982, "stage0_mean_ious": 0.29963, "stage0_s": 0.00057, "stage0_m": 0.03883, "stage0_l": 0.1443, "stage0_h": 0.31955, "stage1_loss_instance_mil": 0.33983, "stage1_bag_acc": 93.96184, "stage1_neg_loss": 0.07554, "stage1_mean_ious": 0.26754, "stage1_s": 0.00068, "stage1_m": 0.02749, "stage1_l": 0.11814, "stage1_h": 0.28791, "loss": 0.58043, "grad_norm": 11.07313, "time": 1.65429}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 19723, "data_time": 0.02347, "stage0_loss_instance_mil": 0.09865, "stage0_bag_acc": 95.83106, "stage0_mean_ious": 0.32046, "stage0_s": 0.0, "stage0_m": 0.0382, "stage0_l": 0.12817, "stage0_h": 0.34518, "stage1_loss_instance_mil": 0.35564, "stage1_bag_acc": 98.14882, "stage1_neg_loss": 0.09001, "stage1_mean_ious": 0.2853, "stage1_s": 0.0, "stage1_m": 0.02327, "stage1_l": 0.11183, "stage1_h": 0.30782, "loss": 0.5443, "grad_norm": 11.59626, "time": 1.67564}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 19723, "data_time": 0.02432, "stage0_loss_instance_mil": 0.06585, "stage0_bag_acc": 96.34186, "stage0_mean_ious": 0.32438, "stage0_s": 0.0, "stage0_m": 0.04159, "stage0_l": 0.1157, "stage0_h": 0.34653, "stage1_loss_instance_mil": 0.30059, "stage1_bag_acc": 97.79132, "stage1_neg_loss": 0.09284, "stage1_mean_ious": 0.28513, "stage1_s": 0.0, "stage1_m": 0.02826, "stage1_l": 0.08678, "stage1_h": 0.30702, "loss": 0.45928, "grad_norm": 12.27117, "time": 1.68359}
{"mode": "val", "epoch": 2, "iter": 180, "lr": 4e-05, "eval_iter_num": 90, "bbox_mAP": 0.052, "bbox_mAP_50": 0.192, "bbox_mAP_75": 0.093, "bbox_mAP_s": 0.027, "bbox_mAP_m": 0.01, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.052 0.192 0.093 0.027 0.010 0.004"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 19723, "data_time": 0.07353, "stage0_loss_instance_mil": 0.04523, "stage0_bag_acc": 97.2681, "stage0_mean_ious": 0.30863, "stage0_s": 0.0, "stage0_m": 0.04108, "stage0_l": 0.10712, "stage0_h": 0.33693, "stage1_loss_instance_mil": 0.28425, "stage1_bag_acc": 98.74144, "stage1_neg_loss": 0.0935, "stage1_mean_ious": 0.26672, "stage1_s": 0.0, "stage1_m": 0.02684, "stage1_l": 0.08661, "stage1_h": 0.29217, "loss": 0.42299, "grad_norm": 12.68864, "time": 1.71819}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 19723, "data_time": 0.02402, "stage0_loss_instance_mil": 0.05166, "stage0_bag_acc": 96.64468, "stage0_mean_ious": 0.30578, "stage0_s": 0.0, "stage0_m": 0.01721, "stage0_l": 0.10321, "stage0_h": 0.32946, "stage1_loss_instance_mil": 0.28283, "stage1_bag_acc": 97.86992, "stage1_neg_loss": 0.09189, "stage1_mean_ious": 0.272, "stage1_s": 0.0, "stage1_m": 0.01026, "stage1_l": 0.08295, "stage1_h": 0.29451, "loss": 0.42638, "grad_norm": 14.16129, "time": 1.69603}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 19723, "data_time": 0.02369, "stage0_loss_instance_mil": 0.03826, "stage0_bag_acc": 98.06447, "stage0_mean_ious": 0.2914, "stage0_s": 0.0, "stage0_m": 0.04111, "stage0_l": 0.09904, "stage0_h": 0.31654, "stage1_loss_instance_mil": 0.3159, "stage1_bag_acc": 98.57611, "stage1_neg_loss": 0.09525, "stage1_mean_ious": 0.25601, "stage1_s": 0.0, "stage1_m": 0.03336, "stage1_l": 0.07793, "stage1_h": 0.27936, "loss": 0.44941, "grad_norm": 14.37536, "time": 1.70617}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 19723, "data_time": 0.07389, "stage0_loss_instance_mil": 0.04707, "stage0_bag_acc": 96.54412, "stage0_mean_ious": 0.28646, "stage0_s": 0.0, "stage0_m": 0.03896, "stage0_l": 0.10292, "stage0_h": 0.31176, "stage1_loss_instance_mil": 0.24488, "stage1_bag_acc": 97.99864, "stage1_neg_loss": 0.08124, "stage1_mean_ious": 0.25685, "stage1_s": 0.0, "stage1_m": 0.02457, "stage1_l": 0.08269, "stage1_h": 0.28287, "loss": 0.3732, "grad_norm": 9.79538, "time": 1.71246}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 19723, "data_time": 0.02355, "stage0_loss_instance_mil": 0.03, "stage0_bag_acc": 98.77909, "stage0_mean_ious": 0.29744, "stage0_s": 0.0, "stage0_m": 0.0343, "stage0_l": 0.10894, "stage0_h": 0.32908, "stage1_loss_instance_mil": 0.23402, "stage1_bag_acc": 99.15294, "stage1_neg_loss": 0.08191, "stage1_mean_ious": 0.26259, "stage1_s": 0.0, "stage1_m": 0.01928, "stage1_l": 0.08066, "stage1_h": 0.29494, "loss": 0.34594, "grad_norm": 11.02884, "time": 1.69135}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 19723, "data_time": 0.02286, "stage0_loss_instance_mil": 0.03031, "stage0_bag_acc": 97.98414, "stage0_mean_ious": 0.31145, "stage0_s": 0.0, "stage0_m": 0.03031, "stage0_l": 0.10056, "stage0_h": 0.33525, "stage1_loss_instance_mil": 0.28037, "stage1_bag_acc": 98.59432, "stage1_neg_loss": 0.08616, "stage1_mean_ious": 0.27563, "stage1_s": 0.0, "stage1_m": 0.01973, "stage1_l": 0.07979, "stage1_h": 0.29899, "loss": 0.39684, "grad_norm": 14.30747, "time": 1.64504}
{"mode": "val", "epoch": 4, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.03, "bbox_mAP_50": 0.116, "bbox_mAP_75": 0.05, "bbox_mAP_s": 0.014, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.030 0.116 0.050 0.014 0.005 0.002"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 19723, "data_time": 0.073, "stage0_loss_instance_mil": 0.0288, "stage0_bag_acc": 98.03339, "stage0_mean_ious": 0.28951, "stage0_s": 0.0, "stage0_m": 0.04121, "stage0_l": 0.08779, "stage0_h": 0.31549, "stage1_loss_instance_mil": 0.23585, "stage1_bag_acc": 98.88742, "stage1_neg_loss": 0.07337, "stage1_mean_ious": 0.25073, "stage1_s": 0.0, "stage1_m": 0.02508, "stage1_l": 0.06619, "stage1_h": 0.2759, "loss": 0.33802, "grad_norm": 10.13762, "time": 1.64009}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 19723, "data_time": 0.0234, "stage0_loss_instance_mil": 0.02778, "stage0_bag_acc": 98.7198, "stage0_mean_ious": 0.30543, "stage0_s": 0.0, "stage0_m": 0.02468, "stage0_l": 0.09374, "stage0_h": 0.32886, "stage1_loss_instance_mil": 0.232, "stage1_bag_acc": 99.3568, "stage1_neg_loss": 0.08927, "stage1_mean_ious": 0.26662, "stage1_s": 0.0, "stage1_m": 0.0164, "stage1_l": 0.07225, "stage1_h": 0.28896, "loss": 0.34905, "grad_norm": 14.37901, "time": 1.65686}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 19723, "data_time": 0.02356, "stage0_loss_instance_mil": 0.02576, "stage0_bag_acc": 98.5399, "stage0_mean_ious": 0.25049, "stage0_s": 0.0, "stage0_m": 0.03099, "stage0_l": 0.0878, "stage0_h": 0.26875, "stage1_loss_instance_mil": 0.2277, "stage1_bag_acc": 98.72446, "stage1_neg_loss": 0.07051, "stage1_mean_ious": 0.21968, "stage1_s": 0.0, "stage1_m": 0.02261, "stage1_l": 0.06623, "stage1_h": 0.2377, "loss": 0.32397, "grad_norm": 9.90864, "time": 1.65432}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 19723, "data_time": 0.07492, "stage0_loss_instance_mil": 0.02137, "stage0_bag_acc": 98.93504, "stage0_mean_ious": 0.21371, "stage0_s": 0.00121, "stage0_m": 0.026, "stage0_l": 0.08391, "stage0_h": 0.23071, "stage1_loss_instance_mil": 0.21364, "stage1_bag_acc": 99.47863, "stage1_neg_loss": 0.07293, "stage1_mean_ious": 0.19025, "stage1_s": 0.00164, "stage1_m": 0.01922, "stage1_l": 0.06955, "stage1_h": 0.20667, "loss": 0.30793, "grad_norm": 8.60341, "time": 1.68541}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 19723, "data_time": 0.0244, "stage0_loss_instance_mil": 0.01525, "stage0_bag_acc": 99.21175, "stage0_mean_ious": 0.24931, "stage0_s": 0.0, "stage0_m": 0.0308, "stage0_l": 0.07754, "stage0_h": 0.27121, "stage1_loss_instance_mil": 0.23455, "stage1_bag_acc": 99.27291, "stage1_neg_loss": 0.07667, "stage1_mean_ious": 0.21851, "stage1_s": 0.0, "stage1_m": 0.01965, "stage1_l": 0.06134, "stage1_h": 0.24021, "loss": 0.32647, "grad_norm": 10.71802, "time": 1.68233}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 19723, "data_time": 0.02378, "stage0_loss_instance_mil": 0.01483, "stage0_bag_acc": 98.79434, "stage0_mean_ious": 0.21152, "stage0_s": 0.0, "stage0_m": 0.03298, "stage0_l": 0.08733, "stage0_h": 0.2241, "stage1_loss_instance_mil": 0.19526, "stage1_bag_acc": 99.46479, "stage1_neg_loss": 0.06325, "stage1_mean_ious": 0.18663, "stage1_s": 0.0, "stage1_m": 0.02137, "stage1_l": 0.0699, "stage1_h": 0.20005, "loss": 0.27334, "grad_norm": 7.67627, "time": 1.66773}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.026, "bbox_mAP_50": 0.111, "bbox_mAP_75": 0.044, "bbox_mAP_s": 0.012, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.026 0.111 0.044 0.012 0.005 0.001"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 19723, "data_time": 0.07407, "stage0_loss_instance_mil": 0.0225, "stage0_bag_acc": 98.66702, "stage0_mean_ious": 0.20496, "stage0_s": 0.0, "stage0_m": 0.01918, "stage0_l": 0.08629, "stage0_h": 0.21751, "stage1_loss_instance_mil": 0.19985, "stage1_bag_acc": 99.13805, "stage1_neg_loss": 0.06389, "stage1_mean_ious": 0.17551, "stage1_s": 0.0, "stage1_m": 0.01269, "stage1_l": 0.0667, "stage1_h": 0.18811, "loss": 0.28625, "grad_norm": 7.77599, "time": 1.69257}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 19738, "data_time": 0.02484, "stage0_loss_instance_mil": 0.02382, "stage0_bag_acc": 98.53152, "stage0_mean_ious": 0.21801, "stage0_s": 0.0, "stage0_m": 0.0298, "stage0_l": 0.09168, "stage0_h": 0.23441, "stage1_loss_instance_mil": 0.19026, "stage1_bag_acc": 99.07554, "stage1_neg_loss": 0.07314, "stage1_mean_ious": 0.18881, "stage1_s": 0.0, "stage1_m": 0.01907, "stage1_l": 0.07139, "stage1_h": 0.20538, "loss": 0.28722, "grad_norm": 9.05123, "time": 1.63424}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 19738, "data_time": 0.02388, "stage0_loss_instance_mil": 0.02191, "stage0_bag_acc": 98.501, "stage0_mean_ious": 0.18794, "stage0_s": 0.0, "stage0_m": 0.03152, "stage0_l": 0.08498, "stage0_h": 0.2011, "stage1_loss_instance_mil": 0.21164, "stage1_bag_acc": 98.67769, "stage1_neg_loss": 0.07237, "stage1_mean_ious": 0.16675, "stage1_s": 0.0, "stage1_m": 0.02031, "stage1_l": 0.06733, "stage1_h": 0.18053, "loss": 0.30593, "grad_norm": 9.67156, "time": 1.59366}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 19738, "data_time": 0.08026, "stage0_loss_instance_mil": 0.01632, "stage0_bag_acc": 99.14299, "stage0_mean_ious": 0.16677, "stage0_s": 0.0, "stage0_m": 0.03952, "stage0_l": 0.09346, "stage0_h": 0.17447, "stage1_loss_instance_mil": 0.18066, "stage1_bag_acc": 99.27627, "stage1_neg_loss": 0.06802, "stage1_mean_ious": 0.14172, "stage1_s": 0.0, "stage1_m": 0.03011, "stage1_l": 0.06928, "stage1_h": 0.15066, "loss": 0.265, "grad_norm": 6.50687, "time": 1.69707}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 19738, "data_time": 0.02655, "stage0_loss_instance_mil": 0.01311, "stage0_bag_acc": 99.03907, "stage0_mean_ious": 0.17609, "stage0_s": 0.0, "stage0_m": 0.02656, "stage0_l": 0.08975, "stage0_h": 0.1882, "stage1_loss_instance_mil": 0.18952, "stage1_bag_acc": 99.26374, "stage1_neg_loss": 0.06586, "stage1_mean_ious": 0.15535, "stage1_s": 0.0, "stage1_m": 0.02171, "stage1_l": 0.07227, "stage1_h": 0.16746, "loss": 0.26849, "grad_norm": 6.52456, "time": 1.66335}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 19738, "data_time": 0.02507, "stage0_loss_instance_mil": 0.01564, "stage0_bag_acc": 99.33125, "stage0_mean_ious": 0.19142, "stage0_s": 0.0, "stage0_m": 0.03394, "stage0_l": 0.08931, "stage0_h": 0.2, "stage1_loss_instance_mil": 0.17436, "stage1_bag_acc": 99.71197, "stage1_neg_loss": 0.0716, "stage1_mean_ious": 0.16953, "stage1_s": 0.0, "stage1_m": 0.02221, "stage1_l": 0.06797, "stage1_h": 0.18069, "loss": 0.26159, "grad_norm": 7.5999, "time": 1.64565}
{"mode": "val", "epoch": 8, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.017, "bbox_mAP_50": 0.073, "bbox_mAP_75": 0.026, "bbox_mAP_s": 0.006, "bbox_mAP_m": 0.002, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.017 0.073 0.026 0.006 0.002 0.001"}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 19738, "data_time": 0.07458, "stage0_loss_instance_mil": 0.02081, "stage0_bag_acc": 98.66974, "stage0_mean_ious": 0.17264, "stage0_s": 0.0, "stage0_m": 0.02856, "stage0_l": 0.08203, "stage0_h": 0.17993, "stage1_loss_instance_mil": 0.1701, "stage1_bag_acc": 99.21477, "stage1_neg_loss": 0.06812, "stage1_mean_ious": 0.15626, "stage1_s": 0.0, "stage1_m": 0.02143, "stage1_l": 0.068, "stage1_h": 0.16497, "loss": 0.25903, "grad_norm": 6.05219, "time": 1.68352}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 19738, "data_time": 0.02376, "stage0_loss_instance_mil": 0.01981, "stage0_bag_acc": 98.97368, "stage0_mean_ious": 0.15761, "stage0_s": 0.0, "stage0_m": 0.03098, "stage0_l": 0.08507, "stage0_h": 0.16365, "stage1_loss_instance_mil": 0.16325, "stage1_bag_acc": 99.2098, "stage1_neg_loss": 0.06445, "stage1_mean_ious": 0.13968, "stage1_s": 0.0, "stage1_m": 0.02258, "stage1_l": 0.0713, "stage1_h": 0.14646, "loss": 0.24751, "grad_norm": 4.75558, "time": 1.61464}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 19738, "data_time": 0.02331, "stage0_loss_instance_mil": 0.01529, "stage0_bag_acc": 99.22314, "stage0_mean_ious": 0.16284, "stage0_s": 0.0, "stage0_m": 0.03332, "stage0_l": 0.07309, "stage0_h": 0.16972, "stage1_loss_instance_mil": 0.16383, "stage1_bag_acc": 99.37851, "stage1_neg_loss": 0.0633, "stage1_mean_ious": 0.14716, "stage1_s": 0.0, "stage1_m": 0.02431, "stage1_l": 0.06101, "stage1_h": 0.15492, "loss": 0.24241, "grad_norm": 5.06624, "time": 1.59597}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 19738, "data_time": 0.07296, "stage0_loss_instance_mil": 0.0122, "stage0_bag_acc": 99.57121, "stage0_mean_ious": 0.14203, "stage0_s": 0.0, "stage0_m": 0.02626, "stage0_l": 0.09, "stage0_h": 0.14999, "stage1_loss_instance_mil": 0.15922, "stage1_bag_acc": 99.57121, "stage1_neg_loss": 0.06577, "stage1_mean_ious": 0.12886, "stage1_s": 0.0, "stage1_m": 0.01675, "stage1_l": 0.07359, "stage1_h": 0.13767, "loss": 0.23718, "grad_norm": 5.48695, "time": 1.66253}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 19738, "data_time": 0.02288, "stage0_loss_instance_mil": 0.00533, "stage0_bag_acc": 99.72049, "stage0_mean_ious": 0.14833, "stage0_s": 0.0, "stage0_m": 0.01969, "stage0_l": 0.08418, "stage0_h": 0.15631, "stage1_loss_instance_mil": 0.16267, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.0637, "stage1_mean_ious": 0.13399, "stage1_s": 0.0, "stage1_m": 0.01296, "stage1_l": 0.06639, "stage1_h": 0.14314, "loss": 0.2317, "grad_norm": 5.04958, "time": 1.62073}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 19738, "data_time": 0.02364, "stage0_loss_instance_mil": 0.01539, "stage0_bag_acc": 98.92988, "stage0_mean_ious": 0.15849, "stage0_s": 0.0, "stage0_m": 0.03387, "stage0_l": 0.09742, "stage0_h": 0.16539, "stage1_loss_instance_mil": 0.16548, "stage1_bag_acc": 99.38262, "stage1_neg_loss": 0.0635, "stage1_mean_ious": 0.13869, "stage1_s": 0.0, "stage1_m": 0.02626, "stage1_l": 0.07945, "stage1_h": 0.14708, "loss": 0.24438, "grad_norm": 5.36162, "time": 1.64389}
{"mode": "val", "epoch": 10, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.007, "bbox_mAP_50": 0.035, "bbox_mAP_75": 0.011, "bbox_mAP_s": 0.002, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.007 0.035 0.011 0.002 0.001 0.001"}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 19738, "data_time": 0.08084, "stage0_loss_instance_mil": 0.00611, "stage0_bag_acc": 99.60426, "stage0_mean_ious": 0.13902, "stage0_s": 0.0, "stage0_m": 0.03711, "stage0_l": 0.088, "stage0_h": 0.14373, "stage1_loss_instance_mil": 0.15895, "stage1_bag_acc": 99.70426, "stage1_neg_loss": 0.06071, "stage1_mean_ious": 0.12284, "stage1_s": 0.0, "stage1_m": 0.02363, "stage1_l": 0.06454, "stage1_h": 0.12964, "loss": 0.22577, "grad_norm": 4.61868, "time": 1.67881}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 19738, "data_time": 0.02821, "stage0_loss_instance_mil": 0.01136, "stage0_bag_acc": 99.45749, "stage0_mean_ious": 0.14348, "stage0_s": 0.0, "stage0_m": 0.02931, "stage0_l": 0.08596, "stage0_h": 0.14724, "stage1_loss_instance_mil": 0.15484, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.0603, "stage1_mean_ious": 0.12551, "stage1_s": 0.0, "stage1_m": 0.01972, "stage1_l": 0.06392, "stage1_h": 0.13108, "loss": 0.22649, "grad_norm": 4.92276, "time": 1.61087}
