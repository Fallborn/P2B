{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07773, "stage0_loss_instance_mil": 0.69821, "stage0_bag_acc": 28.15315, "stage0_mean_ious": 0.36934, "stage0_s": 0.0, "stage0_m": 0.0826, "stage0_l": 0.25459, "stage0_h": 0.38337, "stage1_loss_instance_mil": 0.17592, "stage1_bag_acc": 17.96051, "stage1_neg_loss": 0.00108, "stage1_mean_ious": 0.37253, "stage1_s": 0.0, "stage1_m": 0.088, "stage1_l": 0.27874, "stage1_h": 0.38207, "loss": 0.87521, "grad_norm": 3.21713, "time": 1.74747}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02736, "stage0_loss_instance_mil": 0.55837, "stage0_bag_acc": 58.3812, "stage0_mean_ious": 0.45718, "stage0_s": 0.0, "stage0_m": 0.06442, "stage0_l": 0.3204, "stage0_h": 0.46937, "stage1_loss_instance_mil": 0.23687, "stage1_bag_acc": 42.85599, "stage1_neg_loss": 0.01215, "stage1_mean_ious": 0.44563, "stage1_s": 0.0, "stage1_m": 0.06739, "stage1_l": 0.33624, "stage1_h": 0.45293, "loss": 0.8074, "grad_norm": 4.83305, "time": 1.72627}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02793, "stage0_loss_instance_mil": 0.24221, "stage0_bag_acc": 94.01809, "stage0_mean_ious": 0.46302, "stage0_s": 0.0, "stage0_m": 0.10868, "stage0_l": 0.29186, "stage0_h": 0.47601, "stage1_loss_instance_mil": 0.32723, "stage1_bag_acc": 84.77027, "stage1_neg_loss": 0.06515, "stage1_mean_ious": 0.4412, "stage1_s": 0.0, "stage1_m": 0.12007, "stage1_l": 0.28327, "stage1_h": 0.45186, "loss": 0.63458, "grad_norm": 10.50691, "time": 1.725}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18833, "data_time": 0.07997, "stage0_loss_instance_mil": 0.08439, "stage0_bag_acc": 95.52099, "stage0_mean_ious": 0.42477, "stage0_s": 0.0, "stage0_m": 0.06218, "stage0_l": 0.24915, "stage0_h": 0.44279, "stage1_loss_instance_mil": 0.31347, "stage1_bag_acc": 96.28036, "stage1_neg_loss": 0.084, "stage1_mean_ious": 0.39772, "stage1_s": 0.0, "stage1_m": 0.06675, "stage1_l": 0.2369, "stage1_h": 0.41374, "loss": 0.48185, "grad_norm": 13.74952, "time": 1.7741}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18833, "data_time": 0.03296, "stage0_loss_instance_mil": 0.04434, "stage0_bag_acc": 98.02066, "stage0_mean_ious": 0.43706, "stage0_s": 0.0, "stage0_m": 0.07585, "stage0_l": 0.21032, "stage0_h": 0.46307, "stage1_loss_instance_mil": 0.28132, "stage1_bag_acc": 99.02256, "stage1_neg_loss": 0.07698, "stage1_mean_ious": 0.41347, "stage1_s": 0.0, "stage1_m": 0.08766, "stage1_l": 0.21218, "stage1_h": 0.43567, "loss": 0.40264, "grad_norm": 12.98796, "time": 1.76466}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18833, "data_time": 0.02751, "stage0_loss_instance_mil": 0.05698, "stage0_bag_acc": 96.89563, "stage0_mean_ious": 0.42359, "stage0_s": 0.00666, "stage0_m": 0.02206, "stage0_l": 0.16927, "stage0_h": 0.45323, "stage1_loss_instance_mil": 0.30017, "stage1_bag_acc": 98.57404, "stage1_neg_loss": 0.08094, "stage1_mean_ious": 0.38822, "stage1_s": 0.00944, "stage1_m": 0.02195, "stage1_l": 0.15455, "stage1_h": 0.41514, "loss": 0.43809, "grad_norm": 14.63417, "time": 1.66169}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18833, "data_time": 0.08008, "stage0_loss_instance_mil": 0.04663, "stage0_bag_acc": 97.13516, "stage0_mean_ious": 0.44882, "stage0_s": 0.0, "stage0_m": 0.06946, "stage0_l": 0.1786, "stage0_h": 0.48643, "stage1_loss_instance_mil": 0.25087, "stage1_bag_acc": 98.32133, "stage1_neg_loss": 0.08538, "stage1_mean_ious": 0.41466, "stage1_s": 0.0, "stage1_m": 0.07228, "stage1_l": 0.17473, "stage1_h": 0.44609, "loss": 0.38287, "grad_norm": 19.29708, "time": 1.74627}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03089, "stage0_loss_instance_mil": 0.0478, "stage0_bag_acc": 96.95167, "stage0_mean_ious": 0.51857, "stage0_s": 0.0, "stage0_m": 0.07758, "stage0_l": 0.17839, "stage0_h": 0.55566, "stage1_loss_instance_mil": 0.23288, "stage1_bag_acc": 97.60903, "stage1_neg_loss": 0.09863, "stage1_mean_ious": 0.48518, "stage1_s": 0.0, "stage1_m": 0.08423, "stage1_l": 0.17836, "stage1_h": 0.51764, "loss": 0.37931, "grad_norm": 19.56086, "time": 1.74337}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02934, "stage0_loss_instance_mil": 0.03065, "stage0_bag_acc": 98.29525, "stage0_mean_ious": 0.54326, "stage0_s": 0.0, "stage0_m": 0.0748, "stage0_l": 0.2215, "stage0_h": 0.58712, "stage1_loss_instance_mil": 0.21261, "stage1_bag_acc": 99.10848, "stage1_neg_loss": 0.08314, "stage1_mean_ious": 0.50399, "stage1_s": 0.0, "stage1_m": 0.07486, "stage1_l": 0.22845, "stage1_h": 0.54065, "loss": 0.3264, "grad_norm": 16.78185, "time": 1.719}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.128, "bbox_mAP_50": 0.413, "bbox_mAP_75": 0.225, "bbox_mAP_s": 0.09, "bbox_mAP_m": 0.05, "bbox_mAP_l": 0.022, "bbox_mAP_copypaste": "0.128 0.413 0.225 0.090 0.050 0.022"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07804, "stage0_loss_instance_mil": 0.01868, "stage0_bag_acc": 98.70474, "stage0_mean_ious": 0.58413, "stage0_s": 0.0, "stage0_m": 0.05647, "stage0_l": 0.23374, "stage0_h": 0.63047, "stage1_loss_instance_mil": 0.1377, "stage1_bag_acc": 99.16491, "stage1_neg_loss": 0.05222, "stage1_mean_ious": 0.54313, "stage1_s": 0.0, "stage1_m": 0.05768, "stage1_l": 0.24403, "stage1_h": 0.58171, "loss": 0.2086, "grad_norm": 9.16187, "time": 1.77308}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03057, "stage0_loss_instance_mil": 0.02073, "stage0_bag_acc": 99.00317, "stage0_mean_ious": 0.58909, "stage0_s": 0.0, "stage0_m": 0.08618, "stage0_l": 0.27329, "stage0_h": 0.63077, "stage1_loss_instance_mil": 0.11945, "stage1_bag_acc": 99.15188, "stage1_neg_loss": 0.05174, "stage1_mean_ious": 0.55685, "stage1_s": 0.0, "stage1_m": 0.09528, "stage1_l": 0.2709, "stage1_h": 0.59208, "loss": 0.19193, "grad_norm": 11.45042, "time": 1.76429}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02599, "stage0_loss_instance_mil": 0.01502, "stage0_bag_acc": 99.28406, "stage0_mean_ious": 0.61938, "stage0_s": 0.0, "stage0_m": 0.07609, "stage0_l": 0.37425, "stage0_h": 0.6585, "stage1_loss_instance_mil": 0.11882, "stage1_bag_acc": 99.36098, "stage1_neg_loss": 0.05787, "stage1_mean_ious": 0.58172, "stage1_s": 0.0, "stage1_m": 0.08757, "stage1_l": 0.38794, "stage1_h": 0.609, "loss": 0.19171, "grad_norm": 14.71287, "time": 1.64187}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.0763, "stage0_loss_instance_mil": 0.01049, "stage0_bag_acc": 99.54815, "stage0_mean_ious": 0.61123, "stage0_s": 0.0, "stage0_m": 0.11405, "stage0_l": 0.33935, "stage0_h": 0.6415, "stage1_loss_instance_mil": 0.1116, "stage1_bag_acc": 99.51696, "stage1_neg_loss": 0.05142, "stage1_mean_ious": 0.57728, "stage1_s": 0.0, "stage1_m": 0.12004, "stage1_l": 0.34774, "stage1_h": 0.59938, "loss": 0.17351, "grad_norm": 13.06585, "time": 1.75879}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02808, "stage0_loss_instance_mil": 0.00844, "stage0_bag_acc": 99.7395, "stage0_mean_ious": 0.65845, "stage0_s": 0.0, "stage0_m": 0.05645, "stage0_l": 0.36308, "stage0_h": 0.69097, "stage1_loss_instance_mil": 0.09665, "stage1_bag_acc": 99.38574, "stage1_neg_loss": 0.04128, "stage1_mean_ious": 0.62639, "stage1_s": 0.0, "stage1_m": 0.06305, "stage1_l": 0.37065, "stage1_h": 0.65259, "loss": 0.14637, "grad_norm": 9.14127, "time": 1.68316}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02912, "stage0_loss_instance_mil": 0.0226, "stage0_bag_acc": 98.27175, "stage0_mean_ious": 0.68708, "stage0_s": 0.0, "stage0_m": 0.06526, "stage0_l": 0.41758, "stage0_h": 0.71288, "stage1_loss_instance_mil": 0.08662, "stage1_bag_acc": 99.04739, "stage1_neg_loss": 0.04165, "stage1_mean_ious": 0.63871, "stage1_s": 0.0, "stage1_m": 0.07039, "stage1_l": 0.41453, "stage1_h": 0.65825, "loss": 0.15087, "grad_norm": 10.39082, "time": 1.77447}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07812, "stage0_loss_instance_mil": 0.00788, "stage0_bag_acc": 99.69242, "stage0_mean_ious": 0.65727, "stage0_s": 0.0, "stage0_m": 0.09634, "stage0_l": 0.36738, "stage0_h": 0.69073, "stage1_loss_instance_mil": 0.08269, "stage1_bag_acc": 99.71465, "stage1_neg_loss": 0.04031, "stage1_mean_ious": 0.62447, "stage1_s": 0.0, "stage1_m": 0.10855, "stage1_l": 0.37865, "stage1_h": 0.64931, "loss": 0.13088, "grad_norm": 8.62143, "time": 1.80976}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02622, "stage0_loss_instance_mil": 0.00958, "stage0_bag_acc": 99.36241, "stage0_mean_ious": 0.63769, "stage0_s": 0.0, "stage0_m": 0.0742, "stage0_l": 0.33403, "stage0_h": 0.66272, "stage1_loss_instance_mil": 0.08507, "stage1_bag_acc": 99.59549, "stage1_neg_loss": 0.04318, "stage1_mean_ious": 0.59459, "stage1_s": 0.0, "stage1_m": 0.0796, "stage1_l": 0.33827, "stage1_h": 0.61236, "loss": 0.13783, "grad_norm": 13.02519, "time": 1.68828}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02762, "stage0_loss_instance_mil": 0.0063, "stage0_bag_acc": 99.68733, "stage0_mean_ious": 0.63055, "stage0_s": 0.0, "stage0_m": 0.08582, "stage0_l": 0.37605, "stage0_h": 0.66196, "stage1_loss_instance_mil": 0.08445, "stage1_bag_acc": 99.65876, "stage1_neg_loss": 0.03954, "stage1_mean_ious": 0.59139, "stage1_s": 0.0, "stage1_m": 0.09393, "stage1_l": 0.3943, "stage1_h": 0.61276, "loss": 0.13029, "grad_norm": 7.77512, "time": 1.70061}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.245, "bbox_mAP_50": 0.534, "bbox_mAP_75": 0.408, "bbox_mAP_s": 0.267, "bbox_mAP_m": 0.202, "bbox_mAP_l": 0.13, "bbox_mAP_copypaste": "0.245 0.534 0.408 0.267 0.202 0.130"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08056, "stage0_loss_instance_mil": 0.00649, "stage0_bag_acc": 99.73214, "stage0_mean_ious": 0.65482, "stage0_s": 0.0, "stage0_m": 0.04538, "stage0_l": 0.3549, "stage0_h": 0.68541, "stage1_loss_instance_mil": 0.07381, "stage1_bag_acc": 99.71092, "stage1_neg_loss": 0.03851, "stage1_mean_ious": 0.6078, "stage1_s": 0.0, "stage1_m": 0.05234, "stage1_l": 0.36047, "stage1_h": 0.62945, "loss": 0.11881, "grad_norm": 9.12079, "time": 1.72642}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.0322, "stage0_loss_instance_mil": 0.01116, "stage0_bag_acc": 99.05409, "stage0_mean_ious": 0.64721, "stage0_s": 0.0, "stage0_m": 0.0556, "stage0_l": 0.3516, "stage0_h": 0.66449, "stage1_loss_instance_mil": 0.08511, "stage1_bag_acc": 99.38506, "stage1_neg_loss": 0.04053, "stage1_mean_ious": 0.60256, "stage1_s": 0.0, "stage1_m": 0.06321, "stage1_l": 0.34387, "stage1_h": 0.61479, "loss": 0.1368, "grad_norm": 11.15996, "time": 1.72467}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.03182, "stage0_loss_instance_mil": 0.01237, "stage0_bag_acc": 99.08163, "stage0_mean_ious": 0.64471, "stage0_s": 0.0, "stage0_m": 0.10091, "stage0_l": 0.40476, "stage0_h": 0.67091, "stage1_loss_instance_mil": 0.06756, "stage1_bag_acc": 99.24496, "stage1_neg_loss": 0.03277, "stage1_mean_ious": 0.60611, "stage1_s": 0.0, "stage1_m": 0.10491, "stage1_l": 0.41532, "stage1_h": 0.62334, "loss": 0.1127, "grad_norm": 6.10308, "time": 1.73487}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08182, "stage0_loss_instance_mil": 0.0062, "stage0_bag_acc": 99.7395, "stage0_mean_ious": 0.63872, "stage0_s": 0.0, "stage0_m": 0.1187, "stage0_l": 0.31839, "stage0_h": 0.66435, "stage1_loss_instance_mil": 0.06859, "stage1_bag_acc": 99.69376, "stage1_neg_loss": 0.03833, "stage1_mean_ious": 0.60342, "stage1_s": 0.0, "stage1_m": 0.12231, "stage1_l": 0.33058, "stage1_h": 0.62148, "loss": 0.11313, "grad_norm": 7.68127, "time": 1.81381}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02863, "stage0_loss_instance_mil": 0.00371, "stage0_bag_acc": 99.94118, "stage0_mean_ious": 0.63974, "stage0_s": 0.0, "stage0_m": 0.04646, "stage0_l": 0.37065, "stage0_h": 0.66854, "stage1_loss_instance_mil": 0.07065, "stage1_bag_acc": 99.94118, "stage1_neg_loss": 0.0276, "stage1_mean_ious": 0.60148, "stage1_s": 0.0, "stage1_m": 0.04504, "stage1_l": 0.38184, "stage1_h": 0.62218, "loss": 0.10197, "grad_norm": 6.20245, "time": 1.74833}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02773, "stage0_loss_instance_mil": 0.01005, "stage0_bag_acc": 99.56664, "stage0_mean_ious": 0.6317, "stage0_s": 0.0, "stage0_m": 0.06233, "stage0_l": 0.37151, "stage0_h": 0.66063, "stage1_loss_instance_mil": 0.07665, "stage1_bag_acc": 99.56664, "stage1_neg_loss": 0.03792, "stage1_mean_ious": 0.58965, "stage1_s": 0.0, "stage1_m": 0.068, "stage1_l": 0.38592, "stage1_h": 0.6085, "loss": 0.12462, "grad_norm": 8.82856, "time": 1.73222}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07747, "stage0_loss_instance_mil": 0.00677, "stage0_bag_acc": 99.59558, "stage0_mean_ious": 0.66217, "stage0_s": 0.0, "stage0_m": 0.08645, "stage0_l": 0.44308, "stage0_h": 0.67654, "stage1_loss_instance_mil": 0.05801, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.03119, "stage1_mean_ious": 0.6206, "stage1_s": 0.0, "stage1_m": 0.08054, "stage1_l": 0.43884, "stage1_h": 0.63065, "loss": 0.09597, "grad_norm": 8.31064, "time": 1.77289}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02741, "stage0_loss_instance_mil": 0.00687, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.64678, "stage0_s": 0.00776, "stage0_m": 0.11526, "stage0_l": 0.43103, "stage0_h": 0.67471, "stage1_loss_instance_mil": 0.04954, "stage1_bag_acc": 99.7395, "stage1_neg_loss": 0.0263, "stage1_mean_ious": 0.60539, "stage1_s": 0.0095, "stage1_m": 0.12255, "stage1_l": 0.42592, "stage1_h": 0.62618, "loss": 0.08271, "grad_norm": 4.84032, "time": 1.71993}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02821, "stage0_loss_instance_mil": 0.00235, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.65429, "stage0_s": 0.0, "stage0_m": 0.13325, "stage0_l": 0.41619, "stage0_h": 0.68462, "stage1_loss_instance_mil": 0.04929, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03067, "stage1_mean_ious": 0.61246, "stage1_s": 0.0, "stage1_m": 0.1364, "stage1_l": 0.42056, "stage1_h": 0.63539, "loss": 0.08231, "grad_norm": 4.60497, "time": 1.6978}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.262, "bbox_mAP_50": 0.55, "bbox_mAP_75": 0.428, "bbox_mAP_s": 0.295, "bbox_mAP_m": 0.229, "bbox_mAP_l": 0.146, "bbox_mAP_copypaste": "0.262 0.550 0.428 0.295 0.229 0.146"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07829, "stage0_loss_instance_mil": 0.00235, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.63157, "stage0_s": 0.0, "stage0_m": 0.08709, "stage0_l": 0.42482, "stage0_h": 0.66923, "stage1_loss_instance_mil": 0.04791, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02783, "stage1_mean_ious": 0.58863, "stage1_s": 0.0, "stage1_m": 0.09446, "stage1_l": 0.42819, "stage1_h": 0.61616, "loss": 0.07809, "grad_norm": 4.48295, "time": 1.72508}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02806, "stage0_loss_instance_mil": 0.00571, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.65733, "stage0_s": 0.0, "stage0_m": 0.09211, "stage0_l": 0.41919, "stage0_h": 0.68161, "stage1_loss_instance_mil": 0.04118, "stage1_bag_acc": 99.7995, "stage1_neg_loss": 0.02396, "stage1_mean_ious": 0.61259, "stage1_s": 0.0, "stage1_m": 0.09773, "stage1_l": 0.41239, "stage1_h": 0.6299, "loss": 0.07085, "grad_norm": 4.30425, "time": 1.72572}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02923, "stage0_loss_instance_mil": 0.00382, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.66056, "stage0_s": 0.0, "stage0_m": 0.10913, "stage0_l": 0.40759, "stage0_h": 0.69113, "stage1_loss_instance_mil": 0.04707, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.02779, "stage1_mean_ious": 0.61594, "stage1_s": 0.0, "stage1_m": 0.1085, "stage1_l": 0.41605, "stage1_h": 0.63742, "loss": 0.07869, "grad_norm": 5.03962, "time": 1.69895}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07879, "stage0_loss_instance_mil": 0.00469, "stage0_bag_acc": 99.8114, "stage0_mean_ious": 0.64784, "stage0_s": 0.0, "stage0_m": 0.09051, "stage0_l": 0.42623, "stage0_h": 0.6765, "stage1_loss_instance_mil": 0.04663, "stage1_bag_acc": 99.91667, "stage1_neg_loss": 0.02465, "stage1_mean_ious": 0.61396, "stage1_s": 0.0, "stage1_m": 0.10221, "stage1_l": 0.43024, "stage1_h": 0.63491, "loss": 0.07597, "grad_norm": 5.56531, "time": 1.73568}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.0289, "stage0_loss_instance_mil": 0.00421, "stage0_bag_acc": 99.80383, "stage0_mean_ious": 0.65813, "stage0_s": 0.0, "stage0_m": 0.07664, "stage0_l": 0.36552, "stage0_h": 0.67975, "stage1_loss_instance_mil": 0.0408, "stage1_bag_acc": 99.81818, "stage1_neg_loss": 0.02286, "stage1_mean_ious": 0.62016, "stage1_s": 0.0, "stage1_m": 0.07636, "stage1_l": 0.381, "stage1_h": 0.63553, "loss": 0.06788, "grad_norm": 4.08165, "time": 1.76449}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02679, "stage0_loss_instance_mil": 0.0034, "stage0_bag_acc": 99.83333, "stage0_mean_ious": 0.66136, "stage0_s": 0.0, "stage0_m": 0.09267, "stage0_l": 0.46121, "stage0_h": 0.68055, "stage1_loss_instance_mil": 0.04672, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02242, "stage1_mean_ious": 0.62044, "stage1_s": 0.0, "stage1_m": 0.10477, "stage1_l": 0.45929, "stage1_h": 0.63411, "loss": 0.07253, "grad_norm": 5.10512, "time": 1.72176}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07994, "stage0_loss_instance_mil": 0.00621, "stage0_bag_acc": 99.76389, "stage0_mean_ious": 0.66962, "stage0_s": 0.0, "stage0_m": 0.0712, "stage0_l": 0.41235, "stage0_h": 0.69647, "stage1_loss_instance_mil": 0.04729, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.01788, "stage1_mean_ious": 0.62085, "stage1_s": 0.0, "stage1_m": 0.07164, "stage1_l": 0.40325, "stage1_h": 0.64062, "loss": 0.07137, "grad_norm": 4.18012, "time": 1.77473}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18833, "data_time": 0.02862, "stage0_loss_instance_mil": 0.00102, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.63079, "stage0_s": 0.0, "stage0_m": 0.1634, "stage0_l": 0.4378, "stage0_h": 0.65142, "stage1_loss_instance_mil": 0.04571, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.02514, "stage1_mean_ious": 0.59113, "stage1_s": 0.0, "stage1_m": 0.17281, "stage1_l": 0.42946, "stage1_h": 0.60544, "loss": 0.07187, "grad_norm": 4.57611, "time": 1.72105}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18833, "data_time": 0.02815, "stage0_loss_instance_mil": 0.00304, "stage0_bag_acc": 99.875, "stage0_mean_ious": 0.67046, "stage0_s": 0.0, "stage0_m": 0.07506, "stage0_l": 0.45385, "stage0_h": 0.69576, "stage1_loss_instance_mil": 0.04448, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.01753, "stage1_mean_ious": 0.62767, "stage1_s": 0.0, "stage1_m": 0.08298, "stage1_l": 0.45818, "stage1_h": 0.64475, "loss": 0.06504, "grad_norm": 4.94855, "time": 1.75321}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.266, "bbox_mAP_50": 0.554, "bbox_mAP_75": 0.435, "bbox_mAP_s": 0.304, "bbox_mAP_m": 0.228, "bbox_mAP_l": 0.148, "bbox_mAP_copypaste": "0.266 0.554 0.435 0.304 0.228 0.148"}
