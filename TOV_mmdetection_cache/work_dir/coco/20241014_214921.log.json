{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18742, "data_time": 0.08051, "stage0_loss_instance_mil": 0.70756, "stage0_bag_acc": 13.75515, "stage0_mean_ious": 0.3767, "stage0_s": 0.0, "stage0_m": 0.03856, "stage0_l": 0.28793, "stage0_h": 0.38258, "stage1_loss_instance_mil": 0.17435, "stage1_bag_acc": 18.89185, "stage1_neg_loss": 0.00068, "stage1_mean_ious": 0.36789, "stage1_s": 0.0, "stage1_m": 0.04438, "stage1_l": 0.29315, "stage1_h": 0.3717, "loss": 0.8826, "grad_norm": 3.07879, "time": 1.7761}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.02988, "stage0_loss_instance_mil": 0.6266, "stage0_bag_acc": 54.08774, "stage0_mean_ious": 0.40086, "stage0_s": 0.0, "stage0_m": 0.03949, "stage0_l": 0.26167, "stage0_h": 0.41294, "stage1_loss_instance_mil": 0.2251, "stage1_bag_acc": 21.21205, "stage1_neg_loss": 0.00145, "stage1_mean_ious": 0.39291, "stage1_s": 0.0, "stage1_m": 0.03709, "stage1_l": 0.27207, "stage1_h": 0.40174, "loss": 0.85315, "grad_norm": 3.66513, "time": 1.7045}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.03066, "stage0_loss_instance_mil": 0.29396, "stage0_bag_acc": 88.74956, "stage0_mean_ious": 0.4232, "stage0_s": 0.0, "stage0_m": 0.06503, "stage0_l": 0.31709, "stage0_h": 0.42878, "stage1_loss_instance_mil": 0.34819, "stage1_bag_acc": 71.84437, "stage1_neg_loss": 0.08689, "stage1_mean_ious": 0.4099, "stage1_s": 0.0, "stage1_m": 0.06679, "stage1_l": 0.32615, "stage1_h": 0.41297, "loss": 0.72904, "grad_norm": 17.35559, "time": 1.73251}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18742, "data_time": 0.07875, "stage0_loss_instance_mil": 0.07368, "stage0_bag_acc": 97.2579, "stage0_mean_ious": 0.42092, "stage0_s": 0.0, "stage0_m": 0.04108, "stage0_l": 0.24955, "stage0_h": 0.44014, "stage1_loss_instance_mil": 0.32003, "stage1_bag_acc": 98.4623, "stage1_neg_loss": 0.09214, "stage1_mean_ious": 0.39661, "stage1_s": 0.0, "stage1_m": 0.03951, "stage1_l": 0.25984, "stage1_h": 0.41157, "loss": 0.48585, "grad_norm": 15.73397, "time": 1.77099}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18742, "data_time": 0.02973, "stage0_loss_instance_mil": 0.05931, "stage0_bag_acc": 96.63339, "stage0_mean_ious": 0.42898, "stage0_s": 0.0, "stage0_m": 0.05208, "stage0_l": 0.22891, "stage0_h": 0.45613, "stage1_loss_instance_mil": 0.31739, "stage1_bag_acc": 98.011, "stage1_neg_loss": 0.08569, "stage1_mean_ious": 0.3999, "stage1_s": 0.0, "stage1_m": 0.05234, "stage1_l": 0.22476, "stage1_h": 0.42277, "loss": 0.46239, "grad_norm": 15.57963, "time": 1.71725}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18742, "data_time": 0.02867, "stage0_loss_instance_mil": 0.03835, "stage0_bag_acc": 98.11004, "stage0_mean_ious": 0.45552, "stage0_s": 0.0, "stage0_m": 0.04054, "stage0_l": 0.20641, "stage0_h": 0.48036, "stage1_loss_instance_mil": 0.25964, "stage1_bag_acc": 99.33168, "stage1_neg_loss": 0.10614, "stage1_mean_ious": 0.42536, "stage1_s": 0.0, "stage1_m": 0.03458, "stage1_l": 0.20909, "stage1_h": 0.44599, "loss": 0.40413, "grad_norm": 24.14774, "time": 1.73158}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18742, "data_time": 0.0801, "stage0_loss_instance_mil": 0.03045, "stage0_bag_acc": 98.09905, "stage0_mean_ious": 0.4882, "stage0_s": 0.0, "stage0_m": 0.06445, "stage0_l": 0.20619, "stage0_h": 0.52349, "stage1_loss_instance_mil": 0.21177, "stage1_bag_acc": 99.03172, "stage1_neg_loss": 0.0936, "stage1_mean_ious": 0.44386, "stage1_s": 0.0, "stage1_m": 0.05493, "stage1_l": 0.21402, "stage1_h": 0.47334, "loss": 0.33583, "grad_norm": 19.33316, "time": 1.78824}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02891, "stage0_loss_instance_mil": 0.03735, "stage0_bag_acc": 98.59482, "stage0_mean_ious": 0.5483, "stage0_s": 0.0, "stage0_m": 0.05082, "stage0_l": 0.29609, "stage0_h": 0.58055, "stage1_loss_instance_mil": 0.2063, "stage1_bag_acc": 98.76537, "stage1_neg_loss": 0.06717, "stage1_mean_ious": 0.51718, "stage1_s": 0.0, "stage1_m": 0.05487, "stage1_l": 0.31964, "stage1_h": 0.53987, "loss": 0.31082, "grad_norm": 17.5344, "time": 1.72932}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.02935, "stage0_loss_instance_mil": 0.02643, "stage0_bag_acc": 98.83032, "stage0_mean_ious": 0.54947, "stage0_s": 0.0, "stage0_m": 0.04533, "stage0_l": 0.25507, "stage0_h": 0.58677, "stage1_loss_instance_mil": 0.19161, "stage1_bag_acc": 98.48123, "stage1_neg_loss": 0.07264, "stage1_mean_ious": 0.50855, "stage1_s": 0.0, "stage1_m": 0.04698, "stage1_l": 0.26706, "stage1_h": 0.53888, "loss": 0.29068, "grad_norm": 13.47455, "time": 1.72306}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.135, "bbox_mAP_50": 0.37, "bbox_mAP_75": 0.24, "bbox_mAP_s": 0.131, "bbox_mAP_m": 0.077, "bbox_mAP_l": 0.036, "bbox_mAP_copypaste": "0.135 0.370 0.240 0.131 0.077 0.036"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.07893, "stage0_loss_instance_mil": 0.02559, "stage0_bag_acc": 98.54285, "stage0_mean_ious": 0.54133, "stage0_s": 0.0, "stage0_m": 0.05889, "stage0_l": 0.28767, "stage0_h": 0.57264, "stage1_loss_instance_mil": 0.17274, "stage1_bag_acc": 98.68576, "stage1_neg_loss": 0.06552, "stage1_mean_ious": 0.50575, "stage1_s": 0.0, "stage1_m": 0.06862, "stage1_l": 0.30756, "stage1_h": 0.52678, "loss": 0.26385, "grad_norm": 13.52146, "time": 1.75969}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02919, "stage0_loss_instance_mil": 0.02014, "stage0_bag_acc": 98.81211, "stage0_mean_ious": 0.58561, "stage0_s": 0.0, "stage0_m": 0.08426, "stage0_l": 0.39935, "stage0_h": 0.60674, "stage1_loss_instance_mil": 0.13075, "stage1_bag_acc": 99.03328, "stage1_neg_loss": 0.05463, "stage1_mean_ious": 0.5528, "stage1_s": 0.0, "stage1_m": 0.08882, "stage1_l": 0.41805, "stage1_h": 0.56672, "loss": 0.20551, "grad_norm": 11.54495, "time": 1.73932}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.0294, "stage0_loss_instance_mil": 0.01795, "stage0_bag_acc": 98.92333, "stage0_mean_ious": 0.58867, "stage0_s": 0.0, "stage0_m": 0.07087, "stage0_l": 0.42587, "stage0_h": 0.61144, "stage1_loss_instance_mil": 0.11478, "stage1_bag_acc": 98.87907, "stage1_neg_loss": 0.04673, "stage1_mean_ious": 0.55088, "stage1_s": 0.0, "stage1_m": 0.07088, "stage1_l": 0.45058, "stage1_h": 0.56333, "loss": 0.17946, "grad_norm": 8.92887, "time": 1.73825}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.08401, "stage0_loss_instance_mil": 0.01022, "stage0_bag_acc": 99.41708, "stage0_mean_ious": 0.59505, "stage0_s": 0.0, "stage0_m": 0.09053, "stage0_l": 0.33731, "stage0_h": 0.61584, "stage1_loss_instance_mil": 0.13118, "stage1_bag_acc": 99.44363, "stage1_neg_loss": 0.04588, "stage1_mean_ious": 0.56229, "stage1_s": 0.0, "stage1_m": 0.09641, "stage1_l": 0.34173, "stage1_h": 0.57717, "loss": 0.18727, "grad_norm": 9.5456, "time": 1.8017}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.0323, "stage0_loss_instance_mil": 0.01236, "stage0_bag_acc": 99.45648, "stage0_mean_ious": 0.63277, "stage0_s": 0.0, "stage0_m": 0.11531, "stage0_l": 0.44088, "stage0_h": 0.65624, "stage1_loss_instance_mil": 0.09748, "stage1_bag_acc": 99.19318, "stage1_neg_loss": 0.04947, "stage1_mean_ious": 0.58701, "stage1_s": 0.0, "stage1_m": 0.11835, "stage1_l": 0.4387, "stage1_h": 0.60377, "loss": 0.1593, "grad_norm": 10.62393, "time": 1.7669}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.03089, "stage0_loss_instance_mil": 0.01675, "stage0_bag_acc": 99.10018, "stage0_mean_ious": 0.602, "stage0_s": 0.0, "stage0_m": 0.03918, "stage0_l": 0.44838, "stage0_h": 0.61023, "stage1_loss_instance_mil": 0.1214, "stage1_bag_acc": 98.7804, "stage1_neg_loss": 0.05206, "stage1_mean_ious": 0.55525, "stage1_s": 0.0, "stage1_m": 0.03412, "stage1_l": 0.43998, "stage1_h": 0.55804, "loss": 0.19021, "grad_norm": 12.7832, "time": 1.7198}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.08217, "stage0_loss_instance_mil": 0.00919, "stage0_bag_acc": 99.61146, "stage0_mean_ious": 0.59504, "stage0_s": 0.0, "stage0_m": 0.11226, "stage0_l": 0.4563, "stage0_h": 0.61227, "stage1_loss_instance_mil": 0.07641, "stage1_bag_acc": 99.7954, "stage1_neg_loss": 0.03586, "stage1_mean_ious": 0.56439, "stage1_s": 0.0, "stage1_m": 0.12026, "stage1_l": 0.46535, "stage1_h": 0.57577, "loss": 0.12145, "grad_norm": 6.69026, "time": 1.79248}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.03122, "stage0_loss_instance_mil": 0.00489, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.59925, "stage0_s": 0.0, "stage0_m": 0.16088, "stage0_l": 0.42218, "stage0_h": 0.61419, "stage1_loss_instance_mil": 0.10228, "stage1_bag_acc": 99.5731, "stage1_neg_loss": 0.04307, "stage1_mean_ious": 0.55662, "stage1_s": 0.0, "stage1_m": 0.17492, "stage1_l": 0.43239, "stage1_h": 0.56168, "loss": 0.15024, "grad_norm": 9.91514, "time": 1.71953}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.03162, "stage0_loss_instance_mil": 0.00842, "stage0_bag_acc": 99.40033, "stage0_mean_ious": 0.5974, "stage0_s": 0.0, "stage0_m": 0.09389, "stage0_l": 0.41013, "stage0_h": 0.61085, "stage1_loss_instance_mil": 0.07782, "stage1_bag_acc": 99.27895, "stage1_neg_loss": 0.0322, "stage1_mean_ious": 0.55406, "stage1_s": 0.0, "stage1_m": 0.08296, "stage1_l": 0.41061, "stage1_h": 0.5615, "loss": 0.11844, "grad_norm": 6.41854, "time": 1.77371}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.177, "bbox_mAP_50": 0.457, "bbox_mAP_75": 0.323, "bbox_mAP_s": 0.179, "bbox_mAP_m": 0.111, "bbox_mAP_l": 0.047, "bbox_mAP_copypaste": "0.177 0.457 0.323 0.179 0.111 0.047"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.08499, "stage0_loss_instance_mil": 0.00915, "stage0_bag_acc": 99.69451, "stage0_mean_ious": 0.59146, "stage0_s": 0.0, "stage0_m": 0.06937, "stage0_l": 0.40997, "stage0_h": 0.60789, "stage1_loss_instance_mil": 0.08572, "stage1_bag_acc": 99.68447, "stage1_neg_loss": 0.0369, "stage1_mean_ious": 0.54826, "stage1_s": 0.0, "stage1_m": 0.06899, "stage1_l": 0.41519, "stage1_h": 0.55704, "loss": 0.13178, "grad_norm": 7.54001, "time": 1.81337}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.0304, "stage0_loss_instance_mil": 0.01062, "stage0_bag_acc": 99.3688, "stage0_mean_ious": 0.60408, "stage0_s": 0.0, "stage0_m": 0.06405, "stage0_l": 0.47683, "stage0_h": 0.61601, "stage1_loss_instance_mil": 0.08666, "stage1_bag_acc": 99.55921, "stage1_neg_loss": 0.03665, "stage1_mean_ious": 0.55716, "stage1_s": 0.0, "stage1_m": 0.06618, "stage1_l": 0.47067, "stage1_h": 0.56155, "loss": 0.13393, "grad_norm": 7.60602, "time": 1.73834}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.02938, "stage0_loss_instance_mil": 0.01137, "stage0_bag_acc": 99.31013, "stage0_mean_ious": 0.59078, "stage0_s": 0.0, "stage0_m": 0.11148, "stage0_l": 0.4808, "stage0_h": 0.59973, "stage1_loss_instance_mil": 0.06726, "stage1_bag_acc": 99.49722, "stage1_neg_loss": 0.03098, "stage1_mean_ious": 0.55295, "stage1_s": 0.0, "stage1_m": 0.10537, "stage1_l": 0.4692, "stage1_h": 0.55796, "loss": 0.10962, "grad_norm": 6.64043, "time": 1.67293}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.08016, "stage0_loss_instance_mil": 0.01392, "stage0_bag_acc": 99.15367, "stage0_mean_ious": 0.57218, "stage0_s": 0.0, "stage0_m": 0.08131, "stage0_l": 0.37573, "stage0_h": 0.57391, "stage1_loss_instance_mil": 0.06607, "stage1_bag_acc": 99.45228, "stage1_neg_loss": 0.03134, "stage1_mean_ious": 0.5453, "stage1_s": 0.0, "stage1_m": 0.08167, "stage1_l": 0.38175, "stage1_h": 0.54301, "loss": 0.11132, "grad_norm": 5.74028, "time": 1.7811}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.03067, "stage0_loss_instance_mil": 0.00653, "stage0_bag_acc": 99.67707, "stage0_mean_ious": 0.59477, "stage0_s": 0.0, "stage0_m": 0.08941, "stage0_l": 0.47835, "stage0_h": 0.60657, "stage1_loss_instance_mil": 0.08102, "stage1_bag_acc": 99.6104, "stage1_neg_loss": 0.04, "stage1_mean_ious": 0.56506, "stage1_s": 0.0, "stage1_m": 0.09592, "stage1_l": 0.48368, "stage1_h": 0.56985, "loss": 0.12755, "grad_norm": 7.09628, "time": 1.72814}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.03116, "stage0_loss_instance_mil": 0.00798, "stage0_bag_acc": 99.79474, "stage0_mean_ious": 0.61273, "stage0_s": 0.0, "stage0_m": 0.09654, "stage0_l": 0.47126, "stage0_h": 0.62185, "stage1_loss_instance_mil": 0.07387, "stage1_bag_acc": 99.79474, "stage1_neg_loss": 0.04052, "stage1_mean_ious": 0.57579, "stage1_s": 0.0, "stage1_m": 0.0847, "stage1_l": 0.46029, "stage1_h": 0.58187, "loss": 0.12238, "grad_norm": 8.03785, "time": 1.73517}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.08271, "stage0_loss_instance_mil": 0.00293, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.59178, "stage0_s": 0.0, "stage0_m": 0.12236, "stage0_l": 0.4495, "stage0_h": 0.60391, "stage1_loss_instance_mil": 0.04983, "stage1_bag_acc": 99.86667, "stage1_neg_loss": 0.0254, "stage1_mean_ious": 0.56361, "stage1_s": 0.0, "stage1_m": 0.12632, "stage1_l": 0.45111, "stage1_h": 0.57086, "loss": 0.07816, "grad_norm": 3.69603, "time": 1.79564}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.031, "stage0_loss_instance_mil": 0.00721, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.59906, "stage0_s": 0.00838, "stage0_m": 0.06231, "stage0_l": 0.48455, "stage0_h": 0.60809, "stage1_loss_instance_mil": 0.05041, "stage1_bag_acc": 99.65029, "stage1_neg_loss": 0.02478, "stage1_mean_ious": 0.56632, "stage1_s": 0.0111, "stage1_m": 0.07648, "stage1_l": 0.49541, "stage1_h": 0.56689, "loss": 0.0824, "grad_norm": 4.6313, "time": 1.73147}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.02982, "stage0_loss_instance_mil": 0.00477, "stage0_bag_acc": 99.68839, "stage0_mean_ious": 0.61942, "stage0_s": 0.0, "stage0_m": 0.128, "stage0_l": 0.47826, "stage0_h": 0.62906, "stage1_loss_instance_mil": 0.04431, "stage1_bag_acc": 99.69424, "stage1_neg_loss": 0.02622, "stage1_mean_ious": 0.59314, "stage1_s": 0.0, "stage1_m": 0.12934, "stage1_l": 0.4821, "stage1_h": 0.59636, "loss": 0.07529, "grad_norm": 4.41741, "time": 1.72152}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.194, "bbox_mAP_50": 0.504, "bbox_mAP_75": 0.345, "bbox_mAP_s": 0.204, "bbox_mAP_m": 0.124, "bbox_mAP_l": 0.056, "bbox_mAP_copypaste": "0.194 0.504 0.345 0.204 0.124 0.056"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.08781, "stage0_loss_instance_mil": 0.00496, "stage0_bag_acc": 99.77143, "stage0_mean_ious": 0.60265, "stage0_s": 0.0, "stage0_m": 0.05899, "stage0_l": 0.4808, "stage0_h": 0.61091, "stage1_loss_instance_mil": 0.04279, "stage1_bag_acc": 99.77143, "stage1_neg_loss": 0.02489, "stage1_mean_ious": 0.57425, "stage1_s": 0.0, "stage1_m": 0.05949, "stage1_l": 0.4898, "stage1_h": 0.57636, "loss": 0.07263, "grad_norm": 3.62997, "time": 1.78538}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.03219, "stage0_loss_instance_mil": 0.00178, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.60668, "stage0_s": 0.0, "stage0_m": 0.11746, "stage0_l": 0.41856, "stage0_h": 0.62231, "stage1_loss_instance_mil": 0.04905, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02496, "stage1_mean_ious": 0.58001, "stage1_s": 0.0, "stage1_m": 0.11757, "stage1_l": 0.42229, "stage1_h": 0.5895, "loss": 0.0758, "grad_norm": 4.22093, "time": 1.70609}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.03536, "stage0_loss_instance_mil": 0.00189, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.61817, "stage0_s": 0.00823, "stage0_m": 0.14243, "stage0_l": 0.47873, "stage0_h": 0.62533, "stage1_loss_instance_mil": 0.03796, "stage1_bag_acc": 99.79167, "stage1_neg_loss": 0.02199, "stage1_mean_ious": 0.59121, "stage1_s": 0.01122, "stage1_m": 0.14596, "stage1_l": 0.47019, "stage1_h": 0.59542, "loss": 0.06184, "grad_norm": 3.21862, "time": 1.75213}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.07976, "stage0_loss_instance_mil": 0.00259, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.60812, "stage0_s": 0.0, "stage0_m": 0.12618, "stage0_l": 0.50184, "stage0_h": 0.61645, "stage1_loss_instance_mil": 0.03991, "stage1_bag_acc": 99.63423, "stage1_neg_loss": 0.02155, "stage1_mean_ious": 0.58214, "stage1_s": 0.0, "stage1_m": 0.13753, "stage1_l": 0.50412, "stage1_h": 0.58725, "loss": 0.06405, "grad_norm": 3.54271, "time": 1.81495}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.03183, "stage0_loss_instance_mil": 0.00513, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.60693, "stage0_s": 0.00821, "stage0_m": 0.09384, "stage0_l": 0.44582, "stage0_h": 0.61192, "stage1_loss_instance_mil": 0.04321, "stage1_bag_acc": 99.79474, "stage1_neg_loss": 0.02476, "stage1_mean_ious": 0.57847, "stage1_s": 0.01075, "stage1_m": 0.09231, "stage1_l": 0.44266, "stage1_h": 0.57981, "loss": 0.0731, "grad_norm": 3.81179, "time": 1.78963}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.02802, "stage0_loss_instance_mil": 0.00175, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.61773, "stage0_s": 0.0, "stage0_m": 0.11882, "stage0_l": 0.43023, "stage0_h": 0.62903, "stage1_loss_instance_mil": 0.04548, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.02416, "stage1_mean_ious": 0.58752, "stage1_s": 0.0, "stage1_m": 0.12525, "stage1_l": 0.41943, "stage1_h": 0.5945, "loss": 0.07139, "grad_norm": 4.27923, "time": 1.75018}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18742, "data_time": 0.08121, "stage0_loss_instance_mil": 0.00103, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.61117, "stage0_s": 0.0, "stage0_m": 0.11438, "stage0_l": 0.52449, "stage0_h": 0.61563, "stage1_loss_instance_mil": 0.04436, "stage1_bag_acc": 99.77381, "stage1_neg_loss": 0.01473, "stage1_mean_ious": 0.57948, "stage1_s": 0.0, "stage1_m": 0.11874, "stage1_l": 0.50073, "stage1_h": 0.58105, "loss": 0.06011, "grad_norm": 3.24021, "time": 1.82158}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18742, "data_time": 0.03414, "stage0_loss_instance_mil": 0.00495, "stage0_bag_acc": 99.77709, "stage0_mean_ious": 0.60907, "stage0_s": 0.0, "stage0_m": 0.09739, "stage0_l": 0.43977, "stage0_h": 0.62066, "stage1_loss_instance_mil": 0.04393, "stage1_bag_acc": 99.77709, "stage1_neg_loss": 0.02882, "stage1_mean_ious": 0.5773, "stage1_s": 0.0, "stage1_m": 0.09664, "stage1_l": 0.45102, "stage1_h": 0.58324, "loss": 0.0777, "grad_norm": 4.46698, "time": 1.77143}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18742, "data_time": 0.03537, "stage0_loss_instance_mil": 0.00119, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.5894, "stage0_s": 0.0, "stage0_m": 0.08832, "stage0_l": 0.40523, "stage0_h": 0.60048, "stage1_loss_instance_mil": 0.04032, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02103, "stage1_mean_ious": 0.56155, "stage1_s": 0.0, "stage1_m": 0.09325, "stage1_l": 0.41531, "stage1_h": 0.56717, "loss": 0.06254, "grad_norm": 2.98818, "time": 1.73215}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.195, "bbox_mAP_50": 0.494, "bbox_mAP_75": 0.347, "bbox_mAP_s": 0.204, "bbox_mAP_m": 0.124, "bbox_mAP_l": 0.061, "bbox_mAP_copypaste": "0.195 0.494 0.347 0.204 0.124 0.061"}
