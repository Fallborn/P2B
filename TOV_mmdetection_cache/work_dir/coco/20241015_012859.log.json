{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18772, "data_time": 0.08336, "stage0_loss_instance_mil": 0.71222, "stage0_bag_acc": 20.46439, "stage0_mean_ious": 0.28123, "stage0_s": 0.0, "stage0_m": 0.06085, "stage0_l": 0.24809, "stage0_h": 0.27564, "stage1_loss_instance_mil": 0.16332, "stage1_bag_acc": 19.92614, "stage1_neg_loss": 0.00195, "stage1_mean_ious": 0.27513, "stage1_s": 0.0, "stage1_m": 0.06449, "stage1_l": 0.24501, "stage1_h": 0.26913, "loss": 0.87749, "grad_norm": 3.3646, "time": 1.83948}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18772, "data_time": 0.02872, "stage0_loss_instance_mil": 0.57894, "stage0_bag_acc": 58.79816, "stage0_mean_ious": 0.32649, "stage0_s": 0.0, "stage0_m": 0.04245, "stage0_l": 0.2527, "stage0_h": 0.32438, "stage1_loss_instance_mil": 0.23461, "stage1_bag_acc": 32.62556, "stage1_neg_loss": 0.00587, "stage1_mean_ious": 0.30992, "stage1_s": 0.0, "stage1_m": 0.04805, "stage1_l": 0.24724, "stage1_h": 0.30606, "loss": 0.81941, "grad_norm": 3.90491, "time": 1.69355}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18772, "data_time": 0.02871, "stage0_loss_instance_mil": 0.24436, "stage0_bag_acc": 93.45853, "stage0_mean_ious": 0.36674, "stage0_s": 0.0, "stage0_m": 0.07162, "stage0_l": 0.25362, "stage0_h": 0.37306, "stage1_loss_instance_mil": 0.33134, "stage1_bag_acc": 86.10413, "stage1_neg_loss": 0.07178, "stage1_mean_ious": 0.34515, "stage1_s": 0.0, "stage1_m": 0.08426, "stage1_l": 0.24804, "stage1_h": 0.34571, "loss": 0.64747, "grad_norm": 9.6086, "time": 1.70501}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18772, "data_time": 0.07882, "stage0_loss_instance_mil": 0.07805, "stage0_bag_acc": 97.12725, "stage0_mean_ious": 0.3554, "stage0_s": 0.0, "stage0_m": 0.04547, "stage0_l": 0.19211, "stage0_h": 0.3645, "stage1_loss_instance_mil": 0.34496, "stage1_bag_acc": 97.12882, "stage1_neg_loss": 0.09221, "stage1_mean_ious": 0.33128, "stage1_s": 0.0, "stage1_m": 0.04042, "stage1_l": 0.17491, "stage1_h": 0.33967, "loss": 0.51523, "grad_norm": 13.73672, "time": 1.78898}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18772, "data_time": 0.02941, "stage0_loss_instance_mil": 0.06553, "stage0_bag_acc": 95.77467, "stage0_mean_ious": 0.33875, "stage0_s": 0.0, "stage0_m": 0.06137, "stage0_l": 0.21957, "stage0_h": 0.35526, "stage1_loss_instance_mil": 0.32886, "stage1_bag_acc": 96.77357, "stage1_neg_loss": 0.10042, "stage1_mean_ious": 0.31621, "stage1_s": 0.0, "stage1_m": 0.06446, "stage1_l": 0.21842, "stage1_h": 0.32931, "loss": 0.4948, "grad_norm": 15.48118, "time": 1.70621}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18833, "data_time": 0.02881, "stage0_loss_instance_mil": 0.03446, "stage0_bag_acc": 98.11843, "stage0_mean_ious": 0.33869, "stage0_s": 0.0, "stage0_m": 0.04022, "stage0_l": 0.15834, "stage0_h": 0.35551, "stage1_loss_instance_mil": 0.31314, "stage1_bag_acc": 99.04943, "stage1_neg_loss": 0.08582, "stage1_mean_ious": 0.30603, "stage1_s": 0.0, "stage1_m": 0.04203, "stage1_l": 0.14091, "stage1_h": 0.32299, "loss": 0.43343, "grad_norm": 13.36621, "time": 1.73586}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18833, "data_time": 0.08303, "stage0_loss_instance_mil": 0.0286, "stage0_bag_acc": 98.60701, "stage0_mean_ious": 0.33076, "stage0_s": 0.0, "stage0_m": 0.05942, "stage0_l": 0.15063, "stage0_h": 0.35257, "stage1_loss_instance_mil": 0.28031, "stage1_bag_acc": 98.91774, "stage1_neg_loss": 0.08452, "stage1_mean_ious": 0.30116, "stage1_s": 0.0, "stage1_m": 0.06008, "stage1_l": 0.14569, "stage1_h": 0.31824, "loss": 0.39343, "grad_norm": 14.32225, "time": 1.77091}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02789, "stage0_loss_instance_mil": 0.0329, "stage0_bag_acc": 98.15188, "stage0_mean_ious": 0.35919, "stage0_s": 0.0, "stage0_m": 0.04771, "stage0_l": 0.1703, "stage0_h": 0.38, "stage1_loss_instance_mil": 0.25538, "stage1_bag_acc": 99.03124, "stage1_neg_loss": 0.08083, "stage1_mean_ious": 0.31733, "stage1_s": 0.0, "stage1_m": 0.05218, "stage1_l": 0.16616, "stage1_h": 0.33292, "loss": 0.36912, "grad_norm": 14.2125, "time": 1.73748}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02948, "stage0_loss_instance_mil": 0.02499, "stage0_bag_acc": 98.83318, "stage0_mean_ious": 0.35078, "stage0_s": 0.0, "stage0_m": 0.05684, "stage0_l": 0.13715, "stage0_h": 0.37219, "stage1_loss_instance_mil": 0.23788, "stage1_bag_acc": 99.32437, "stage1_neg_loss": 0.074, "stage1_mean_ious": 0.31025, "stage1_s": 0.0, "stage1_m": 0.05913, "stage1_l": 0.1361, "stage1_h": 0.32614, "loss": 0.33687, "grad_norm": 13.46821, "time": 1.73135}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.035, "bbox_mAP_50": 0.135, "bbox_mAP_75": 0.061, "bbox_mAP_s": 0.018, "bbox_mAP_m": 0.006, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.035 0.135 0.061 0.018 0.006 0.002"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07581, "stage0_loss_instance_mil": 0.02683, "stage0_bag_acc": 98.28045, "stage0_mean_ious": 0.34039, "stage0_s": 0.0, "stage0_m": 0.0368, "stage0_l": 0.15573, "stage0_h": 0.36886, "stage1_loss_instance_mil": 0.23527, "stage1_bag_acc": 99.0513, "stage1_neg_loss": 0.07171, "stage1_mean_ious": 0.3025, "stage1_s": 0.0, "stage1_m": 0.04304, "stage1_l": 0.15389, "stage1_h": 0.32494, "loss": 0.33381, "grad_norm": 13.91897, "time": 1.77709}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02826, "stage0_loss_instance_mil": 0.03543, "stage0_bag_acc": 98.06916, "stage0_mean_ious": 0.3513, "stage0_s": 0.0, "stage0_m": 0.03012, "stage0_l": 0.13657, "stage0_h": 0.37591, "stage1_loss_instance_mil": 0.19903, "stage1_bag_acc": 99.01863, "stage1_neg_loss": 0.07813, "stage1_mean_ious": 0.31556, "stage1_s": 0.0, "stage1_m": 0.03301, "stage1_l": 0.13153, "stage1_h": 0.335, "loss": 0.31259, "grad_norm": 15.02634, "time": 1.69328}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02782, "stage0_loss_instance_mil": 0.01688, "stage0_bag_acc": 99.18569, "stage0_mean_ious": 0.35176, "stage0_s": 0.0, "stage0_m": 0.05249, "stage0_l": 0.15299, "stage0_h": 0.38639, "stage1_loss_instance_mil": 0.21195, "stage1_bag_acc": 99.39474, "stage1_neg_loss": 0.066, "stage1_mean_ious": 0.32129, "stage1_s": 0.0, "stage1_m": 0.05845, "stage1_l": 0.15518, "stage1_h": 0.34969, "loss": 0.29482, "grad_norm": 12.2051, "time": 1.74194}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08193, "stage0_loss_instance_mil": 0.01477, "stage0_bag_acc": 99.15907, "stage0_mean_ious": 0.37844, "stage0_s": 0.0, "stage0_m": 0.03741, "stage0_l": 0.11433, "stage0_h": 0.39954, "stage1_loss_instance_mil": 0.19638, "stage1_bag_acc": 99.6104, "stage1_neg_loss": 0.08281, "stage1_mean_ious": 0.32743, "stage1_s": 0.0, "stage1_m": 0.04776, "stage1_l": 0.11343, "stage1_h": 0.34144, "loss": 0.29397, "grad_norm": 16.30174, "time": 1.80054}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03051, "stage0_loss_instance_mil": 0.01899, "stage0_bag_acc": 98.92439, "stage0_mean_ious": 0.34903, "stage0_s": 0.00792, "stage0_m": 0.04728, "stage0_l": 0.12333, "stage0_h": 0.38247, "stage1_loss_instance_mil": 0.17595, "stage1_bag_acc": 99.5405, "stage1_neg_loss": 0.06126, "stage1_mean_ious": 0.31888, "stage1_s": 0.00545, "stage1_m": 0.0551, "stage1_l": 0.13413, "stage1_h": 0.3447, "loss": 0.2562, "grad_norm": 10.62104, "time": 1.73604}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02808, "stage0_loss_instance_mil": 0.01611, "stage0_bag_acc": 99.28005, "stage0_mean_ious": 0.34715, "stage0_s": 0.0, "stage0_m": 0.03563, "stage0_l": 0.12849, "stage0_h": 0.3769, "stage1_loss_instance_mil": 0.16304, "stage1_bag_acc": 99.40072, "stage1_neg_loss": 0.06298, "stage1_mean_ious": 0.31298, "stage1_s": 0.0, "stage1_m": 0.0405, "stage1_l": 0.13675, "stage1_h": 0.33562, "loss": 0.24213, "grad_norm": 10.86861, "time": 1.67289}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08085, "stage0_loss_instance_mil": 0.0114, "stage0_bag_acc": 99.2676, "stage0_mean_ious": 0.35023, "stage0_s": 0.0, "stage0_m": 0.04221, "stage0_l": 0.14828, "stage0_h": 0.37477, "stage1_loss_instance_mil": 0.16373, "stage1_bag_acc": 99.38882, "stage1_neg_loss": 0.05829, "stage1_mean_ious": 0.31511, "stage1_s": 0.0, "stage1_m": 0.05494, "stage1_l": 0.16248, "stage1_h": 0.33203, "loss": 0.23342, "grad_norm": 10.22228, "time": 1.70422}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.0301, "stage0_loss_instance_mil": 0.01101, "stage0_bag_acc": 99.70952, "stage0_mean_ious": 0.38741, "stage0_s": 0.0, "stage0_m": 0.03856, "stage0_l": 0.16511, "stage0_h": 0.41578, "stage1_loss_instance_mil": 0.15966, "stage1_bag_acc": 99.69188, "stage1_neg_loss": 0.06113, "stage1_mean_ious": 0.34168, "stage1_s": 0.0, "stage1_m": 0.0417, "stage1_l": 0.16663, "stage1_h": 0.36188, "loss": 0.2318, "grad_norm": 10.98953, "time": 1.74984}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.0287, "stage0_loss_instance_mil": 0.01251, "stage0_bag_acc": 99.03497, "stage0_mean_ious": 0.36255, "stage0_s": 0.0, "stage0_m": 0.01087, "stage0_l": 0.13083, "stage0_h": 0.39293, "stage1_loss_instance_mil": 0.13331, "stage1_bag_acc": 99.35652, "stage1_neg_loss": 0.05096, "stage1_mean_ious": 0.33138, "stage1_s": 0.0, "stage1_m": 0.01227, "stage1_l": 0.14113, "stage1_h": 0.35478, "loss": 0.19678, "grad_norm": 8.99959, "time": 1.72311}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.033, "bbox_mAP_50": 0.124, "bbox_mAP_75": 0.058, "bbox_mAP_s": 0.018, "bbox_mAP_m": 0.007, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.033 0.124 0.058 0.018 0.007 0.002"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07865, "stage0_loss_instance_mil": 0.00656, "stage0_bag_acc": 99.76667, "stage0_mean_ious": 0.36723, "stage0_s": 0.0, "stage0_m": 0.04072, "stage0_l": 0.22392, "stage0_h": 0.3927, "stage1_loss_instance_mil": 0.13431, "stage1_bag_acc": 99.68052, "stage1_neg_loss": 0.05685, "stage1_mean_ious": 0.3268, "stage1_s": 0.0, "stage1_m": 0.04853, "stage1_l": 0.21665, "stage1_h": 0.34421, "loss": 0.19773, "grad_norm": 9.2505, "time": 1.7558}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02886, "stage0_loss_instance_mil": 0.00845, "stage0_bag_acc": 99.37734, "stage0_mean_ious": 0.35799, "stage0_s": 0.0, "stage0_m": 0.037, "stage0_l": 0.11748, "stage0_h": 0.38688, "stage1_loss_instance_mil": 0.14796, "stage1_bag_acc": 99.92308, "stage1_neg_loss": 0.05907, "stage1_mean_ious": 0.32096, "stage1_s": 0.0, "stage1_m": 0.0376, "stage1_l": 0.12614, "stage1_h": 0.34305, "loss": 0.21549, "grad_norm": 10.86188, "time": 1.69402}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.03026, "stage0_loss_instance_mil": 0.01115, "stage0_bag_acc": 99.57507, "stage0_mean_ious": 0.34695, "stage0_s": 0.0, "stage0_m": 0.04088, "stage0_l": 0.11489, "stage0_h": 0.37696, "stage1_loss_instance_mil": 0.13247, "stage1_bag_acc": 99.28406, "stage1_neg_loss": 0.0555, "stage1_mean_ious": 0.31673, "stage1_s": 0.0, "stage1_m": 0.05079, "stage1_l": 0.12993, "stage1_h": 0.33827, "loss": 0.19912, "grad_norm": 8.94217, "time": 1.72669}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08079, "stage0_loss_instance_mil": 0.00971, "stage0_bag_acc": 99.28613, "stage0_mean_ious": 0.35581, "stage0_s": 0.0, "stage0_m": 0.022, "stage0_l": 0.14925, "stage0_h": 0.38646, "stage1_loss_instance_mil": 0.11845, "stage1_bag_acc": 99.66361, "stage1_neg_loss": 0.05106, "stage1_mean_ious": 0.31779, "stage1_s": 0.0, "stage1_m": 0.02686, "stage1_l": 0.1439, "stage1_h": 0.34304, "loss": 0.17921, "grad_norm": 8.43672, "time": 1.76446}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.0314, "stage0_loss_instance_mil": 0.02083, "stage0_bag_acc": 99.0264, "stage0_mean_ious": 0.33918, "stage0_s": 0.0, "stage0_m": 0.04653, "stage0_l": 0.13936, "stage0_h": 0.37096, "stage1_loss_instance_mil": 0.121, "stage1_bag_acc": 99.18899, "stage1_neg_loss": 0.04992, "stage1_mean_ious": 0.30691, "stage1_s": 0.0, "stage1_m": 0.05747, "stage1_l": 0.14167, "stage1_h": 0.33133, "loss": 0.19176, "grad_norm": 7.35472, "time": 1.75501}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02974, "stage0_loss_instance_mil": 0.01095, "stage0_bag_acc": 99.24522, "stage0_mean_ious": 0.38147, "stage0_s": 0.0, "stage0_m": 0.0538, "stage0_l": 0.15135, "stage0_h": 0.40648, "stage1_loss_instance_mil": 0.1107, "stage1_bag_acc": 99.67224, "stage1_neg_loss": 0.0509, "stage1_mean_ious": 0.34128, "stage1_s": 0.0, "stage1_m": 0.06179, "stage1_l": 0.15883, "stage1_h": 0.3585, "loss": 0.17254, "grad_norm": 8.34014, "time": 1.73399}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08272, "stage0_loss_instance_mil": 0.0093, "stage0_bag_acc": 99.48278, "stage0_mean_ious": 0.39209, "stage0_s": 0.0, "stage0_m": 0.01983, "stage0_l": 0.11785, "stage0_h": 0.42196, "stage1_loss_instance_mil": 0.11626, "stage1_bag_acc": 99.60947, "stage1_neg_loss": 0.04107, "stage1_mean_ious": 0.35802, "stage1_s": 0.0, "stage1_m": 0.02498, "stage1_l": 0.1272, "stage1_h": 0.38138, "loss": 0.16664, "grad_norm": 7.4579, "time": 1.80185}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.03062, "stage0_loss_instance_mil": 0.0072, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.35132, "stage0_s": 0.0, "stage0_m": 0.0265, "stage0_l": 0.1375, "stage0_h": 0.38248, "stage1_loss_instance_mil": 0.08696, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.04155, "stage1_mean_ious": 0.32309, "stage1_s": 0.0, "stage1_m": 0.02958, "stage1_l": 0.15579, "stage1_h": 0.34625, "loss": 0.13571, "grad_norm": 5.01483, "time": 1.72576}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.0313, "stage0_loss_instance_mil": 0.00295, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.36798, "stage0_s": 0.0, "stage0_m": 0.03161, "stage0_l": 0.11991, "stage0_h": 0.40666, "stage1_loss_instance_mil": 0.09117, "stage1_bag_acc": 99.69124, "stage1_neg_loss": 0.04347, "stage1_mean_ious": 0.33739, "stage1_s": 0.0, "stage1_m": 0.03815, "stage1_l": 0.12355, "stage1_h": 0.3683, "loss": 0.13759, "grad_norm": 6.3982, "time": 1.7777}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.044, "bbox_mAP_50": 0.16, "bbox_mAP_75": 0.078, "bbox_mAP_s": 0.026, "bbox_mAP_m": 0.012, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.044 0.160 0.078 0.026 0.012 0.003"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08455, "stage0_loss_instance_mil": 0.0075, "stage0_bag_acc": 99.77976, "stage0_mean_ious": 0.36955, "stage0_s": 0.0, "stage0_m": 0.0279, "stage0_l": 0.13392, "stage0_h": 0.39482, "stage1_loss_instance_mil": 0.08675, "stage1_bag_acc": 99.68452, "stage1_neg_loss": 0.04582, "stage1_mean_ious": 0.33751, "stage1_s": 0.0, "stage1_m": 0.02538, "stage1_l": 0.13591, "stage1_h": 0.35786, "loss": 0.14007, "grad_norm": 5.66625, "time": 1.82139}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.03057, "stage0_loss_instance_mil": 0.00429, "stage0_bag_acc": 99.8, "stage0_mean_ious": 0.35428, "stage0_s": 0.0, "stage0_m": 0.03571, "stage0_l": 0.14883, "stage0_h": 0.38025, "stage1_loss_instance_mil": 0.08473, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.04045, "stage1_mean_ious": 0.3199, "stage1_s": 0.0, "stage1_m": 0.04014, "stage1_l": 0.15491, "stage1_h": 0.34071, "loss": 0.12947, "grad_norm": 5.37081, "time": 1.73669}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.03114, "stage0_loss_instance_mil": 0.0041, "stage0_bag_acc": 99.73085, "stage0_mean_ious": 0.36504, "stage0_s": 0.0, "stage0_m": 0.05264, "stage0_l": 0.15022, "stage0_h": 0.40056, "stage1_loss_instance_mil": 0.08329, "stage1_bag_acc": 99.68278, "stage1_neg_loss": 0.03712, "stage1_mean_ious": 0.33217, "stage1_s": 0.0, "stage1_m": 0.06914, "stage1_l": 0.16372, "stage1_h": 0.3565, "loss": 0.12451, "grad_norm": 4.86503, "time": 1.74886}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08106, "stage0_loss_instance_mil": 0.00705, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.35794, "stage0_s": 0.008, "stage0_m": 0.04608, "stage0_l": 0.15122, "stage0_h": 0.39416, "stage1_loss_instance_mil": 0.08707, "stage1_bag_acc": 99.88235, "stage1_neg_loss": 0.04442, "stage1_mean_ious": 0.3289, "stage1_s": 0.00661, "stage1_m": 0.0554, "stage1_l": 0.16214, "stage1_h": 0.35645, "loss": 0.13854, "grad_norm": 5.67495, "time": 1.80178}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.03248, "stage0_loss_instance_mil": 0.00167, "stage0_bag_acc": 99.85714, "stage0_mean_ious": 0.36404, "stage0_s": 0.0, "stage0_m": 0.04191, "stage0_l": 0.09971, "stage0_h": 0.39467, "stage1_loss_instance_mil": 0.07582, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03651, "stage1_mean_ious": 0.33094, "stage1_s": 0.0, "stage1_m": 0.05017, "stage1_l": 0.11429, "stage1_h": 0.35377, "loss": 0.114, "grad_norm": 5.07394, "time": 1.74988}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.03166, "stage0_loss_instance_mil": 0.00204, "stage0_bag_acc": 99.875, "stage0_mean_ious": 0.36978, "stage0_s": 0.0, "stage0_m": 0.02768, "stage0_l": 0.12856, "stage0_h": 0.39744, "stage1_loss_instance_mil": 0.0906, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.04078, "stage1_mean_ious": 0.33534, "stage1_s": 0.0, "stage1_m": 0.0305, "stage1_l": 0.14062, "stage1_h": 0.35582, "loss": 0.13341, "grad_norm": 5.11964, "time": 1.71734}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.08401, "stage0_loss_instance_mil": 0.00176, "stage0_bag_acc": 99.91304, "stage0_mean_ious": 0.38919, "stage0_s": 0.0, "stage0_m": 0.02249, "stage0_l": 0.14892, "stage0_h": 0.42614, "stage1_loss_instance_mil": 0.06867, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.03774, "stage1_mean_ious": 0.35856, "stage1_s": 0.0, "stage1_m": 0.02674, "stage1_l": 0.15514, "stage1_h": 0.38668, "loss": 0.10818, "grad_norm": 4.62261, "time": 1.78489}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18833, "data_time": 0.02744, "stage0_loss_instance_mil": 0.00293, "stage0_bag_acc": 99.72222, "stage0_mean_ious": 0.35929, "stage0_s": 0.0, "stage0_m": 0.03393, "stage0_l": 0.14255, "stage0_h": 0.38851, "stage1_loss_instance_mil": 0.0828, "stage1_bag_acc": 99.8477, "stage1_neg_loss": 0.03913, "stage1_mean_ious": 0.32775, "stage1_s": 0.0, "stage1_m": 0.04338, "stage1_l": 0.15445, "stage1_h": 0.34916, "loss": 0.12485, "grad_norm": 5.325, "time": 1.66688}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18833, "data_time": 0.03, "stage0_loss_instance_mil": 0.00504, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.34069, "stage0_s": 0.0, "stage0_m": 0.0373, "stage0_l": 0.15676, "stage0_h": 0.36476, "stage1_loss_instance_mil": 0.08784, "stage1_bag_acc": 99.7995, "stage1_neg_loss": 0.04427, "stage1_mean_ious": 0.31671, "stage1_s": 0.0, "stage1_m": 0.0414, "stage1_l": 0.16098, "stage1_h": 0.33534, "loss": 0.13715, "grad_norm": 5.76954, "time": 1.68509}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.042, "bbox_mAP_50": 0.154, "bbox_mAP_75": 0.068, "bbox_mAP_s": 0.024, "bbox_mAP_m": 0.013, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.042 0.154 0.068 0.024 0.013 0.005"}
