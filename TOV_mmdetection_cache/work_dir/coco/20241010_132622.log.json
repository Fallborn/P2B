{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+15637e6", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=2,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ]))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=1,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [4]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 8607, "data_time": 0.05879, "stage0_loss_instance_mil": 0.53723, "stage0_bag_acc": 45.69706, "stage0_mean_ious": 0.13962, "stage0_s": 0.00295, "stage0_m": 0.02791, "stage0_l": 0.11898, "stage0_h": 0.13624, "stage1_loss_instance_mil": 0.30036, "stage1_bag_acc": 34.42811, "stage1_neg_loss": 0.02827, "stage1_mean_ious": 0.13753, "stage1_s": 0.00195, "stage1_m": 0.02825, "stage1_l": 0.11696, "stage1_h": 0.13456, "loss": 0.86587, "grad_norm": 6.04694, "time": 0.75682}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.01988, "memory": 8627, "data_time": 0.01369, "stage0_loss_instance_mil": 0.65045, "stage0_bag_acc": 32.39239, "stage0_mean_ious": 0.09845, "stage0_s": 0.0, "stage0_m": 0.0142, "stage0_l": 0.08473, "stage0_h": 0.09925, "stage1_loss_instance_mil": 0.20116, "stage1_bag_acc": 31.43604, "stage1_neg_loss": 0.03436, "stage1_mean_ious": 0.097, "stage1_s": 0.0, "stage1_m": 0.0151, "stage1_l": 0.08249, "stage1_h": 0.09802, "loss": 0.88597, "grad_norm": 4.43204, "time": 0.71447}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.02987, "memory": 8627, "data_time": 0.01264, "stage0_loss_instance_mil": 0.6148, "stage0_bag_acc": 33.55809, "stage0_mean_ious": 0.1009, "stage0_s": 0.00136, "stage0_m": 0.02464, "stage0_l": 0.07408, "stage0_h": 0.10058, "stage1_loss_instance_mil": 0.17156, "stage1_bag_acc": 37.49881, "stage1_neg_loss": 0.01611, "stage1_mean_ious": 0.09737, "stage1_s": 0.00061, "stage1_m": 0.02186, "stage1_l": 0.07111, "stage1_h": 0.09634, "loss": 0.80247, "grad_norm": 1.61092, "time": 0.6943}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.03986, "memory": 8627, "data_time": 0.01268, "stage0_loss_instance_mil": 0.62458, "stage0_bag_acc": 27.99513, "stage0_mean_ious": 0.10336, "stage0_s": 0.00314, "stage0_m": 0.01242, "stage0_l": 0.08988, "stage0_h": 0.10079, "stage1_loss_instance_mil": 0.17292, "stage1_bag_acc": 39.74433, "stage1_neg_loss": 0.09404, "stage1_mean_ious": 0.10276, "stage1_s": 0.00275, "stage1_m": 0.01176, "stage1_l": 0.08921, "stage1_h": 0.10047, "loss": 0.89154, "grad_norm": 3.61595, "time": 0.72491}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.04985, "memory": 8627, "data_time": 0.01229, "stage0_loss_instance_mil": 0.6459, "stage0_bag_acc": 25.84109, "stage0_mean_ious": 0.12703, "stage0_s": 0.0, "stage0_m": 0.02457, "stage0_l": 0.10874, "stage0_h": 0.12519, "stage1_loss_instance_mil": 0.16864, "stage1_bag_acc": 32.5919, "stage1_neg_loss": 0.01153, "stage1_mean_ious": 0.1249, "stage1_s": 0.0, "stage1_m": 0.02472, "stage1_l": 0.11036, "stage1_h": 0.12212, "loss": 0.82607, "grad_norm": 0.72443, "time": 0.66641}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.05984, "memory": 8627, "data_time": 0.01348, "stage0_loss_instance_mil": 0.65362, "stage0_bag_acc": 21.52188, "stage0_mean_ious": 0.13722, "stage0_s": 0.00265, "stage0_m": 0.02729, "stage0_l": 0.10243, "stage0_h": 0.13616, "stage1_loss_instance_mil": 0.15428, "stage1_bag_acc": 24.36489, "stage1_neg_loss": 0.01028, "stage1_mean_ious": 0.13801, "stage1_s": 0.00339, "stage1_m": 0.02943, "stage1_l": 0.10866, "stage1_h": 0.13409, "loss": 0.81819, "grad_norm": 0.54684, "time": 0.72678}
{"mode": "val", "epoch": 1, "iter": 300, "lr": 0.05984, "eval_iter_num": 720, "bbox_mAP": 0.01, "bbox_mAP_50": 0.04, "bbox_mAP_75": 0.017, "bbox_mAP_s": 0.004, "bbox_mAP_m": 0.002, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.010 0.040 0.017 0.004 0.002 0.000"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.06983, "memory": 8627, "data_time": 0.06049, "stage0_loss_instance_mil": 0.63775, "stage0_bag_acc": 26.36441, "stage0_mean_ious": 0.13028, "stage0_s": 0.0, "stage0_m": 0.02222, "stage0_l": 0.10369, "stage0_h": 0.13257, "stage1_loss_instance_mil": 0.15258, "stage1_bag_acc": 25.16371, "stage1_neg_loss": 0.01416, "stage1_mean_ious": 0.13268, "stage1_s": 0.0, "stage1_m": 0.02088, "stage1_l": 0.10684, "stage1_h": 0.13504, "loss": 0.80448, "grad_norm": 0.63468, "time": 0.76522}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.07982, "memory": 8627, "data_time": 0.01317, "stage0_loss_instance_mil": 0.63654, "stage0_bag_acc": 27.06402, "stage0_mean_ious": 0.12669, "stage0_s": 0.0, "stage0_m": 0.02039, "stage0_l": 0.10263, "stage0_h": 0.12528, "stage1_loss_instance_mil": 0.1484, "stage1_bag_acc": 28.1531, "stage1_neg_loss": 0.01653, "stage1_mean_ious": 0.12441, "stage1_s": 0.0, "stage1_m": 0.01934, "stage1_l": 0.1043, "stage1_h": 0.12107, "loss": 0.80147, "grad_norm": 0.48665, "time": 0.68776}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.08981, "memory": 8627, "data_time": 0.0134, "stage0_loss_instance_mil": 0.64937, "stage0_bag_acc": 14.89935, "stage0_mean_ious": 0.13723, "stage0_s": 0.00094, "stage0_m": 0.03069, "stage0_l": 0.10888, "stage0_h": 0.13581, "stage1_loss_instance_mil": 0.12716, "stage1_bag_acc": 31.33018, "stage1_neg_loss": 0.01849, "stage1_mean_ious": 0.13966, "stage1_s": 0.00093, "stage1_m": 0.03481, "stage1_l": 0.10967, "stage1_h": 0.13868, "loss": 0.79502, "grad_norm": 0.38582, "time": 0.73843}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0998, "memory": 8627, "data_time": 0.01283, "stage0_loss_instance_mil": 0.63775, "stage0_bag_acc": 23.41187, "stage0_mean_ious": 0.12577, "stage0_s": 0.0, "stage0_m": 0.02228, "stage0_l": 0.12647, "stage0_h": 0.12271, "stage1_loss_instance_mil": 0.13058, "stage1_bag_acc": 27.76798, "stage1_neg_loss": 0.02162, "stage1_mean_ious": 0.13041, "stage1_s": 0.0, "stage1_m": 0.01946, "stage1_l": 0.12271, "stage1_h": 0.12965, "loss": 0.78994, "grad_norm": 0.36883, "time": 0.715}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.1, "memory": 8627, "data_time": 0.01289, "stage0_loss_instance_mil": 0.64061, "stage0_bag_acc": 21.24547, "stage0_mean_ious": 0.12446, "stage0_s": 0.00401, "stage0_m": 0.01763, "stage0_l": 0.094, "stage0_h": 0.12258, "stage1_loss_instance_mil": 0.13545, "stage1_bag_acc": 22.36573, "stage1_neg_loss": 0.02103, "stage1_mean_ious": 0.12571, "stage1_s": 0.00269, "stage1_m": 0.01772, "stage1_l": 0.08755, "stage1_h": 0.12572, "loss": 0.79709, "grad_norm": 0.34583, "time": 0.72684}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.1, "memory": 8648, "data_time": 0.01146, "stage0_loss_instance_mil": 0.62893, "stage0_bag_acc": 23.5961, "stage0_mean_ious": 0.12587, "stage0_s": 0.0, "stage0_m": 0.01983, "stage0_l": 0.10211, "stage0_h": 0.12518, "stage1_loss_instance_mil": 0.1312, "stage1_bag_acc": 33.62098, "stage1_neg_loss": 0.02134, "stage1_mean_ious": 0.12518, "stage1_s": 0.0, "stage1_m": 0.01856, "stage1_l": 0.0987, "stage1_h": 0.12481, "loss": 0.78147, "grad_norm": 0.35302, "time": 0.66451}
{"mode": "val", "epoch": 2, "iter": 300, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.049, "bbox_mAP_50": 0.18, "bbox_mAP_75": 0.089, "bbox_mAP_s": 0.025, "bbox_mAP_m": 0.01, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.049 0.180 0.089 0.025 0.010 0.005"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.1, "memory": 8648, "data_time": 0.05788, "stage0_loss_instance_mil": 0.63399, "stage0_bag_acc": 25.37074, "stage0_mean_ious": 0.12035, "stage0_s": 0.0, "stage0_m": 0.02207, "stage0_l": 0.10207, "stage0_h": 0.12006, "stage1_loss_instance_mil": 0.12231, "stage1_bag_acc": 35.2701, "stage1_neg_loss": 0.02373, "stage1_mean_ious": 0.12115, "stage1_s": 0.0, "stage1_m": 0.02406, "stage1_l": 0.09542, "stage1_h": 0.124, "loss": 0.78003, "grad_norm": 0.40666, "time": 0.76376}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.1, "memory": 8648, "data_time": 0.01302, "stage0_loss_instance_mil": 0.61898, "stage0_bag_acc": 29.7816, "stage0_mean_ious": 0.10918, "stage0_s": 0.0, "stage0_m": 0.01601, "stage0_l": 0.08884, "stage0_h": 0.10396, "stage1_loss_instance_mil": 0.12933, "stage1_bag_acc": 46.55162, "stage1_neg_loss": 0.02236, "stage1_mean_ious": 0.10928, "stage1_s": 0.0, "stage1_m": 0.01341, "stage1_l": 0.08863, "stage1_h": 0.10445, "loss": 0.77067, "grad_norm": 0.43708, "time": 0.74154}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.1, "memory": 8648, "data_time": 0.01262, "stage0_loss_instance_mil": 0.61641, "stage0_bag_acc": 30.52432, "stage0_mean_ious": 0.10004, "stage0_s": 0.0, "stage0_m": 0.02088, "stage0_l": 0.08025, "stage0_h": 0.09863, "stage1_loss_instance_mil": 0.1374, "stage1_bag_acc": 40.81857, "stage1_neg_loss": 0.02673, "stage1_mean_ious": 0.09866, "stage1_s": 0.0, "stage1_m": 0.01968, "stage1_l": 0.07647, "stage1_h": 0.09878, "loss": 0.78054, "grad_norm": 0.56271, "time": 0.69502}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.1, "memory": 8648, "data_time": 0.01133, "stage0_loss_instance_mil": 0.59182, "stage0_bag_acc": 31.69369, "stage0_mean_ious": 0.11899, "stage0_s": 0.0, "stage0_m": 0.03339, "stage0_l": 0.09062, "stage0_h": 0.11877, "stage1_loss_instance_mil": 0.15066, "stage1_bag_acc": 35.4672, "stage1_neg_loss": 0.02119, "stage1_mean_ious": 0.11468, "stage1_s": 0.0, "stage1_m": 0.0308, "stage1_l": 0.09104, "stage1_h": 0.11317, "loss": 0.76367, "grad_norm": 0.61914, "time": 0.68752}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.1, "memory": 8648, "data_time": 0.01252, "stage0_loss_instance_mil": 0.56631, "stage0_bag_acc": 36.53678, "stage0_mean_ious": 0.13618, "stage0_s": 0.0, "stage0_m": 0.01273, "stage0_l": 0.09201, "stage0_h": 0.142, "stage1_loss_instance_mil": 0.15342, "stage1_bag_acc": 43.88697, "stage1_neg_loss": 0.0405, "stage1_mean_ious": 0.13415, "stage1_s": 0.0, "stage1_m": 0.01406, "stage1_l": 0.09495, "stage1_h": 0.13909, "loss": 0.76022, "grad_norm": 0.85594, "time": 0.71468}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.1, "memory": 8648, "data_time": 0.0135, "stage0_loss_instance_mil": 0.57304, "stage0_bag_acc": 37.7637, "stage0_mean_ious": 0.14713, "stage0_s": 0.0, "stage0_m": 0.0426, "stage0_l": 0.11199, "stage0_h": 0.15036, "stage1_loss_instance_mil": 0.16933, "stage1_bag_acc": 37.3912, "stage1_neg_loss": 0.03337, "stage1_mean_ious": 0.1487, "stage1_s": 0.0, "stage1_m": 0.04233, "stage1_l": 0.1091, "stage1_h": 0.15347, "loss": 0.77574, "grad_norm": 0.80816, "time": 0.75129}
{"mode": "val", "epoch": 3, "iter": 300, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.039, "bbox_mAP_50": 0.145, "bbox_mAP_75": 0.066, "bbox_mAP_s": 0.026, "bbox_mAP_m": 0.012, "bbox_mAP_l": 0.006, "bbox_mAP_copypaste": "0.039 0.145 0.066 0.026 0.012 0.006"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.1, "memory": 8648, "data_time": 0.05797, "stage0_loss_instance_mil": 0.5979, "stage0_bag_acc": 32.82772, "stage0_mean_ious": 0.1554, "stage0_s": 0.0, "stage0_m": 0.01792, "stage0_l": 0.13778, "stage0_h": 0.15808, "stage1_loss_instance_mil": 0.14798, "stage1_bag_acc": 39.19392, "stage1_neg_loss": 0.03832, "stage1_mean_ious": 0.15133, "stage1_s": 0.0, "stage1_m": 0.01962, "stage1_l": 0.12892, "stage1_h": 0.15533, "loss": 0.78419, "grad_norm": 1.00985, "time": 0.7543}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.1, "memory": 8648, "data_time": 0.01288, "stage0_loss_instance_mil": 0.62323, "stage0_bag_acc": 27.15472, "stage0_mean_ious": 0.1448, "stage0_s": 0.0, "stage0_m": 0.02807, "stage0_l": 0.13306, "stage0_h": 0.14241, "stage1_loss_instance_mil": 0.12897, "stage1_bag_acc": 31.03019, "stage1_neg_loss": 0.02236, "stage1_mean_ious": 0.13697, "stage1_s": 0.0, "stage1_m": 0.02644, "stage1_l": 0.13251, "stage1_h": 0.13179, "loss": 0.77456, "grad_norm": 0.40045, "time": 0.72414}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.1, "memory": 8648, "data_time": 0.01328, "stage0_loss_instance_mil": 0.56451, "stage0_bag_acc": 41.2348, "stage0_mean_ious": 0.14974, "stage0_s": 0.0, "stage0_m": 0.02711, "stage0_l": 0.13447, "stage0_h": 0.14505, "stage1_loss_instance_mil": 0.15895, "stage1_bag_acc": 43.3284, "stage1_neg_loss": 0.02828, "stage1_mean_ious": 0.14092, "stage1_s": 0.0, "stage1_m": 0.02921, "stage1_l": 0.13277, "stage1_h": 0.13301, "loss": 0.75174, "grad_norm": 0.73178, "time": 0.76219}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.1, "memory": 8648, "data_time": 0.01319, "stage0_loss_instance_mil": 0.52647, "stage0_bag_acc": 48.70116, "stage0_mean_ious": 0.14754, "stage0_s": 0.0, "stage0_m": 0.01978, "stage0_l": 0.12258, "stage0_h": 0.14761, "stage1_loss_instance_mil": 0.25021, "stage1_bag_acc": 41.80303, "stage1_neg_loss": 0.04135, "stage1_mean_ious": 0.14503, "stage1_s": 0.0, "stage1_m": 0.02023, "stage1_l": 0.11997, "stage1_h": 0.14448, "loss": 0.81803, "grad_norm": 1.25277, "time": 0.71192}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.1, "memory": 8648, "data_time": 0.01403, "stage0_loss_instance_mil": 0.50806, "stage0_bag_acc": 50.5764, "stage0_mean_ious": 0.14452, "stage0_s": 0.0, "stage0_m": 0.01904, "stage0_l": 0.13697, "stage0_h": 0.14421, "stage1_loss_instance_mil": 0.18971, "stage1_bag_acc": 46.10894, "stage1_neg_loss": 0.04091, "stage1_mean_ious": 0.13962, "stage1_s": 0.0, "stage1_m": 0.01853, "stage1_l": 0.13264, "stage1_h": 0.13954, "loss": 0.73868, "grad_norm": 0.92653, "time": 0.71847}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.1, "memory": 8648, "data_time": 0.01251, "stage0_loss_instance_mil": 0.43795, "stage0_bag_acc": 55.26691, "stage0_mean_ious": 0.14871, "stage0_s": 0.00195, "stage0_m": 0.01919, "stage0_l": 0.14907, "stage0_h": 0.14562, "stage1_loss_instance_mil": 0.2507, "stage1_bag_acc": 45.50675, "stage1_neg_loss": 0.05155, "stage1_mean_ious": 0.14066, "stage1_s": 0.00186, "stage1_m": 0.02001, "stage1_l": 0.14285, "stage1_h": 0.13776, "loss": 0.7402, "grad_norm": 0.97237, "time": 0.6888}
{"mode": "val", "epoch": 4, "iter": 300, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.027, "bbox_mAP_50": 0.1, "bbox_mAP_75": 0.045, "bbox_mAP_s": 0.015, "bbox_mAP_m": 0.008, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.027 0.100 0.045 0.015 0.008 0.003"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.1, "memory": 8648, "data_time": 0.05863, "stage0_loss_instance_mil": 0.5126, "stage0_bag_acc": 44.30436, "stage0_mean_ious": 0.14307, "stage0_s": 0.0, "stage0_m": 0.01256, "stage0_l": 0.09693, "stage0_h": 0.14697, "stage1_loss_instance_mil": 0.21869, "stage1_bag_acc": 39.84253, "stage1_neg_loss": 0.0459, "stage1_mean_ious": 0.13934, "stage1_s": 0.0, "stage1_m": 0.01286, "stage1_l": 0.10077, "stage1_h": 0.14148, "loss": 0.77719, "grad_norm": 1.01347, "time": 0.76939}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.1, "memory": 8648, "data_time": 0.0123, "stage0_loss_instance_mil": 0.52814, "stage0_bag_acc": 45.90834, "stage0_mean_ious": 0.1604, "stage0_s": 0.0, "stage0_m": 0.01382, "stage0_l": 0.13615, "stage0_h": 0.16213, "stage1_loss_instance_mil": 0.17439, "stage1_bag_acc": 44.40668, "stage1_neg_loss": 0.03594, "stage1_mean_ious": 0.15427, "stage1_s": 0.0, "stage1_m": 0.01459, "stage1_l": 0.13272, "stage1_h": 0.15637, "loss": 0.73848, "grad_norm": 0.73269, "time": 0.69243}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.1, "memory": 8648, "data_time": 0.01271, "stage0_loss_instance_mil": 0.52771, "stage0_bag_acc": 45.30653, "stage0_mean_ious": 0.15939, "stage0_s": 0.00363, "stage0_m": 0.02492, "stage0_l": 0.11974, "stage0_h": 0.1625, "stage1_loss_instance_mil": 0.19978, "stage1_bag_acc": 34.71101, "stage1_neg_loss": 0.05097, "stage1_mean_ious": 0.15449, "stage1_s": 0.0031, "stage1_m": 0.02346, "stage1_l": 0.11348, "stage1_h": 0.15821, "loss": 0.77846, "grad_norm": 0.96013, "time": 0.71631}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.1, "memory": 8648, "data_time": 0.01276, "stage0_loss_instance_mil": 0.54084, "stage0_bag_acc": 42.8374, "stage0_mean_ious": 0.13374, "stage0_s": 0.0, "stage0_m": 0.01249, "stage0_l": 0.13823, "stage0_h": 0.12463, "stage1_loss_instance_mil": 0.23188, "stage1_bag_acc": 31.36608, "stage1_neg_loss": 0.04321, "stage1_mean_ious": 0.12608, "stage1_s": 0.0, "stage1_m": 0.01196, "stage1_l": 0.1354, "stage1_h": 0.11555, "loss": 0.81593, "grad_norm": 1.41818, "time": 0.70327}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.1, "memory": 8648, "data_time": 0.01292, "stage0_loss_instance_mil": 0.60441, "stage0_bag_acc": 30.7311, "stage0_mean_ious": 0.12007, "stage0_s": 0.0, "stage0_m": 0.01376, "stage0_l": 0.12105, "stage0_h": 0.10855, "stage1_loss_instance_mil": 0.15212, "stage1_bag_acc": 26.85361, "stage1_neg_loss": 0.03969, "stage1_mean_ious": 0.11098, "stage1_s": 0.0, "stage1_m": 0.01397, "stage1_l": 0.11745, "stage1_h": 0.09804, "loss": 0.79621, "grad_norm": 1.1592, "time": 0.71785}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.1, "memory": 8648, "data_time": 0.01309, "stage0_loss_instance_mil": 0.622, "stage0_bag_acc": 30.26582, "stage0_mean_ious": 0.05015, "stage0_s": 0.0, "stage0_m": 0.04086, "stage0_l": 0.07658, "stage0_h": 0.03596, "stage1_loss_instance_mil": 0.11212, "stage1_bag_acc": 33.44195, "stage1_neg_loss": 0.02188, "stage1_mean_ious": 0.04822, "stage1_s": 0.0, "stage1_m": 0.04035, "stage1_l": 0.07546, "stage1_h": 0.03331, "loss": 0.756, "grad_norm": 0.53307, "time": 0.70696}
{"mode": "val", "epoch": 5, "iter": 300, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.1, "memory": 8648, "data_time": 0.05993, "stage0_loss_instance_mil": 0.6063, "stage0_bag_acc": 25.18869, "stage0_mean_ious": 0.03667, "stage0_s": 0.0, "stage0_m": 0.02219, "stage0_l": 0.0523, "stage0_h": 0.02453, "stage1_loss_instance_mil": 0.10692, "stage1_bag_acc": 33.31705, "stage1_neg_loss": 0.02632, "stage1_mean_ious": 0.03583, "stage1_s": 0.0, "stage1_m": 0.01938, "stage1_l": 0.05222, "stage1_h": 0.02358, "loss": 0.73954, "grad_norm": 0.52554, "time": 0.7664}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.1, "memory": 8648, "data_time": 0.01297, "stage0_loss_instance_mil": 0.62198, "stage0_bag_acc": 23.17354, "stage0_mean_ious": 0.0427, "stage0_s": 0.0, "stage0_m": 0.01838, "stage0_l": 0.06472, "stage0_h": 0.03137, "stage1_loss_instance_mil": 0.114, "stage1_bag_acc": 25.26621, "stage1_neg_loss": 0.05188, "stage1_mean_ious": 0.04072, "stage1_s": 0.0, "stage1_m": 0.01886, "stage1_l": 0.06132, "stage1_h": 0.02974, "loss": 0.78787, "grad_norm": 1.11195, "time": 0.70702}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.1, "memory": 8648, "data_time": 0.01265, "stage0_loss_instance_mil": 0.61824, "stage0_bag_acc": 30.84583, "stage0_mean_ious": 0.03785, "stage0_s": 0.0, "stage0_m": 0.03627, "stage0_l": 0.05679, "stage0_h": 0.02294, "stage1_loss_instance_mil": 0.11055, "stage1_bag_acc": 25.1617, "stage1_neg_loss": 0.02351, "stage1_mean_ious": 0.03581, "stage1_s": 0.0, "stage1_m": 0.03308, "stage1_l": 0.05386, "stage1_h": 0.02173, "loss": 0.7523, "grad_norm": 0.34865, "time": 0.71591}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.1, "memory": 8648, "data_time": 0.01276, "stage0_loss_instance_mil": 0.62396, "stage0_bag_acc": 27.65222, "stage0_mean_ious": 0.04257, "stage0_s": 0.0, "stage0_m": 0.03295, "stage0_l": 0.06577, "stage0_h": 0.02867, "stage1_loss_instance_mil": 0.10408, "stage1_bag_acc": 28.24922, "stage1_neg_loss": 0.02021, "stage1_mean_ious": 0.04014, "stage1_s": 0.0, "stage1_m": 0.02771, "stage1_l": 0.06223, "stage1_h": 0.02726, "loss": 0.74825, "grad_norm": 0.2477, "time": 0.70008}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.1, "memory": 8648, "data_time": 0.01282, "stage0_loss_instance_mil": 0.62456, "stage0_bag_acc": 22.80178, "stage0_mean_ious": 0.03808, "stage0_s": 0.0, "stage0_m": 0.02543, "stage0_l": 0.05124, "stage0_h": 0.02604, "stage1_loss_instance_mil": 0.101, "stage1_bag_acc": 26.87754, "stage1_neg_loss": 0.0204, "stage1_mean_ious": 0.03673, "stage1_s": 0.0, "stage1_m": 0.02179, "stage1_l": 0.05015, "stage1_h": 0.0251, "loss": 0.74595, "grad_norm": 0.21235, "time": 0.69196}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.1, "memory": 8648, "data_time": 0.01296, "stage0_loss_instance_mil": 0.63041, "stage0_bag_acc": 20.22922, "stage0_mean_ious": 0.03111, "stage0_s": 0.0, "stage0_m": 0.01989, "stage0_l": 0.04592, "stage0_h": 0.02178, "stage1_loss_instance_mil": 0.09547, "stage1_bag_acc": 24.63546, "stage1_neg_loss": 0.02406, "stage1_mean_ious": 0.03123, "stage1_s": 0.0, "stage1_m": 0.01912, "stage1_l": 0.04547, "stage1_h": 0.02192, "loss": 0.74994, "grad_norm": 0.22706, "time": 0.71618}
{"mode": "val", "epoch": 6, "iter": 300, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.1, "memory": 8648, "data_time": 0.05888, "stage0_loss_instance_mil": 0.63309, "stage0_bag_acc": 19.18628, "stage0_mean_ious": 0.0336, "stage0_s": 0.0, "stage0_m": 0.01594, "stage0_l": 0.06166, "stage0_h": 0.02026, "stage1_loss_instance_mil": 0.09601, "stage1_bag_acc": 18.52762, "stage1_neg_loss": 0.02207, "stage1_mean_ious": 0.03203, "stage1_s": 0.0, "stage1_m": 0.01489, "stage1_l": 0.05665, "stage1_h": 0.01959, "loss": 0.75118, "grad_norm": 0.23709, "time": 0.74267}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.1, "memory": 8648, "data_time": 0.01226, "stage0_loss_instance_mil": 0.62762, "stage0_bag_acc": 18.34639, "stage0_mean_ious": 0.0396, "stage0_s": 0.0, "stage0_m": 0.01971, "stage0_l": 0.06291, "stage0_h": 0.02416, "stage1_loss_instance_mil": 0.0981, "stage1_bag_acc": 20.63369, "stage1_neg_loss": 0.02202, "stage1_mean_ious": 0.03945, "stage1_s": 0.0, "stage1_m": 0.01773, "stage1_l": 0.06176, "stage1_h": 0.02552, "loss": 0.74774, "grad_norm": 0.20217, "time": 0.69939}
