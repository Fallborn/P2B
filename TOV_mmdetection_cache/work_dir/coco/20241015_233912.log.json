{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+a790e82", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=4,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=4,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 7803, "data_time": 0.05567, "stage0_loss_instance_mil": 0.70636, "stage0_bag_acc": 12.77778, "stage0_mean_ious": 0.03904, "stage0_s": 0.03362, "stage0_m": 0.03232, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.17294, "stage1_bag_acc": 17.47778, "stage1_neg_loss": 0.00095, "stage1_mean_ious": 0.03838, "stage1_s": 0.03275, "stage1_m": 0.0313, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.88024, "grad_norm": 5.64415, "time": 0.77711}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 7803, "data_time": 0.0096, "stage0_loss_instance_mil": 0.69494, "stage0_bag_acc": 25.10556, "stage0_mean_ious": 0.08147, "stage0_s": 0.06929, "stage0_m": 0.06576, "stage0_l": 0.01423, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.16681, "stage1_bag_acc": 20.34091, "stage1_neg_loss": 0.00149, "stage1_mean_ious": 0.08329, "stage1_s": 0.06947, "stage1_m": 0.06843, "stage1_l": 0.01421, "stage1_h": 0.0, "loss": 0.86324, "grad_norm": 5.9475, "time": 0.87481}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 7803, "data_time": 0.01058, "stage0_loss_instance_mil": 0.67909, "stage0_bag_acc": 23.14163, "stage0_mean_ious": 0.09405, "stage0_s": 0.05982, "stage0_m": 0.11377, "stage0_l": 0.01226, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.15987, "stage1_bag_acc": 12.84286, "stage1_neg_loss": 0.00463, "stage1_mean_ious": 0.08993, "stage1_s": 0.05984, "stage1_m": 0.10539, "stage1_l": 0.01045, "stage1_h": 0.0, "loss": 0.84359, "grad_norm": 8.2473, "time": 0.87854}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 2e-05, "memory": 7803, "data_time": 0.0101, "stage0_loss_instance_mil": 0.64423, "stage0_bag_acc": 28.48001, "stage0_mean_ious": 0.11635, "stage0_s": 0.12092, "stage0_m": 0.07709, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.14698, "stage1_bag_acc": 44.61032, "stage1_neg_loss": 0.01426, "stage1_mean_ious": 0.12216, "stage1_s": 0.13042, "stage1_m": 0.07064, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.80547, "grad_norm": 9.22484, "time": 0.8368}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 2e-05, "memory": 7803, "data_time": 0.00966, "stage0_loss_instance_mil": 0.62796, "stage0_bag_acc": 26.97525, "stage0_mean_ious": 0.13102, "stage0_s": 0.10763, "stage0_m": 0.10177, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.13652, "stage1_bag_acc": 46.40772, "stage1_neg_loss": 0.0168, "stage1_mean_ious": 0.14571, "stage1_s": 0.1205, "stage1_m": 0.11191, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.78128, "grad_norm": 9.82154, "time": 0.85679}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 3e-05, "memory": 7803, "data_time": 0.0582, "stage0_loss_instance_mil": 0.49595, "stage0_bag_acc": 43.90938, "stage0_mean_ious": 0.26913, "stage0_s": 0.21963, "stage0_m": 0.215, "stage0_l": 0.01241, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.1088, "stage1_bag_acc": 45.50527, "stage1_neg_loss": 0.02137, "stage1_mean_ious": 0.34468, "stage1_s": 0.29498, "stage1_m": 0.24045, "stage1_l": 0.00657, "stage1_h": 0.0, "loss": 0.62612, "grad_norm": 11.40429, "time": 0.89472}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 4e-05, "memory": 7803, "data_time": 0.00941, "stage0_loss_instance_mil": 0.49755, "stage0_bag_acc": 46.88571, "stage0_mean_ious": 0.27068, "stage0_s": 0.22841, "stage0_m": 0.19724, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.09579, "stage1_bag_acc": 47.71508, "stage1_neg_loss": 0.01547, "stage1_mean_ious": 0.34536, "stage1_s": 0.29356, "stage1_m": 0.23826, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.60882, "grad_norm": 10.37854, "time": 0.84737}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 4e-05, "memory": 7803, "data_time": 0.00965, "stage0_loss_instance_mil": 0.36349, "stage0_bag_acc": 62.11421, "stage0_mean_ious": 0.35858, "stage0_s": 0.31325, "stage0_m": 0.26589, "stage0_l": 0.02053, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.07922, "stage1_bag_acc": 57.96573, "stage1_neg_loss": 0.02327, "stage1_mean_ious": 0.43985, "stage1_s": 0.41139, "stage1_m": 0.27505, "stage1_l": 0.01957, "stage1_h": 0.0, "loss": 0.46598, "grad_norm": 10.54545, "time": 0.86427}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 5e-05, "memory": 7803, "data_time": 0.00962, "stage0_loss_instance_mil": 0.23605, "stage0_bag_acc": 81.02222, "stage0_mean_ious": 0.41096, "stage0_s": 0.36916, "stage0_m": 0.34021, "stage0_l": 0.01341, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.06468, "stage1_bag_acc": 81.41429, "stage1_neg_loss": 0.01893, "stage1_mean_ious": 0.49677, "stage1_s": 0.47656, "stage1_m": 0.35372, "stage1_l": 0.0084, "stage1_h": 0.0, "loss": 0.31966, "grad_norm": 12.34256, "time": 0.84003}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 5e-05, "memory": 7803, "data_time": 0.01015, "stage0_loss_instance_mil": 0.2162, "stage0_bag_acc": 82.09495, "stage0_mean_ious": 0.42725, "stage0_s": 0.37282, "stage0_m": 0.29169, "stage0_l": 0.02177, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.07805, "stage1_bag_acc": 82.26465, "stage1_neg_loss": 0.01715, "stage1_mean_ious": 0.5314, "stage1_s": 0.50238, "stage1_m": 0.29515, "stage1_l": 0.02332, "stage1_h": 0.0, "loss": 0.3114, "grad_norm": 11.77539, "time": 0.88402}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 5e-05, "memory": 7803, "data_time": 0.05822, "stage0_loss_instance_mil": 0.17999, "stage0_bag_acc": 84.82381, "stage0_mean_ious": 0.44473, "stage0_s": 0.38089, "stage0_m": 0.28754, "stage0_l": 0.01654, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.04569, "stage1_bag_acc": 87.47619, "stage1_neg_loss": 0.01671, "stage1_mean_ious": 0.54042, "stage1_s": 0.50195, "stage1_m": 0.2821, "stage1_l": 0.01153, "stage1_h": 0.0, "loss": 0.24238, "grad_norm": 10.17912, "time": 0.92069}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 7803, "data_time": 0.00995, "stage0_loss_instance_mil": 0.13584, "stage0_bag_acc": 90.63095, "stage0_mean_ious": 0.44538, "stage0_s": 0.40292, "stage0_m": 0.28329, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.03531, "stage1_bag_acc": 90.8158, "stage1_neg_loss": 0.01268, "stage1_mean_ious": 0.55564, "stage1_s": 0.52467, "stage1_m": 0.30049, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.18383, "grad_norm": 7.51162, "time": 0.84926}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 7803, "data_time": 0.00982, "stage0_loss_instance_mil": 0.11431, "stage0_bag_acc": 91.50635, "stage0_mean_ious": 0.41601, "stage0_s": 0.38201, "stage0_m": 0.26839, "stage0_l": 0.01048, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0241, "stage1_bag_acc": 93.52857, "stage1_neg_loss": 0.01145, "stage1_mean_ious": 0.55724, "stage1_s": 0.54375, "stage1_m": 0.31681, "stage1_l": 0.00896, "stage1_h": 0.0, "loss": 0.14985, "grad_norm": 7.08385, "time": 0.8547}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 5e-05, "memory": 7803, "data_time": 0.00984, "stage0_loss_instance_mil": 0.08993, "stage0_bag_acc": 93.51883, "stage0_mean_ious": 0.51118, "stage0_s": 0.43948, "stage0_m": 0.42852, "stage0_l": 0.01684, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.02506, "stage1_bag_acc": 93.87338, "stage1_neg_loss": 0.01198, "stage1_mean_ious": 0.60177, "stage1_s": 0.56646, "stage1_m": 0.43533, "stage1_l": 0.01228, "stage1_h": 0.0, "loss": 0.12697, "grad_norm": 6.32593, "time": 0.86585}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 5e-05, "memory": 7803, "data_time": 0.00966, "stage0_loss_instance_mil": 0.13002, "stage0_bag_acc": 89.25137, "stage0_mean_ious": 0.47499, "stage0_s": 0.43779, "stage0_m": 0.31092, "stage0_l": 0.02295, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.03418, "stage1_bag_acc": 91.22035, "stage1_neg_loss": 0.00941, "stage1_mean_ious": 0.56916, "stage1_s": 0.55474, "stage1_m": 0.31527, "stage1_l": 0.01975, "stage1_h": 0.0, "loss": 0.17361, "grad_norm": 6.9208, "time": 0.83996}
{"mode": "val", "epoch": 3, "iter": 280, "lr": 5e-05, "eval_iter_num": 140, "bbox_mAP": 0.219, "bbox_mAP_50": 0.681, "bbox_mAP_75": 0.422, "bbox_mAP_s": 0.152, "bbox_mAP_m": 0.071, "bbox_mAP_l": 0.026, "bbox_mAP_copypaste": "0.219 0.681 0.422 0.152 0.071 0.026"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 7803, "data_time": 0.06009, "stage0_loss_instance_mil": 0.08416, "stage0_bag_acc": 92.81883, "stage0_mean_ious": 0.49771, "stage0_s": 0.43514, "stage0_m": 0.35454, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.02263, "stage1_bag_acc": 93.68009, "stage1_neg_loss": 0.01124, "stage1_mean_ious": 0.59836, "stage1_s": 0.56625, "stage1_m": 0.35436, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.11803, "grad_norm": 6.11696, "time": 0.93463}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 7803, "data_time": 0.00983, "stage0_loss_instance_mil": 0.08745, "stage0_bag_acc": 92.56667, "stage0_mean_ious": 0.46911, "stage0_s": 0.42405, "stage0_m": 0.40261, "stage0_l": 0.02139, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0331, "stage1_bag_acc": 92.73333, "stage1_neg_loss": 0.01377, "stage1_mean_ious": 0.56587, "stage1_s": 0.55128, "stage1_m": 0.40699, "stage1_l": 0.01864, "stage1_h": 0.0, "loss": 0.13432, "grad_norm": 7.01528, "time": 0.85155}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 7803, "data_time": 0.00886, "stage0_loss_instance_mil": 0.09756, "stage0_bag_acc": 93.35873, "stage0_mean_ious": 0.49151, "stage0_s": 0.45867, "stage0_m": 0.31758, "stage0_l": 0.03616, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.02474, "stage1_bag_acc": 93.55952, "stage1_neg_loss": 0.00877, "stage1_mean_ious": 0.59384, "stage1_s": 0.58958, "stage1_m": 0.3145, "stage1_l": 0.03096, "stage1_h": 0.0, "loss": 0.13107, "grad_norm": 5.88773, "time": 0.64419}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 5e-05, "memory": 7803, "data_time": 0.00911, "stage0_loss_instance_mil": 0.07583, "stage0_bag_acc": 94.06667, "stage0_mean_ious": 0.43805, "stage0_s": 0.38954, "stage0_m": 0.28822, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.02429, "stage1_bag_acc": 94.21111, "stage1_neg_loss": 0.00797, "stage1_mean_ious": 0.55492, "stage1_s": 0.53309, "stage1_m": 0.28943, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.10809, "grad_norm": 5.4713, "time": 0.68684}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 5e-05, "memory": 7803, "data_time": 0.0088, "stage0_loss_instance_mil": 0.05896, "stage0_bag_acc": 94.98687, "stage0_mean_ious": 0.47737, "stage0_s": 0.44137, "stage0_m": 0.31496, "stage0_l": 0.00667, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01647, "stage1_bag_acc": 95.03535, "stage1_neg_loss": 0.00703, "stage1_mean_ious": 0.58127, "stage1_s": 0.56893, "stage1_m": 0.32108, "stage1_l": 0.00679, "stage1_h": 0.0, "loss": 0.08246, "grad_norm": 4.47279, "time": 0.66426}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 7803, "data_time": 0.05776, "stage0_loss_instance_mil": 0.05684, "stage0_bag_acc": 94.47302, "stage0_mean_ious": 0.46573, "stage0_s": 0.42761, "stage0_m": 0.37549, "stage0_l": 0.00811, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01681, "stage1_bag_acc": 95.82857, "stage1_neg_loss": 0.00603, "stage1_mean_ious": 0.57557, "stage1_s": 0.57309, "stage1_m": 0.35665, "stage1_l": 0.00628, "stage1_h": 0.0, "loss": 0.07968, "grad_norm": 4.04793, "time": 0.72927}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 7803, "data_time": 0.00895, "stage0_loss_instance_mil": 0.06583, "stage0_bag_acc": 96.05151, "stage0_mean_ious": 0.47491, "stage0_s": 0.44326, "stage0_m": 0.24746, "stage0_l": 0.00826, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01528, "stage1_bag_acc": 95.98485, "stage1_neg_loss": 0.00716, "stage1_mean_ious": 0.57262, "stage1_s": 0.56002, "stage1_m": 0.25369, "stage1_l": 0.00683, "stage1_h": 0.0, "loss": 0.08827, "grad_norm": 5.29809, "time": 0.65312}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 7803, "data_time": 0.00935, "stage0_loss_instance_mil": 0.08008, "stage0_bag_acc": 93.47922, "stage0_mean_ious": 0.48302, "stage0_s": 0.43421, "stage0_m": 0.36445, "stage0_l": 0.01436, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01951, "stage1_bag_acc": 95.15296, "stage1_neg_loss": 0.00997, "stage1_mean_ious": 0.57577, "stage1_s": 0.56258, "stage1_m": 0.36566, "stage1_l": 0.0115, "stage1_h": 0.0, "loss": 0.10955, "grad_norm": 5.55835, "time": 0.70562}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 5e-05, "memory": 7803, "data_time": 0.00912, "stage0_loss_instance_mil": 0.06145, "stage0_bag_acc": 95.50303, "stage0_mean_ious": 0.49757, "stage0_s": 0.44269, "stage0_m": 0.30307, "stage0_l": 0.01729, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.02223, "stage1_bag_acc": 94.5697, "stage1_neg_loss": 0.00754, "stage1_mean_ious": 0.57719, "stage1_s": 0.559, "stage1_m": 0.29772, "stage1_l": 0.01063, "stage1_h": 0.0, "loss": 0.09122, "grad_norm": 4.90214, "time": 0.72279}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 5e-05, "memory": 7803, "data_time": 0.00901, "stage0_loss_instance_mil": 0.05665, "stage0_bag_acc": 96.00151, "stage0_mean_ious": 0.47209, "stage0_s": 0.42398, "stage0_m": 0.33626, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01547, "stage1_bag_acc": 96.03485, "stage1_neg_loss": 0.00604, "stage1_mean_ious": 0.5803, "stage1_s": 0.5609, "stage1_m": 0.3362, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.07816, "grad_norm": 4.07285, "time": 0.83453}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 7803, "data_time": 0.05929, "stage0_loss_instance_mil": 0.02998, "stage0_bag_acc": 98.25, "stage0_mean_ious": 0.48388, "stage0_s": 0.44314, "stage0_m": 0.31167, "stage0_l": 0.00797, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0127, "stage1_bag_acc": 98.2, "stage1_neg_loss": 0.00777, "stage1_mean_ious": 0.57815, "stage1_s": 0.56707, "stage1_m": 0.32194, "stage1_l": 0.00698, "stage1_h": 0.0, "loss": 0.05045, "grad_norm": 2.77465, "time": 0.93264}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 7803, "data_time": 0.00978, "stage0_loss_instance_mil": 0.02512, "stage0_bag_acc": 98.11429, "stage0_mean_ious": 0.48069, "stage0_s": 0.45, "stage0_m": 0.3275, "stage0_l": 0.02628, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01616, "stage1_bag_acc": 97.93485, "stage1_neg_loss": 0.01062, "stage1_mean_ious": 0.57779, "stage1_s": 0.59086, "stage1_m": 0.30005, "stage1_l": 0.02069, "stage1_h": 0.0, "loss": 0.0519, "grad_norm": 3.97166, "time": 0.83573}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 7803, "data_time": 0.00966, "stage0_loss_instance_mil": 0.0366, "stage0_bag_acc": 96.77222, "stage0_mean_ious": 0.48752, "stage0_s": 0.44485, "stage0_m": 0.33374, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0136, "stage1_bag_acc": 97.89444, "stage1_neg_loss": 0.00668, "stage1_mean_ious": 0.57997, "stage1_s": 0.54804, "stage1_m": 0.343, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.05688, "grad_norm": 3.81965, "time": 0.82372}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 5e-05, "memory": 7803, "data_time": 0.01127, "stage0_loss_instance_mil": 0.04808, "stage0_bag_acc": 96.48333, "stage0_mean_ious": 0.49716, "stage0_s": 0.44335, "stage0_m": 0.3093, "stage0_l": 0.01292, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01465, "stage1_bag_acc": 97.03333, "stage1_neg_loss": 0.00607, "stage1_mean_ious": 0.59477, "stage1_s": 0.56951, "stage1_m": 0.30152, "stage1_l": 0.01593, "stage1_h": 0.0, "loss": 0.0688, "grad_norm": 3.76969, "time": 0.88924}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 5e-05, "memory": 7803, "data_time": 0.01018, "stage0_loss_instance_mil": 0.06419, "stage0_bag_acc": 93.84286, "stage0_mean_ious": 0.46962, "stage0_s": 0.41941, "stage0_m": 0.33059, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.02005, "stage1_bag_acc": 94.29048, "stage1_neg_loss": 0.00586, "stage1_mean_ious": 0.56737, "stage1_s": 0.55108, "stage1_m": 0.34837, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.0901, "grad_norm": 4.64952, "time": 0.86237}
{"mode": "val", "epoch": 6, "iter": 280, "lr": 5e-05, "eval_iter_num": 140, "bbox_mAP": 0.228, "bbox_mAP_50": 0.692, "bbox_mAP_75": 0.44, "bbox_mAP_s": 0.165, "bbox_mAP_m": 0.079, "bbox_mAP_l": 0.029, "bbox_mAP_copypaste": "0.228 0.692 0.440 0.165 0.079 0.029"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 7803, "data_time": 0.05772, "stage0_loss_instance_mil": 0.04531, "stage0_bag_acc": 96.86429, "stage0_mean_ious": 0.48872, "stage0_s": 0.42202, "stage0_m": 0.3492, "stage0_l": 0.01127, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01532, "stage1_bag_acc": 97.25, "stage1_neg_loss": 0.01081, "stage1_mean_ious": 0.59359, "stage1_s": 0.55156, "stage1_m": 0.38776, "stage1_l": 0.01468, "stage1_h": 0.0, "loss": 0.07144, "grad_norm": 3.79443, "time": 0.92626}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 7803, "data_time": 0.01037, "stage0_loss_instance_mil": 0.03721, "stage0_bag_acc": 98.06667, "stage0_mean_ious": 0.51803, "stage0_s": 0.4687, "stage0_m": 0.33889, "stage0_l": 0.01478, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01692, "stage1_bag_acc": 98.35, "stage1_neg_loss": 0.00517, "stage1_mean_ious": 0.59863, "stage1_s": 0.58295, "stage1_m": 0.33192, "stage1_l": 0.01347, "stage1_h": 0.0, "loss": 0.0593, "grad_norm": 3.12446, "time": 0.84154}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 7803, "data_time": 0.00945, "stage0_loss_instance_mil": 0.05181, "stage0_bag_acc": 97.53333, "stage0_mean_ious": 0.4862, "stage0_s": 0.44197, "stage0_m": 0.33776, "stage0_l": 0.01046, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01966, "stage1_bag_acc": 97.08333, "stage1_neg_loss": 0.01107, "stage1_mean_ious": 0.58191, "stage1_s": 0.57404, "stage1_m": 0.33698, "stage1_l": 0.00531, "stage1_h": 0.0, "loss": 0.08254, "grad_norm": 4.59781, "time": 0.85894}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 5e-05, "memory": 7803, "data_time": 0.01056, "stage0_loss_instance_mil": 0.04933, "stage0_bag_acc": 96.25, "stage0_mean_ious": 0.46275, "stage0_s": 0.43078, "stage0_m": 0.33627, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01011, "stage1_bag_acc": 97.15, "stage1_neg_loss": 0.00433, "stage1_mean_ious": 0.56668, "stage1_s": 0.55606, "stage1_m": 0.34271, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.06378, "grad_norm": 2.94458, "time": 0.82662}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 5e-05, "memory": 7803, "data_time": 0.00871, "stage0_loss_instance_mil": 0.03603, "stage0_bag_acc": 97.56263, "stage0_mean_ious": 0.47486, "stage0_s": 0.43304, "stage0_m": 0.26804, "stage0_l": 0.01973, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01545, "stage1_bag_acc": 96.24596, "stage1_neg_loss": 0.00496, "stage1_mean_ious": 0.55727, "stage1_s": 0.55117, "stage1_m": 0.2545, "stage1_l": 0.01334, "stage1_h": 0.0, "loss": 0.05644, "grad_norm": 2.96791, "time": 0.78492}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 7803, "data_time": 0.0579, "stage0_loss_instance_mil": 0.04417, "stage0_bag_acc": 97.42929, "stage0_mean_ious": 0.46211, "stage0_s": 0.44358, "stage0_m": 0.2669, "stage0_l": 0.00847, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01166, "stage1_bag_acc": 97.17929, "stage1_neg_loss": 0.00479, "stage1_mean_ious": 0.56574, "stage1_s": 0.56382, "stage1_m": 0.26026, "stage1_l": 0.00719, "stage1_h": 0.0, "loss": 0.06063, "grad_norm": 3.50968, "time": 0.84449}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 7803, "data_time": 0.00946, "stage0_loss_instance_mil": 0.02388, "stage0_bag_acc": 97.9697, "stage0_mean_ious": 0.50671, "stage0_s": 0.44425, "stage0_m": 0.33754, "stage0_l": 0.01718, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.00759, "stage1_bag_acc": 97.9697, "stage1_neg_loss": 0.00257, "stage1_mean_ious": 0.58259, "stage1_s": 0.55198, "stage1_m": 0.31468, "stage1_l": 0.00954, "stage1_h": 0.0, "loss": 0.03404, "grad_norm": 2.06772, "time": 0.85881}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 7803, "data_time": 0.00909, "stage0_loss_instance_mil": 0.02616, "stage0_bag_acc": 97.45, "stage0_mean_ious": 0.49577, "stage0_s": 0.47409, "stage0_m": 0.31107, "stage0_l": 0.00916, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01135, "stage1_bag_acc": 98.35, "stage1_neg_loss": 0.00352, "stage1_mean_ious": 0.57951, "stage1_s": 0.56877, "stage1_m": 0.31473, "stage1_l": 0.00923, "stage1_h": 0.0, "loss": 0.04102, "grad_norm": 2.69438, "time": 0.82684}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 5e-05, "memory": 7803, "data_time": 0.00971, "stage0_loss_instance_mil": 0.03244, "stage0_bag_acc": 97.98333, "stage0_mean_ious": 0.48609, "stage0_s": 0.43559, "stage0_m": 0.27015, "stage0_l": 0.01152, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0142, "stage1_bag_acc": 98.03333, "stage1_neg_loss": 0.00736, "stage1_mean_ious": 0.59221, "stage1_s": 0.56618, "stage1_m": 0.27069, "stage1_l": 0.00786, "stage1_h": 0.0, "loss": 0.054, "grad_norm": 4.0481, "time": 0.84644}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 5e-05, "memory": 7803, "data_time": 0.00861, "stage0_loss_instance_mil": 0.05715, "stage0_bag_acc": 96.84192, "stage0_mean_ious": 0.49791, "stage0_s": 0.46686, "stage0_m": 0.28968, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01536, "stage1_bag_acc": 96.93232, "stage1_neg_loss": 0.01086, "stage1_mean_ious": 0.60278, "stage1_s": 0.59516, "stage1_m": 0.30061, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 0.08337, "grad_norm": 4.25028, "time": 0.7977}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 7803, "data_time": 0.05797, "stage0_loss_instance_mil": 0.03427, "stage0_bag_acc": 98.31818, "stage0_mean_ious": 0.47969, "stage0_s": 0.4364, "stage0_m": 0.29655, "stage0_l": 0.00847, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01742, "stage1_bag_acc": 98.01818, "stage1_neg_loss": 0.00573, "stage1_mean_ious": 0.57302, "stage1_s": 0.54232, "stage1_m": 0.32299, "stage1_l": 0.0083, "stage1_h": 0.0, "loss": 0.05742, "grad_norm": 3.57317, "time": 0.69667}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 7803, "data_time": 0.00894, "stage0_loss_instance_mil": 0.03825, "stage0_bag_acc": 97.15, "stage0_mean_ious": 0.49077, "stage0_s": 0.4477, "stage0_m": 0.3625, "stage0_l": 0.01771, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.00763, "stage1_bag_acc": 96.8, "stage1_neg_loss": 0.00566, "stage1_mean_ious": 0.57779, "stage1_s": 0.58451, "stage1_m": 0.36516, "stage1_l": 0.01127, "stage1_h": 0.0, "loss": 0.05154, "grad_norm": 2.67243, "time": 0.67537}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 7803, "data_time": 0.00918, "stage0_loss_instance_mil": 0.0254, "stage0_bag_acc": 97.91667, "stage0_mean_ious": 0.48285, "stage0_s": 0.42197, "stage0_m": 0.34417, "stage0_l": 0.01759, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.01222, "stage1_bag_acc": 98.1, "stage1_neg_loss": 0.00443, "stage1_mean_ious": 0.58035, "stage1_s": 0.55502, "stage1_m": 0.32753, "stage1_l": 0.01726, "stage1_h": 0.0, "loss": 0.04205, "grad_norm": 2.69552, "time": 0.67212}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 1e-05, "memory": 7803, "data_time": 0.00937, "stage0_loss_instance_mil": 0.02038, "stage0_bag_acc": 98.35, "stage0_mean_ious": 0.51834, "stage0_s": 0.46388, "stage0_m": 0.41843, "stage0_l": 0.01098, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.00736, "stage1_bag_acc": 98.85, "stage1_neg_loss": 0.00324, "stage1_mean_ious": 0.59048, "stage1_s": 0.58998, "stage1_m": 0.40008, "stage1_l": 0.00986, "stage1_h": 0.0, "loss": 0.03097, "grad_norm": 2.17796, "time": 0.67486}
