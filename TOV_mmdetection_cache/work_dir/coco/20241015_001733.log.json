{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18711, "data_time": 0.07615, "stage0_loss_instance_mil": 0.72319, "stage0_bag_acc": 30.21813, "stage0_mean_ious": 0.36503, "stage0_s": 0.0, "stage0_m": 0.05259, "stage0_l": 0.26617, "stage0_h": 0.37075, "stage1_loss_instance_mil": 0.14949, "stage1_bag_acc": 24.56096, "stage1_neg_loss": 0.0066, "stage1_mean_ious": 0.32763, "stage1_s": 0.0, "stage1_m": 0.04997, "stage1_l": 0.23991, "stage1_h": 0.33344, "loss": 0.87928, "grad_norm": 3.24297, "time": 1.80289}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18719, "data_time": 0.02786, "stage0_loss_instance_mil": 0.59569, "stage0_bag_acc": 53.10887, "stage0_mean_ious": 0.36433, "stage0_s": 0.0, "stage0_m": 0.06709, "stage0_l": 0.27554, "stage0_h": 0.37092, "stage1_loss_instance_mil": 0.19277, "stage1_bag_acc": 42.50984, "stage1_neg_loss": 0.01937, "stage1_mean_ious": 0.33198, "stage1_s": 0.0, "stage1_m": 0.06252, "stage1_l": 0.26015, "stage1_h": 0.33567, "loss": 0.80782, "grad_norm": 4.39193, "time": 1.72815}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18719, "data_time": 0.02675, "stage0_loss_instance_mil": 0.26291, "stage0_bag_acc": 89.55335, "stage0_mean_ious": 0.37589, "stage0_s": 0.0, "stage0_m": 0.04969, "stage0_l": 0.2345, "stage0_h": 0.38554, "stage1_loss_instance_mil": 0.30493, "stage1_bag_acc": 72.80955, "stage1_neg_loss": 0.06571, "stage1_mean_ious": 0.35166, "stage1_s": 0.0, "stage1_m": 0.04155, "stage1_l": 0.22865, "stage1_h": 0.36186, "loss": 0.63354, "grad_norm": 9.51368, "time": 1.7481}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18772, "data_time": 0.07549, "stage0_loss_instance_mil": 0.075, "stage0_bag_acc": 96.63248, "stage0_mean_ious": 0.396, "stage0_s": 0.0, "stage0_m": 0.03879, "stage0_l": 0.23358, "stage0_h": 0.4132, "stage1_loss_instance_mil": 0.32251, "stage1_bag_acc": 97.27502, "stage1_neg_loss": 0.08663, "stage1_mean_ious": 0.37644, "stage1_s": 0.0, "stage1_m": 0.03257, "stage1_l": 0.2307, "stage1_h": 0.39245, "loss": 0.48414, "grad_norm": 10.47457, "time": 1.76375}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18772, "data_time": 0.02893, "stage0_loss_instance_mil": 0.0539, "stage0_bag_acc": 97.19611, "stage0_mean_ious": 0.37555, "stage0_s": 0.0, "stage0_m": 0.03939, "stage0_l": 0.20595, "stage0_h": 0.39318, "stage1_loss_instance_mil": 0.31408, "stage1_bag_acc": 97.44887, "stage1_neg_loss": 0.08483, "stage1_mean_ious": 0.35189, "stage1_s": 0.0, "stage1_m": 0.03002, "stage1_l": 0.2088, "stage1_h": 0.36656, "loss": 0.4528, "grad_norm": 14.01694, "time": 1.75532}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18772, "data_time": 0.02799, "stage0_loss_instance_mil": 0.0599, "stage0_bag_acc": 96.09806, "stage0_mean_ious": 0.41037, "stage0_s": 0.0, "stage0_m": 0.07503, "stage0_l": 0.30549, "stage0_h": 0.42766, "stage1_loss_instance_mil": 0.2668, "stage1_bag_acc": 98.028, "stage1_neg_loss": 0.07649, "stage1_mean_ious": 0.38786, "stage1_s": 0.0, "stage1_m": 0.06322, "stage1_l": 0.30879, "stage1_h": 0.40308, "loss": 0.40319, "grad_norm": 11.6274, "time": 1.7589}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18772, "data_time": 0.0756, "stage0_loss_instance_mil": 0.03572, "stage0_bag_acc": 97.82763, "stage0_mean_ious": 0.42688, "stage0_s": 0.0, "stage0_m": 0.0723, "stage0_l": 0.23812, "stage0_h": 0.45164, "stage1_loss_instance_mil": 0.26353, "stage1_bag_acc": 98.58589, "stage1_neg_loss": 0.08027, "stage1_mean_ious": 0.3959, "stage1_s": 0.0, "stage1_m": 0.04952, "stage1_l": 0.23445, "stage1_h": 0.41981, "loss": 0.37953, "grad_norm": 14.76771, "time": 1.78778}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18772, "data_time": 0.02675, "stage0_loss_instance_mil": 0.03237, "stage0_bag_acc": 98.35749, "stage0_mean_ious": 0.43379, "stage0_s": 0.0, "stage0_m": 0.06066, "stage0_l": 0.23219, "stage0_h": 0.46609, "stage1_loss_instance_mil": 0.2445, "stage1_bag_acc": 98.54281, "stage1_neg_loss": 0.08983, "stage1_mean_ious": 0.40205, "stage1_s": 0.0, "stage1_m": 0.04936, "stage1_l": 0.22972, "stage1_h": 0.42995, "loss": 0.3667, "grad_norm": 16.85432, "time": 1.70916}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18772, "data_time": 0.02668, "stage0_loss_instance_mil": 0.04042, "stage0_bag_acc": 97.56275, "stage0_mean_ious": 0.46976, "stage0_s": 0.00832, "stage0_m": 0.04175, "stage0_l": 0.23346, "stage0_h": 0.49537, "stage1_loss_instance_mil": 0.23892, "stage1_bag_acc": 97.90774, "stage1_neg_loss": 0.0724, "stage1_mean_ious": 0.43602, "stage1_s": 0.00648, "stage1_m": 0.03189, "stage1_l": 0.20959, "stage1_h": 0.46194, "loss": 0.35173, "grad_norm": 15.726, "time": 1.73029}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.103, "bbox_mAP_50": 0.268, "bbox_mAP_75": 0.189, "bbox_mAP_s": 0.105, "bbox_mAP_m": 0.058, "bbox_mAP_l": 0.025, "bbox_mAP_copypaste": "0.103 0.268 0.189 0.105 0.058 0.025"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18772, "data_time": 0.07469, "stage0_loss_instance_mil": 0.02436, "stage0_bag_acc": 98.78418, "stage0_mean_ious": 0.47282, "stage0_s": 0.0, "stage0_m": 0.04573, "stage0_l": 0.21018, "stage0_h": 0.50831, "stage1_loss_instance_mil": 0.17399, "stage1_bag_acc": 99.32828, "stage1_neg_loss": 0.07418, "stage1_mean_ious": 0.4359, "stage1_s": 0.0, "stage1_m": 0.04112, "stage1_l": 0.1924, "stage1_h": 0.46897, "loss": 0.27252, "grad_norm": 11.91381, "time": 1.75661}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18772, "data_time": 0.0264, "stage0_loss_instance_mil": 0.01662, "stage0_bag_acc": 99.41162, "stage0_mean_ious": 0.48387, "stage0_s": 0.0, "stage0_m": 0.05762, "stage0_l": 0.28175, "stage0_h": 0.51147, "stage1_loss_instance_mil": 0.20857, "stage1_bag_acc": 99.61551, "stage1_neg_loss": 0.06766, "stage1_mean_ious": 0.43752, "stage1_s": 0.0, "stage1_m": 0.04393, "stage1_l": 0.25912, "stage1_h": 0.46135, "loss": 0.29285, "grad_norm": 13.88154, "time": 1.75703}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18772, "data_time": 0.02649, "stage0_loss_instance_mil": 0.01249, "stage0_bag_acc": 99.4364, "stage0_mean_ious": 0.48784, "stage0_s": 0.0, "stage0_m": 0.05934, "stage0_l": 0.21989, "stage0_h": 0.5225, "stage1_loss_instance_mil": 0.16074, "stage1_bag_acc": 99.50585, "stage1_neg_loss": 0.06205, "stage1_mean_ious": 0.44354, "stage1_s": 0.0, "stage1_m": 0.04912, "stage1_l": 0.20387, "stage1_h": 0.4746, "loss": 0.23528, "grad_norm": 12.00997, "time": 1.74255}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18772, "data_time": 0.07662, "stage0_loss_instance_mil": 0.02016, "stage0_bag_acc": 98.6328, "stage0_mean_ious": 0.44536, "stage0_s": 0.0, "stage0_m": 0.04453, "stage0_l": 0.1829, "stage0_h": 0.47627, "stage1_loss_instance_mil": 0.1548, "stage1_bag_acc": 99.11033, "stage1_neg_loss": 0.05473, "stage1_mean_ious": 0.40338, "stage1_s": 0.0, "stage1_m": 0.027, "stage1_l": 0.16109, "stage1_h": 0.43297, "loss": 0.22969, "grad_norm": 10.16483, "time": 1.8031}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18772, "data_time": 0.02689, "stage0_loss_instance_mil": 0.02026, "stage0_bag_acc": 98.59145, "stage0_mean_ious": 0.44661, "stage0_s": 0.0, "stage0_m": 0.06504, "stage0_l": 0.24824, "stage0_h": 0.47145, "stage1_loss_instance_mil": 0.1517, "stage1_bag_acc": 99.40573, "stage1_neg_loss": 0.05639, "stage1_mean_ious": 0.41328, "stage1_s": 0.0, "stage1_m": 0.05233, "stage1_l": 0.23673, "stage1_h": 0.43615, "loss": 0.22834, "grad_norm": 9.03245, "time": 1.74458}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18772, "data_time": 0.02625, "stage0_loss_instance_mil": 0.01551, "stage0_bag_acc": 98.87169, "stage0_mean_ious": 0.44203, "stage0_s": 0.0, "stage0_m": 0.01812, "stage0_l": 0.19315, "stage0_h": 0.47144, "stage1_loss_instance_mil": 0.14469, "stage1_bag_acc": 99.4323, "stage1_neg_loss": 0.05388, "stage1_mean_ious": 0.40267, "stage1_s": 0.0, "stage1_m": 0.01325, "stage1_l": 0.17944, "stage1_h": 0.42896, "loss": 0.21408, "grad_norm": 9.53658, "time": 1.73168}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18772, "data_time": 0.0741, "stage0_loss_instance_mil": 0.01991, "stage0_bag_acc": 98.76351, "stage0_mean_ious": 0.47333, "stage0_s": 0.0, "stage0_m": 0.03075, "stage0_l": 0.27762, "stage0_h": 0.50449, "stage1_loss_instance_mil": 0.1254, "stage1_bag_acc": 99.63187, "stage1_neg_loss": 0.05041, "stage1_mean_ious": 0.43272, "stage1_s": 0.0, "stage1_m": 0.02617, "stage1_l": 0.27136, "stage1_h": 0.46014, "loss": 0.19572, "grad_norm": 8.94811, "time": 1.79132}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18772, "data_time": 0.02616, "stage0_loss_instance_mil": 0.00761, "stage0_bag_acc": 99.6619, "stage0_mean_ious": 0.45763, "stage0_s": 0.0, "stage0_m": 0.03844, "stage0_l": 0.22142, "stage0_h": 0.4894, "stage1_loss_instance_mil": 0.14578, "stage1_bag_acc": 99.28241, "stage1_neg_loss": 0.06819, "stage1_mean_ious": 0.41779, "stage1_s": 0.0, "stage1_m": 0.02448, "stage1_l": 0.19976, "stage1_h": 0.44833, "loss": 0.22159, "grad_norm": 12.2405, "time": 1.71753}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18772, "data_time": 0.02745, "stage0_loss_instance_mil": 0.00937, "stage0_bag_acc": 99.45982, "stage0_mean_ious": 0.45081, "stage0_s": 0.00772, "stage0_m": 0.05279, "stage0_l": 0.20638, "stage0_h": 0.48329, "stage1_loss_instance_mil": 0.12351, "stage1_bag_acc": 99.66032, "stage1_neg_loss": 0.05155, "stage1_mean_ious": 0.41528, "stage1_s": 0.00599, "stage1_m": 0.0438, "stage1_l": 0.20448, "stage1_h": 0.44382, "loss": 0.18442, "grad_norm": 7.48933, "time": 1.78575}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.114, "bbox_mAP_50": 0.296, "bbox_mAP_75": 0.213, "bbox_mAP_s": 0.115, "bbox_mAP_m": 0.065, "bbox_mAP_l": 0.025, "bbox_mAP_copypaste": "0.114 0.296 0.213 0.115 0.065 0.025"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18772, "data_time": 0.07447, "stage0_loss_instance_mil": 0.01205, "stage0_bag_acc": 99.50265, "stage0_mean_ious": 0.47229, "stage0_s": 0.0, "stage0_m": 0.05284, "stage0_l": 0.19066, "stage0_h": 0.50344, "stage1_loss_instance_mil": 0.11993, "stage1_bag_acc": 99.65811, "stage1_neg_loss": 0.06459, "stage1_mean_ious": 0.43642, "stage1_s": 0.0, "stage1_m": 0.04256, "stage1_l": 0.17362, "stage1_h": 0.46487, "loss": 0.19656, "grad_norm": 12.72219, "time": 1.81513}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18772, "data_time": 0.02532, "stage0_loss_instance_mil": 0.01333, "stage0_bag_acc": 99.35609, "stage0_mean_ious": 0.48381, "stage0_s": 0.0, "stage0_m": 0.03764, "stage0_l": 0.25484, "stage0_h": 0.51224, "stage1_loss_instance_mil": 0.10075, "stage1_bag_acc": 99.46291, "stage1_neg_loss": 0.05268, "stage1_mean_ious": 0.44519, "stage1_s": 0.0, "stage1_m": 0.03525, "stage1_l": 0.24068, "stage1_h": 0.47043, "loss": 0.16677, "grad_norm": 8.17572, "time": 1.74456}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18772, "data_time": 0.02651, "stage0_loss_instance_mil": 0.00594, "stage0_bag_acc": 99.71112, "stage0_mean_ious": 0.50212, "stage0_s": 0.0, "stage0_m": 0.06662, "stage0_l": 0.26301, "stage0_h": 0.53661, "stage1_loss_instance_mil": 0.0999, "stage1_bag_acc": 99.51062, "stage1_neg_loss": 0.04134, "stage1_mean_ious": 0.45632, "stage1_s": 0.0, "stage1_m": 0.05884, "stage1_l": 0.23949, "stage1_h": 0.48739, "loss": 0.14719, "grad_norm": 7.1548, "time": 1.73433}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18772, "data_time": 0.07619, "stage0_loss_instance_mil": 0.0051, "stage0_bag_acc": 99.75556, "stage0_mean_ious": 0.5155, "stage0_s": 0.0, "stage0_m": 0.05358, "stage0_l": 0.25039, "stage0_h": 0.55283, "stage1_loss_instance_mil": 0.09508, "stage1_bag_acc": 99.75556, "stage1_neg_loss": 0.04307, "stage1_mean_ious": 0.46781, "stage1_s": 0.0, "stage1_m": 0.04205, "stage1_l": 0.24038, "stage1_h": 0.50031, "loss": 0.14325, "grad_norm": 7.44306, "time": 1.77571}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18772, "data_time": 0.02737, "stage0_loss_instance_mil": 0.01237, "stage0_bag_acc": 99.26074, "stage0_mean_ious": 0.52939, "stage0_s": 0.0, "stage0_m": 0.04385, "stage0_l": 0.30063, "stage0_h": 0.55743, "stage1_loss_instance_mil": 0.08326, "stage1_bag_acc": 99.57143, "stage1_neg_loss": 0.04102, "stage1_mean_ious": 0.48479, "stage1_s": 0.0, "stage1_m": 0.04283, "stage1_l": 0.30739, "stage1_h": 0.50579, "loss": 0.13664, "grad_norm": 7.24174, "time": 1.76979}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18772, "data_time": 0.02648, "stage0_loss_instance_mil": 0.01099, "stage0_bag_acc": 99.31306, "stage0_mean_ious": 0.51398, "stage0_s": 0.0, "stage0_m": 0.03707, "stage0_l": 0.31182, "stage0_h": 0.54344, "stage1_loss_instance_mil": 0.08673, "stage1_bag_acc": 99.55335, "stage1_neg_loss": 0.03877, "stage1_mean_ious": 0.47078, "stage1_s": 0.0, "stage1_m": 0.03172, "stage1_l": 0.3005, "stage1_h": 0.49456, "loss": 0.13649, "grad_norm": 6.33728, "time": 1.77071}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18772, "data_time": 0.07679, "stage0_loss_instance_mil": 0.00518, "stage0_bag_acc": 99.80383, "stage0_mean_ious": 0.55111, "stage0_s": 0.0, "stage0_m": 0.06876, "stage0_l": 0.31217, "stage0_h": 0.57813, "stage1_loss_instance_mil": 0.07702, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03443, "stage1_mean_ious": 0.49778, "stage1_s": 0.0, "stage1_m": 0.06595, "stage1_l": 0.29109, "stage1_h": 0.52116, "loss": 0.11662, "grad_norm": 5.14376, "time": 1.82474}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18772, "data_time": 0.0265, "stage0_loss_instance_mil": 0.00295, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.53673, "stage0_s": 0.0, "stage0_m": 0.05078, "stage0_l": 0.29239, "stage0_h": 0.561, "stage1_loss_instance_mil": 0.08054, "stage1_bag_acc": 99.91667, "stage1_neg_loss": 0.03512, "stage1_mean_ious": 0.48809, "stage1_s": 0.0, "stage1_m": 0.05151, "stage1_l": 0.27989, "stage1_h": 0.50717, "loss": 0.11862, "grad_norm": 5.22625, "time": 1.74722}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18772, "data_time": 0.02709, "stage0_loss_instance_mil": 0.00192, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.549, "stage0_s": 0.0, "stage0_m": 0.05333, "stage0_l": 0.3175, "stage0_h": 0.5765, "stage1_loss_instance_mil": 0.06056, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.0345, "stage1_mean_ious": 0.49704, "stage1_s": 0.0, "stage1_m": 0.04587, "stage1_l": 0.29614, "stage1_h": 0.52005, "loss": 0.09698, "grad_norm": 4.66182, "time": 1.73511}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.126, "bbox_mAP_50": 0.323, "bbox_mAP_75": 0.225, "bbox_mAP_s": 0.127, "bbox_mAP_m": 0.079, "bbox_mAP_l": 0.033, "bbox_mAP_copypaste": "0.126 0.323 0.225 0.127 0.079 0.033"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18772, "data_time": 0.08265, "stage0_loss_instance_mil": 0.00132, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.55124, "stage0_s": 0.0, "stage0_m": 0.0296, "stage0_l": 0.32572, "stage0_h": 0.57923, "stage1_loss_instance_mil": 0.06379, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.03284, "stage1_mean_ious": 0.50324, "stage1_s": 0.0, "stage1_m": 0.02808, "stage1_l": 0.3232, "stage1_h": 0.52503, "loss": 0.09795, "grad_norm": 4.91314, "time": 1.80812}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18772, "data_time": 0.03269, "stage0_loss_instance_mil": 0.00598, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.52852, "stage0_s": 0.0, "stage0_m": 0.03721, "stage0_l": 0.28666, "stage0_h": 0.56292, "stage1_loss_instance_mil": 0.0641, "stage1_bag_acc": 99.69013, "stage1_neg_loss": 0.03418, "stage1_mean_ious": 0.47794, "stage1_s": 0.0, "stage1_m": 0.03056, "stage1_l": 0.28171, "stage1_h": 0.50545, "loss": 0.10426, "grad_norm": 4.83617, "time": 1.75221}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18772, "data_time": 0.03094, "stage0_loss_instance_mil": 0.00238, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.52151, "stage0_s": 0.0, "stage0_m": 0.06605, "stage0_l": 0.31491, "stage0_h": 0.55623, "stage1_loss_instance_mil": 0.07083, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03779, "stage1_mean_ious": 0.46353, "stage1_s": 0.0, "stage1_m": 0.05923, "stage1_l": 0.2899, "stage1_h": 0.49172, "loss": 0.111, "grad_norm": 4.91197, "time": 1.72776}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18772, "data_time": 0.07796, "stage0_loss_instance_mil": 0.00329, "stage0_bag_acc": 99.91667, "stage0_mean_ious": 0.51913, "stage0_s": 0.0, "stage0_m": 0.08616, "stage0_l": 0.30008, "stage0_h": 0.55949, "stage1_loss_instance_mil": 0.06274, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02984, "stage1_mean_ious": 0.47689, "stage1_s": 0.0, "stage1_m": 0.08886, "stage1_l": 0.29999, "stage1_h": 0.50915, "loss": 0.09587, "grad_norm": 3.9901, "time": 1.77359}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18772, "data_time": 0.03125, "stage0_loss_instance_mil": 0.00702, "stage0_bag_acc": 99.75188, "stage0_mean_ious": 0.53341, "stage0_s": 0.0, "stage0_m": 0.02418, "stage0_l": 0.30116, "stage0_h": 0.55904, "stage1_loss_instance_mil": 0.06453, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03543, "stage1_mean_ious": 0.48387, "stage1_s": 0.0, "stage1_m": 0.01828, "stage1_l": 0.28339, "stage1_h": 0.50626, "loss": 0.10697, "grad_norm": 4.43674, "time": 1.75763}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18772, "data_time": 0.02901, "stage0_loss_instance_mil": 0.00542, "stage0_bag_acc": 99.875, "stage0_mean_ious": 0.51669, "stage0_s": 0.0, "stage0_m": 0.06052, "stage0_l": 0.29189, "stage0_h": 0.54938, "stage1_loss_instance_mil": 0.0649, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.02944, "stage1_mean_ious": 0.47175, "stage1_s": 0.0, "stage1_m": 0.05731, "stage1_l": 0.28457, "stage1_h": 0.49581, "loss": 0.09976, "grad_norm": 4.85073, "time": 1.71473}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18772, "data_time": 0.07422, "stage0_loss_instance_mil": 0.00131, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.53253, "stage0_s": 0.0, "stage0_m": 0.06008, "stage0_l": 0.22356, "stage0_h": 0.56346, "stage1_loss_instance_mil": 0.05897, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03352, "stage1_mean_ious": 0.48397, "stage1_s": 0.0, "stage1_m": 0.05568, "stage1_l": 0.21711, "stage1_h": 0.5085, "loss": 0.0938, "grad_norm": 5.10502, "time": 1.78079}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18772, "data_time": 0.02705, "stage0_loss_instance_mil": 0.00458, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.53351, "stage0_s": 0.0, "stage0_m": 0.04866, "stage0_l": 0.27755, "stage0_h": 0.5628, "stage1_loss_instance_mil": 0.05908, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.03268, "stage1_mean_ious": 0.48143, "stage1_s": 0.0, "stage1_m": 0.03917, "stage1_l": 0.26511, "stage1_h": 0.50602, "loss": 0.09635, "grad_norm": 4.51762, "time": 1.76038}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18772, "data_time": 0.02593, "stage0_loss_instance_mil": 0.00293, "stage0_bag_acc": 99.83502, "stage0_mean_ious": 0.52485, "stage0_s": 0.0, "stage0_m": 0.03889, "stage0_l": 0.29905, "stage0_h": 0.54845, "stage1_loss_instance_mil": 0.05658, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.03671, "stage1_mean_ious": 0.4784, "stage1_s": 0.0, "stage1_m": 0.03586, "stage1_l": 0.28612, "stage1_h": 0.49823, "loss": 0.09622, "grad_norm": 5.2441, "time": 1.77277}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.127, "bbox_mAP_50": 0.327, "bbox_mAP_75": 0.23, "bbox_mAP_s": 0.128, "bbox_mAP_m": 0.076, "bbox_mAP_l": 0.033, "bbox_mAP_copypaste": "0.127 0.327 0.230 0.128 0.076 0.033"}
