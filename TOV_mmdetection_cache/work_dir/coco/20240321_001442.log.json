{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+c820f32", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPNPADNN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=4,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=4,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_val.json',\n        img_prefix='data/coco/images/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='SGD', lr=0.04, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=1,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [3]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00396, "memory": 9556, "data_time": 0.07376, "stage0_loss_instance_mil": 0.69341, "stage0_bag_acc": 22.10012, "stage0_mean_ious": 0.38327, "stage0_s": 0.0, "stage0_m": 0.02952, "stage0_l": 0.17418, "stage0_h": 0.39865, "stage1_loss_instance_mil": 0.15948, "stage1_bag_acc": 21.23734, "stage1_neg_loss": 0.00526, "stage1_mean_ious": 0.36426, "stage1_s": 0.0, "stage1_m": 0.02793, "stage1_l": 0.16312, "stage1_h": 0.3812, "loss": 0.85815, "grad_norm": 2.28679, "time": 1.63856}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00795, "memory": 9568, "data_time": 0.02683, "stage0_loss_instance_mil": 0.55122, "stage0_bag_acc": 46.22482, "stage0_mean_ious": 0.43983, "stage0_s": 0.0, "stage0_m": 0.01934, "stage0_l": 0.18002, "stage0_h": 0.46638, "stage1_loss_instance_mil": 0.24852, "stage1_bag_acc": 36.027, "stage1_neg_loss": 0.03549, "stage1_mean_ious": 0.41731, "stage1_s": 0.0, "stage1_m": 0.01958, "stage1_l": 0.18354, "stage1_h": 0.44316, "loss": 0.83523, "grad_norm": 3.85775, "time": 1.60228}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.01195, "memory": 9568, "data_time": 0.02637, "stage0_loss_instance_mil": 0.46704, "stage0_bag_acc": 60.47461, "stage0_mean_ious": 0.33924, "stage0_s": 0.0, "stage0_m": 0.02087, "stage0_l": 0.14718, "stage0_h": 0.34931, "stage1_loss_instance_mil": 0.35374, "stage1_bag_acc": 42.68278, "stage1_neg_loss": 0.02142, "stage1_mean_ious": 0.3434, "stage1_s": 0.0, "stage1_m": 0.01944, "stage1_l": 0.14911, "stage1_h": 0.35352, "loss": 0.8422, "grad_norm": 3.06952, "time": 1.60662}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.01594, "memory": 9568, "data_time": 0.02577, "stage0_loss_instance_mil": 0.38488, "stage0_bag_acc": 69.7769, "stage0_mean_ious": 0.36252, "stage0_s": 0.0, "stage0_m": 0.00975, "stage0_l": 0.12777, "stage0_h": 0.37103, "stage1_loss_instance_mil": 0.3058, "stage1_bag_acc": 63.85116, "stage1_neg_loss": 0.12896, "stage1_mean_ious": 0.34587, "stage1_s": 0.0, "stage1_m": 0.01376, "stage1_l": 0.1221, "stage1_h": 0.35385, "loss": 0.81965, "grad_norm": 6.07892, "time": 1.6027}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.01994, "memory": 9568, "data_time": 0.02815, "stage0_loss_instance_mil": 0.57727, "stage0_bag_acc": 46.62401, "stage0_mean_ious": 0.32891, "stage0_s": 0.0, "stage0_m": 0.01591, "stage0_l": 0.13442, "stage0_h": 0.33053, "stage1_loss_instance_mil": 0.25168, "stage1_bag_acc": 38.60391, "stage1_neg_loss": 0.01405, "stage1_mean_ious": 0.31785, "stage1_s": 0.0, "stage1_m": 0.01255, "stage1_l": 0.13625, "stage1_h": 0.31878, "loss": 0.843, "grad_norm": 1.82916, "time": 1.65807}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.02394, "memory": 9577, "data_time": 0.0301, "stage0_loss_instance_mil": 0.52068, "stage0_bag_acc": 51.16074, "stage0_mean_ious": 0.31131, "stage0_s": 0.0, "stage0_m": 0.02643, "stage0_l": 0.14826, "stage0_h": 0.31997, "stage1_loss_instance_mil": 0.26997, "stage1_bag_acc": 40.59593, "stage1_neg_loss": 0.02446, "stage1_mean_ious": 0.30209, "stage1_s": 0.00073, "stage1_m": 0.02785, "stage1_l": 0.15168, "stage1_h": 0.30794, "loss": 0.81511, "grad_norm": 2.34672, "time": 1.60753}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.02793, "memory": 9577, "data_time": 0.02968, "stage0_loss_instance_mil": 0.47273, "stage0_bag_acc": 57.80274, "stage0_mean_ious": 0.35615, "stage0_s": 0.0, "stage0_m": 0.02317, "stage0_l": 0.13865, "stage0_h": 0.36056, "stage1_loss_instance_mil": 0.31451, "stage1_bag_acc": 43.35488, "stage1_neg_loss": 0.03783, "stage1_mean_ious": 0.34974, "stage1_s": 0.0, "stage1_m": 0.02093, "stage1_l": 0.1527, "stage1_h": 0.35153, "loss": 0.82507, "grad_norm": 1.96415, "time": 1.63305}
{"mode": "val", "epoch": 1, "iter": 360, "lr": 0.02873, "eval_iter_num": 360, "bbox_mAP": 0.073, "bbox_mAP_50": 0.242, "bbox_mAP_75": 0.13, "bbox_mAP_s": 0.057, "bbox_mAP_m": 0.028, "bbox_mAP_l": 0.007, "bbox_mAP_copypaste": "0.073 0.242 0.130 0.057 0.028 0.007"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.03273, "memory": 9577, "data_time": 0.08406, "stage0_loss_instance_mil": 0.48913, "stage0_bag_acc": 58.54659, "stage0_mean_ious": 0.29984, "stage0_s": 0.0, "stage0_m": 0.02352, "stage0_l": 0.19669, "stage0_h": 0.30456, "stage1_loss_instance_mil": 0.24109, "stage1_bag_acc": 39.16384, "stage1_neg_loss": 0.03111, "stage1_mean_ious": 0.28291, "stage1_s": 0.0, "stage1_m": 0.02388, "stage1_l": 0.21107, "stage1_h": 0.27874, "loss": 0.76134, "grad_norm": 1.49327, "time": 1.70981}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.03672, "memory": 9577, "data_time": 0.02814, "stage0_loss_instance_mil": 0.59909, "stage0_bag_acc": 37.82907, "stage0_mean_ious": 0.2786, "stage0_s": 0.0, "stage0_m": 0.01793, "stage0_l": 0.18532, "stage0_h": 0.28203, "stage1_loss_instance_mil": 0.18712, "stage1_bag_acc": 37.57788, "stage1_neg_loss": 0.02004, "stage1_mean_ious": 0.26852, "stage1_s": 0.0, "stage1_m": 0.01893, "stage1_l": 0.2033, "stage1_h": 0.26561, "loss": 0.80625, "grad_norm": 1.69196, "time": 1.6169}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.04, "memory": 9577, "data_time": 0.02772, "stage0_loss_instance_mil": 0.4653, "stage0_bag_acc": 60.39481, "stage0_mean_ious": 0.30656, "stage0_s": 0.0, "stage0_m": 0.01068, "stage0_l": 0.16133, "stage0_h": 0.30898, "stage1_loss_instance_mil": 0.28728, "stage1_bag_acc": 35.80858, "stage1_neg_loss": 0.02671, "stage1_mean_ious": 0.29703, "stage1_s": 0.0, "stage1_m": 0.01249, "stage1_l": 0.17592, "stage1_h": 0.29357, "loss": 0.77929, "grad_norm": 1.20127, "time": 1.62459}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.04, "memory": 9577, "data_time": 0.02799, "stage0_loss_instance_mil": 0.42269, "stage0_bag_acc": 62.45082, "stage0_mean_ious": 0.31675, "stage0_s": 0.0, "stage0_m": 0.02585, "stage0_l": 0.15675, "stage0_h": 0.32149, "stage1_loss_instance_mil": 0.25503, "stage1_bag_acc": 64.70548, "stage1_neg_loss": 0.05269, "stage1_mean_ious": 0.29893, "stage1_s": 0.0, "stage1_m": 0.0242, "stage1_l": 0.15516, "stage1_h": 0.30166, "loss": 0.73041, "grad_norm": 2.23087, "time": 1.63345}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.04, "memory": 9577, "data_time": 0.02756, "stage0_loss_instance_mil": 0.6856, "stage0_bag_acc": 25.48953, "stage0_mean_ious": 0.15898, "stage0_s": 0.0, "stage0_m": 0.03872, "stage0_l": 0.13954, "stage0_h": 0.14406, "stage1_loss_instance_mil": 0.17707, "stage1_bag_acc": 19.37788, "stage1_neg_loss": 0.00365, "stage1_mean_ious": 0.14995, "stage1_s": 0.0, "stage1_m": 0.03372, "stage1_l": 0.14387, "stage1_h": 0.13481, "loss": 0.86632, "grad_norm": 0.75608, "time": 1.61601}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.04, "memory": 9577, "data_time": 0.02921, "stage0_loss_instance_mil": 0.68855, "stage0_bag_acc": 20.95367, "stage0_mean_ious": 0.20593, "stage0_s": 0.0, "stage0_m": 0.00587, "stage0_l": 0.14909, "stage0_h": 0.20017, "stage1_loss_instance_mil": 0.13449, "stage1_bag_acc": 22.90599, "stage1_neg_loss": 0.00948, "stage1_mean_ious": 0.19931, "stage1_s": 0.0, "stage1_m": 0.00585, "stage1_l": 0.14751, "stage1_h": 0.19179, "loss": 0.83252, "grad_norm": 0.55849, "time": 1.63938}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.04, "memory": 9577, "data_time": 0.02823, "stage0_loss_instance_mil": 0.6806, "stage0_bag_acc": 24.06957, "stage0_mean_ious": 0.22854, "stage0_s": 0.0, "stage0_m": 0.0256, "stage0_l": 0.20925, "stage0_h": 0.22373, "stage1_loss_instance_mil": 0.1254, "stage1_bag_acc": 23.73111, "stage1_neg_loss": 0.01441, "stage1_mean_ious": 0.22146, "stage1_s": 0.0, "stage1_m": 0.02559, "stage1_l": 0.20982, "stage1_h": 0.21583, "loss": 0.82042, "grad_norm": 0.42062, "time": 1.63523}
{"mode": "val", "epoch": 2, "iter": 360, "lr": 0.04, "eval_iter_num": 360, "bbox_mAP": 0.002, "bbox_mAP_50": 0.002, "bbox_mAP_75": 0.002, "bbox_mAP_s": 0.002, "bbox_mAP_m": 0.002, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.002 0.002 0.002 0.002 0.002 0.002"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.04, "memory": 9577, "data_time": 0.08019, "stage0_loss_instance_mil": 0.68086, "stage0_bag_acc": 18.76613, "stage0_mean_ious": 0.20398, "stage0_s": 0.0, "stage0_m": 0.01232, "stage0_l": 0.14659, "stage0_h": 0.19472, "stage1_loss_instance_mil": 0.11853, "stage1_bag_acc": 18.46784, "stage1_neg_loss": 0.01658, "stage1_mean_ious": 0.20372, "stage1_s": 0.0, "stage1_m": 0.01255, "stage1_l": 0.1512, "stage1_h": 0.19356, "loss": 0.81598, "grad_norm": 0.38494, "time": 1.65021}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.04, "memory": 9577, "data_time": 0.03007, "stage0_loss_instance_mil": 0.69666, "stage0_bag_acc": 11.3505, "stage0_mean_ious": 0.22452, "stage0_s": 0.0, "stage0_m": 0.00597, "stage0_l": 0.15333, "stage0_h": 0.21773, "stage1_loss_instance_mil": 0.1146, "stage1_bag_acc": 16.31385, "stage1_neg_loss": 0.01289, "stage1_mean_ious": 0.22028, "stage1_s": 0.0, "stage1_m": 0.00564, "stage1_l": 0.15914, "stage1_h": 0.21246, "loss": 0.82415, "grad_norm": 0.3753, "time": 1.65095}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.04, "memory": 9577, "data_time": 0.02649, "stage0_loss_instance_mil": 0.68284, "stage0_bag_acc": 16.96697, "stage0_mean_ious": 0.22559, "stage0_s": 0.0, "stage0_m": 0.01357, "stage0_l": 0.17783, "stage0_h": 0.21382, "stage1_loss_instance_mil": 0.11854, "stage1_bag_acc": 16.93484, "stage1_neg_loss": 0.01541, "stage1_mean_ious": 0.22271, "stage1_s": 0.0, "stage1_m": 0.01434, "stage1_l": 0.17755, "stage1_h": 0.21105, "loss": 0.81679, "grad_norm": 0.32073, "time": 1.61976}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.04, "memory": 9577, "data_time": 0.02747, "stage0_loss_instance_mil": 0.68473, "stage0_bag_acc": 18.11412, "stage0_mean_ious": 0.24232, "stage0_s": 0.0, "stage0_m": 0.01296, "stage0_l": 0.19264, "stage0_h": 0.23939, "stage1_loss_instance_mil": 0.11839, "stage1_bag_acc": 13.79291, "stage1_neg_loss": 0.01518, "stage1_mean_ious": 0.23885, "stage1_s": 0.0, "stage1_m": 0.0139, "stage1_l": 0.20224, "stage1_h": 0.23625, "loss": 0.81829, "grad_norm": 0.31387, "time": 1.57612}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.04, "memory": 9577, "data_time": 0.02834, "stage0_loss_instance_mil": 0.67464, "stage0_bag_acc": 20.73919, "stage0_mean_ious": 0.24812, "stage0_s": 0.0, "stage0_m": 0.01335, "stage0_l": 0.17486, "stage0_h": 0.24618, "stage1_loss_instance_mil": 0.11922, "stage1_bag_acc": 19.37393, "stage1_neg_loss": 0.01604, "stage1_mean_ious": 0.23801, "stage1_s": 0.0, "stage1_m": 0.01464, "stage1_l": 0.17935, "stage1_h": 0.23304, "loss": 0.80991, "grad_norm": 0.30189, "time": 1.60416}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.04, "memory": 9577, "data_time": 0.02739, "stage0_loss_instance_mil": 0.67892, "stage0_bag_acc": 21.0981, "stage0_mean_ious": 0.27413, "stage0_s": 0.0, "stage0_m": 0.01428, "stage0_l": 0.14353, "stage0_h": 0.2804, "stage1_loss_instance_mil": 0.12044, "stage1_bag_acc": 19.61079, "stage1_neg_loss": 0.01622, "stage1_mean_ious": 0.26669, "stage1_s": 0.0, "stage1_m": 0.01489, "stage1_l": 0.14706, "stage1_h": 0.27009, "loss": 0.81558, "grad_norm": 0.30076, "time": 1.56379}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.04, "memory": 9577, "data_time": 0.02726, "stage0_loss_instance_mil": 0.66946, "stage0_bag_acc": 23.00145, "stage0_mean_ious": 0.35061, "stage0_s": 0.0, "stage0_m": 0.01105, "stage0_l": 0.16104, "stage0_h": 0.36728, "stage1_loss_instance_mil": 0.12132, "stage1_bag_acc": 23.72642, "stage1_neg_loss": 0.01585, "stage1_mean_ious": 0.34972, "stage1_s": 0.0, "stage1_m": 0.01267, "stage1_l": 0.17376, "stage1_h": 0.3633, "loss": 0.80663, "grad_norm": 0.56344, "time": 1.60738}
{"mode": "val", "epoch": 3, "iter": 360, "lr": 0.04, "eval_iter_num": 360, "bbox_mAP": 0.14, "bbox_mAP_50": 0.472, "bbox_mAP_75": 0.255, "bbox_mAP_s": 0.079, "bbox_mAP_m": 0.046, "bbox_mAP_l": 0.021, "bbox_mAP_copypaste": "0.140 0.472 0.255 0.079 0.046 0.021"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.04, "memory": 9577, "data_time": 0.07941, "stage0_loss_instance_mil": 0.67684, "stage0_bag_acc": 25.03964, "stage0_mean_ious": 0.39148, "stage0_s": 0.0, "stage0_m": 0.00366, "stage0_l": 0.11776, "stage0_h": 0.42135, "stage1_loss_instance_mil": 0.11644, "stage1_bag_acc": 25.03964, "stage1_neg_loss": 0.01535, "stage1_mean_ious": 0.38368, "stage1_s": 0.0, "stage1_m": 0.0044, "stage1_l": 0.11816, "stage1_h": 0.41312, "loss": 0.80863, "grad_norm": 0.27179, "time": 1.64617}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.04, "memory": 9577, "data_time": 0.02619, "stage0_loss_instance_mil": 0.67957, "stage0_bag_acc": 19.66779, "stage0_mean_ious": 0.39653, "stage0_s": 0.0, "stage0_m": 0.00569, "stage0_l": 0.16653, "stage0_h": 0.42152, "stage1_loss_instance_mil": 0.11628, "stage1_bag_acc": 20.64268, "stage1_neg_loss": 0.01664, "stage1_mean_ious": 0.38672, "stage1_s": 0.0, "stage1_m": 0.00607, "stage1_l": 0.16877, "stage1_h": 0.40921, "loss": 0.81249, "grad_norm": 0.26759, "time": 1.5168}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.04, "memory": 9577, "data_time": 0.02722, "stage0_loss_instance_mil": 0.68325, "stage0_bag_acc": 15.65374, "stage0_mean_ious": 0.38232, "stage0_s": 0.00116, "stage0_m": 0.02194, "stage0_l": 0.13806, "stage0_h": 0.41144, "stage1_loss_instance_mil": 0.11513, "stage1_bag_acc": 12.8732, "stage1_neg_loss": 0.01455, "stage1_mean_ious": 0.3716, "stage1_s": 0.00099, "stage1_m": 0.02326, "stage1_l": 0.14578, "stage1_h": 0.39869, "loss": 0.81292, "grad_norm": 0.24745, "time": 1.60648}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.04, "memory": 9577, "data_time": 0.02655, "stage0_loss_instance_mil": 0.68244, "stage0_bag_acc": 17.68836, "stage0_mean_ious": 0.40183, "stage0_s": 0.0, "stage0_m": 0.0073, "stage0_l": 0.10008, "stage0_h": 0.42785, "stage1_loss_instance_mil": 0.11398, "stage1_bag_acc": 15.9569, "stage1_neg_loss": 0.01501, "stage1_mean_ious": 0.3863, "stage1_s": 0.0, "stage1_m": 0.00705, "stage1_l": 0.10606, "stage1_h": 0.40957, "loss": 0.81143, "grad_norm": 0.24323, "time": 1.60909}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.04, "memory": 9577, "data_time": 0.0263, "stage0_loss_instance_mil": 0.67281, "stage0_bag_acc": 22.39705, "stage0_mean_ious": 0.39444, "stage0_s": 0.0, "stage0_m": 0.01063, "stage0_l": 0.12515, "stage0_h": 0.43319, "stage1_loss_instance_mil": 0.11746, "stage1_bag_acc": 26.16444, "stage1_neg_loss": 0.01543, "stage1_mean_ious": 0.37988, "stage1_s": 0.0, "stage1_m": 0.01018, "stage1_l": 0.13092, "stage1_h": 0.41583, "loss": 0.80571, "grad_norm": 0.25941, "time": 1.58924}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.04, "memory": 9577, "data_time": 0.0262, "stage0_loss_instance_mil": 0.67912, "stage0_bag_acc": 19.76074, "stage0_mean_ious": 0.42594, "stage0_s": 0.0, "stage0_m": 0.01248, "stage0_l": 0.12486, "stage0_h": 0.4636, "stage1_loss_instance_mil": 0.11414, "stage1_bag_acc": 21.94256, "stage1_neg_loss": 0.01766, "stage1_mean_ious": 0.41131, "stage1_s": 0.0, "stage1_m": 0.01235, "stage1_l": 0.12642, "stage1_h": 0.44651, "loss": 0.81092, "grad_norm": 0.2587, "time": 1.55237}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.04, "memory": 9577, "data_time": 0.02713, "stage0_loss_instance_mil": 0.67871, "stage0_bag_acc": 22.93731, "stage0_mean_ious": 0.40093, "stage0_s": 0.0, "stage0_m": 0.00866, "stage0_l": 0.11383, "stage0_h": 0.4298, "stage1_loss_instance_mil": 0.11576, "stage1_bag_acc": 20.6516, "stage1_neg_loss": 0.0152, "stage1_mean_ious": 0.3918, "stage1_s": 0.0, "stage1_m": 0.00891, "stage1_l": 0.11303, "stage1_h": 0.41972, "loss": 0.80967, "grad_norm": 0.23057, "time": 1.64073}
{"mode": "val", "epoch": 4, "iter": 360, "lr": 0.04, "eval_iter_num": 360, "bbox_mAP": 0.14, "bbox_mAP_50": 0.49, "bbox_mAP_75": 0.241, "bbox_mAP_s": 0.087, "bbox_mAP_m": 0.046, "bbox_mAP_l": 0.019, "bbox_mAP_copypaste": "0.140 0.490 0.241 0.087 0.046 0.019"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.04, "memory": 9577, "data_time": 0.08109, "stage0_loss_instance_mil": 0.67645, "stage0_bag_acc": 17.87825, "stage0_mean_ious": 0.40478, "stage0_s": 0.0, "stage0_m": 0.00156, "stage0_l": 0.12153, "stage0_h": 0.43899, "stage1_loss_instance_mil": 0.11568, "stage1_bag_acc": 21.87581, "stage1_neg_loss": 0.01593, "stage1_mean_ious": 0.39704, "stage1_s": 0.0, "stage1_m": 0.00168, "stage1_l": 0.12848, "stage1_h": 0.42868, "loss": 0.80806, "grad_norm": 0.2376, "time": 1.64331}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.04, "memory": 9577, "data_time": 0.02755, "stage0_loss_instance_mil": 0.67485, "stage0_bag_acc": 19.30353, "stage0_mean_ious": 0.36619, "stage0_s": 0.0, "stage0_m": 0.00714, "stage0_l": 0.13471, "stage0_h": 0.39925, "stage1_loss_instance_mil": 0.11492, "stage1_bag_acc": 24.29236, "stage1_neg_loss": 0.01711, "stage1_mean_ious": 0.35959, "stage1_s": 0.0, "stage1_m": 0.00724, "stage1_l": 0.13491, "stage1_h": 0.39073, "loss": 0.80688, "grad_norm": 0.21887, "time": 1.59443}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.04, "memory": 9577, "data_time": 0.02797, "stage0_loss_instance_mil": 0.67582, "stage0_bag_acc": 18.57882, "stage0_mean_ious": 0.38943, "stage0_s": 0.0, "stage0_m": 0.0056, "stage0_l": 0.11151, "stage0_h": 0.42885, "stage1_loss_instance_mil": 0.11634, "stage1_bag_acc": 23.56792, "stage1_neg_loss": 0.01512, "stage1_mean_ious": 0.39032, "stage1_s": 0.0, "stage1_m": 0.00494, "stage1_l": 0.10988, "stage1_h": 0.42867, "loss": 0.80727, "grad_norm": 0.21266, "time": 1.64268}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.04, "memory": 9577, "data_time": 0.0276, "stage0_loss_instance_mil": 0.67218, "stage0_bag_acc": 20.35548, "stage0_mean_ious": 0.43514, "stage0_s": 0.0, "stage0_m": 0.02188, "stage0_l": 0.08458, "stage0_h": 0.46098, "stage1_loss_instance_mil": 0.118, "stage1_bag_acc": 18.33326, "stage1_neg_loss": 0.01761, "stage1_mean_ious": 0.42868, "stage1_s": 0.0, "stage1_m": 0.02228, "stage1_l": 0.09098, "stage1_h": 0.45237, "loss": 0.80779, "grad_norm": 0.23311, "time": 1.58601}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.04, "memory": 9577, "data_time": 0.02927, "stage0_loss_instance_mil": 0.67995, "stage0_bag_acc": 19.17784, "stage0_mean_ious": 0.40729, "stage0_s": 0.0, "stage0_m": 0.00399, "stage0_l": 0.10727, "stage0_h": 0.43832, "stage1_loss_instance_mil": 0.11511, "stage1_bag_acc": 19.29202, "stage1_neg_loss": 0.01617, "stage1_mean_ious": 0.39914, "stage1_s": 0.0, "stage1_m": 0.00346, "stage1_l": 0.10835, "stage1_h": 0.42771, "loss": 0.81123, "grad_norm": 0.21093, "time": 1.63842}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.04, "memory": 9577, "data_time": 0.02914, "stage0_loss_instance_mil": 0.66293, "stage0_bag_acc": 30.24462, "stage0_mean_ious": 0.41236, "stage0_s": 0.0, "stage0_m": 0.0042, "stage0_l": 0.12407, "stage0_h": 0.44097, "stage1_loss_instance_mil": 0.11979, "stage1_bag_acc": 29.04444, "stage1_neg_loss": 0.01919, "stage1_mean_ious": 0.39792, "stage1_s": 0.0, "stage1_m": 0.00459, "stage1_l": 0.12765, "stage1_h": 0.42268, "loss": 0.80191, "grad_norm": 0.20287, "time": 1.61452}
