{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+e282583", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [2]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07518, "stage0_loss_instance_mil": 0.69756, "stage0_bag_acc": 25.07338, "stage0_mean_ious": 0.23345, "stage0_s": 0.0, "stage0_m": 0.05056, "stage0_l": 0.17862, "stage0_h": 0.23552, "stage1_loss_instance_mil": 0.17587, "stage1_bag_acc": 11.43489, "stage1_neg_loss": 0.00269, "stage1_mean_ious": 0.22092, "stage1_s": 0.0, "stage1_m": 0.04456, "stage1_l": 0.16534, "stage1_h": 0.22407, "loss": 0.87612, "grad_norm": 3.48381, "time": 1.81359}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02599, "stage0_loss_instance_mil": 0.5704, "stage0_bag_acc": 57.09124, "stage0_mean_ious": 0.29179, "stage0_s": 0.0, "stage0_m": 0.06135, "stage0_l": 0.23756, "stage0_h": 0.30109, "stage1_loss_instance_mil": 0.24148, "stage1_bag_acc": 25.25913, "stage1_neg_loss": 0.01231, "stage1_mean_ious": 0.27421, "stage1_s": 0.0, "stage1_m": 0.05076, "stage1_l": 0.22257, "stage1_h": 0.28409, "loss": 0.82419, "grad_norm": 5.6993, "time": 1.75456}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02693, "stage0_loss_instance_mil": 0.26943, "stage0_bag_acc": 86.50874, "stage0_mean_ious": 0.41426, "stage0_s": 0.0, "stage0_m": 0.05352, "stage0_l": 0.19115, "stage0_h": 0.43617, "stage1_loss_instance_mil": 0.3157, "stage1_bag_acc": 81.12695, "stage1_neg_loss": 0.0681, "stage1_mean_ious": 0.38275, "stage1_s": 0.0, "stage1_m": 0.04705, "stage1_l": 0.17539, "stage1_h": 0.4024, "loss": 0.65323, "grad_norm": 13.40475, "time": 1.76914}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18840, "data_time": 0.07336, "stage0_loss_instance_mil": 0.07035, "stage0_bag_acc": 96.43003, "stage0_mean_ious": 0.35012, "stage0_s": 0.0, "stage0_m": 0.04203, "stage0_l": 0.14847, "stage0_h": 0.37117, "stage1_loss_instance_mil": 0.33158, "stage1_bag_acc": 97.93836, "stage1_neg_loss": 0.08514, "stage1_mean_ious": 0.31562, "stage1_s": 0.0, "stage1_m": 0.0258, "stage1_l": 0.12165, "stage1_h": 0.33835, "loss": 0.48706, "grad_norm": 15.8604, "time": 1.79044}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18840, "data_time": 0.02565, "stage0_loss_instance_mil": 0.06636, "stage0_bag_acc": 96.69797, "stage0_mean_ious": 0.33967, "stage0_s": 0.0, "stage0_m": 0.03933, "stage0_l": 0.15734, "stage0_h": 0.3647, "stage1_loss_instance_mil": 0.281, "stage1_bag_acc": 97.21453, "stage1_neg_loss": 0.09117, "stage1_mean_ious": 0.30806, "stage1_s": 0.0, "stage1_m": 0.02716, "stage1_l": 0.13197, "stage1_h": 0.33404, "loss": 0.43853, "grad_norm": 17.78699, "time": 1.76302}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18840, "data_time": 0.02596, "stage0_loss_instance_mil": 0.04607, "stage0_bag_acc": 97.8124, "stage0_mean_ious": 0.34688, "stage0_s": 0.0, "stage0_m": 0.05951, "stage0_l": 0.13631, "stage0_h": 0.37375, "stage1_loss_instance_mil": 0.27366, "stage1_bag_acc": 98.31861, "stage1_neg_loss": 0.09518, "stage1_mean_ious": 0.30539, "stage1_s": 0.0, "stage1_m": 0.04092, "stage1_l": 0.10224, "stage1_h": 0.33262, "loss": 0.41491, "grad_norm": 20.04298, "time": 1.7122}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18840, "data_time": 0.07454, "stage0_loss_instance_mil": 0.02287, "stage0_bag_acc": 99.14258, "stage0_mean_ious": 0.35644, "stage0_s": 0.0, "stage0_m": 0.05502, "stage0_l": 0.09551, "stage0_h": 0.38785, "stage1_loss_instance_mil": 0.23663, "stage1_bag_acc": 99.54971, "stage1_neg_loss": 0.09135, "stage1_mean_ious": 0.31437, "stage1_s": 0.0, "stage1_m": 0.03484, "stage1_l": 0.07891, "stage1_h": 0.34682, "loss": 0.35085, "grad_norm": 18.03538, "time": 1.78047}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02907, "stage0_loss_instance_mil": 0.04233, "stage0_bag_acc": 97.2575, "stage0_mean_ious": 0.31775, "stage0_s": 0.0, "stage0_m": 0.0394, "stage0_l": 0.12033, "stage0_h": 0.34074, "stage1_loss_instance_mil": 0.27022, "stage1_bag_acc": 98.11123, "stage1_neg_loss": 0.10293, "stage1_mean_ious": 0.28712, "stage1_s": 0.0, "stage1_m": 0.02276, "stage1_l": 0.08698, "stage1_h": 0.31237, "loss": 0.41548, "grad_norm": 25.09086, "time": 1.74885}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02879, "stage0_loss_instance_mil": 0.03596, "stage0_bag_acc": 98.69126, "stage0_mean_ious": 0.3224, "stage0_s": 0.00836, "stage0_m": 0.04296, "stage0_l": 0.13306, "stage0_h": 0.35206, "stage1_loss_instance_mil": 0.22404, "stage1_bag_acc": 98.57008, "stage1_neg_loss": 0.08098, "stage1_mean_ious": 0.28069, "stage1_s": 0.00728, "stage1_m": 0.02339, "stage1_l": 0.09671, "stage1_h": 0.31064, "loss": 0.34098, "grad_norm": 18.1861, "time": 1.7394}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.046, "bbox_mAP_50": 0.162, "bbox_mAP_75": 0.081, "bbox_mAP_s": 0.03, "bbox_mAP_m": 0.014, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.046 0.162 0.081 0.030 0.014 0.005"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07636, "stage0_loss_instance_mil": 0.01925, "stage0_bag_acc": 99.34255, "stage0_mean_ious": 0.3316, "stage0_s": 0.00818, "stage0_m": 0.03506, "stage0_l": 0.12738, "stage0_h": 0.36231, "stage1_loss_instance_mil": 0.19262, "stage1_bag_acc": 99.0981, "stage1_neg_loss": 0.07181, "stage1_mean_ious": 0.28537, "stage1_s": 0.00703, "stage1_m": 0.01924, "stage1_l": 0.09783, "stage1_h": 0.31536, "loss": 0.28367, "grad_norm": 13.66775, "time": 1.76414}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02403, "stage0_loss_instance_mil": 0.0315, "stage0_bag_acc": 97.68804, "stage0_mean_ious": 0.32295, "stage0_s": 0.0, "stage0_m": 0.00994, "stage0_l": 0.1126, "stage0_h": 0.34402, "stage1_loss_instance_mil": 0.1722, "stage1_bag_acc": 98.25901, "stage1_neg_loss": 0.06796, "stage1_mean_ious": 0.28197, "stage1_s": 0.0, "stage1_m": 0.006, "stage1_l": 0.08252, "stage1_h": 0.30274, "loss": 0.27166, "grad_norm": 13.31817, "time": 1.67017}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02552, "stage0_loss_instance_mil": 0.03351, "stage0_bag_acc": 97.75063, "stage0_mean_ious": 0.3275, "stage0_s": 0.0, "stage0_m": 0.03845, "stage0_l": 0.11145, "stage0_h": 0.35442, "stage1_loss_instance_mil": 0.1953, "stage1_bag_acc": 98.55241, "stage1_neg_loss": 0.08232, "stage1_mean_ious": 0.28481, "stage1_s": 0.0, "stage1_m": 0.02383, "stage1_l": 0.08179, "stage1_h": 0.31125, "loss": 0.31114, "grad_norm": 18.81673, "time": 1.72445}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07887, "stage0_loss_instance_mil": 0.01823, "stage0_bag_acc": 98.86251, "stage0_mean_ious": 0.33959, "stage0_s": 0.0, "stage0_m": 0.0256, "stage0_l": 0.11118, "stage0_h": 0.37449, "stage1_loss_instance_mil": 0.16975, "stage1_bag_acc": 99.23196, "stage1_neg_loss": 0.0686, "stage1_mean_ious": 0.29425, "stage1_s": 0.0, "stage1_m": 0.01411, "stage1_l": 0.08011, "stage1_h": 0.32743, "loss": 0.25658, "grad_norm": 13.29152, "time": 1.79587}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.03137, "stage0_loss_instance_mil": 0.02571, "stage0_bag_acc": 98.35963, "stage0_mean_ious": 0.31142, "stage0_s": 0.0, "stage0_m": 0.04692, "stage0_l": 0.10959, "stage0_h": 0.3458, "stage1_loss_instance_mil": 0.15551, "stage1_bag_acc": 99.00249, "stage1_neg_loss": 0.06031, "stage1_mean_ious": 0.26807, "stage1_s": 0.0, "stage1_m": 0.02697, "stage1_l": 0.08057, "stage1_h": 0.30138, "loss": 0.24153, "grad_norm": 10.75343, "time": 1.75258}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.03026, "stage0_loss_instance_mil": 0.01491, "stage0_bag_acc": 99.11584, "stage0_mean_ious": 0.33575, "stage0_s": 0.0, "stage0_m": 0.03249, "stage0_l": 0.13091, "stage0_h": 0.36254, "stage1_loss_instance_mil": 0.1777, "stage1_bag_acc": 99.08042, "stage1_neg_loss": 0.07082, "stage1_mean_ious": 0.29598, "stage1_s": 0.0, "stage1_m": 0.02257, "stage1_l": 0.10912, "stage1_h": 0.32184, "loss": 0.26343, "grad_norm": 16.15422, "time": 1.75586}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07655, "stage0_loss_instance_mil": 0.00882, "stage0_bag_acc": 99.58905, "stage0_mean_ious": 0.33777, "stage0_s": 0.00787, "stage0_m": 0.03102, "stage0_l": 0.11478, "stage0_h": 0.36563, "stage1_loss_instance_mil": 0.16087, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.06443, "stage1_mean_ious": 0.29687, "stage1_s": 0.00522, "stage1_m": 0.01722, "stage1_l": 0.0933, "stage1_h": 0.32397, "loss": 0.23413, "grad_norm": 13.23437, "time": 1.76768}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02881, "stage0_loss_instance_mil": 0.01159, "stage0_bag_acc": 99.27399, "stage0_mean_ious": 0.33855, "stage0_s": 0.0, "stage0_m": 0.04171, "stage0_l": 0.07805, "stage0_h": 0.36376, "stage1_loss_instance_mil": 0.16725, "stage1_bag_acc": 99.24859, "stage1_neg_loss": 0.07333, "stage1_mean_ious": 0.29685, "stage1_s": 0.0, "stage1_m": 0.02558, "stage1_l": 0.05908, "stage1_h": 0.32098, "loss": 0.25217, "grad_norm": 14.824, "time": 1.72278}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.03077, "stage0_loss_instance_mil": 0.01269, "stage0_bag_acc": 99.50363, "stage0_mean_ious": 0.30035, "stage0_s": 0.0, "stage0_m": 0.04423, "stage0_l": 0.09271, "stage0_h": 0.32851, "stage1_loss_instance_mil": 0.13545, "stage1_bag_acc": 99.81474, "stage1_neg_loss": 0.06591, "stage1_mean_ious": 0.26403, "stage1_s": 0.0, "stage1_m": 0.02633, "stage1_l": 0.06822, "stage1_h": 0.29245, "loss": 0.21406, "grad_norm": 11.34754, "time": 1.74236}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.041, "bbox_mAP_50": 0.148, "bbox_mAP_75": 0.072, "bbox_mAP_s": 0.021, "bbox_mAP_m": 0.009, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.041 0.148 0.072 0.021 0.009 0.003"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07609, "stage0_loss_instance_mil": 0.0105, "stage0_bag_acc": 99.34394, "stage0_mean_ious": 0.32634, "stage0_s": 0.0, "stage0_m": 0.02338, "stage0_l": 0.11658, "stage0_h": 0.35228, "stage1_loss_instance_mil": 0.1148, "stage1_bag_acc": 99.42331, "stage1_neg_loss": 0.04956, "stage1_mean_ious": 0.28966, "stage1_s": 0.0, "stage1_m": 0.0141, "stage1_l": 0.09328, "stage1_h": 0.3156, "loss": 0.17487, "grad_norm": 7.93132, "time": 1.77468}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02766, "stage0_loss_instance_mil": 0.00897, "stage0_bag_acc": 99.44447, "stage0_mean_ious": 0.31343, "stage0_s": 0.0, "stage0_m": 0.03502, "stage0_l": 0.10496, "stage0_h": 0.35036, "stage1_loss_instance_mil": 0.12017, "stage1_bag_acc": 99.69144, "stage1_neg_loss": 0.0568, "stage1_mean_ious": 0.2811, "stage1_s": 0.0, "stage1_m": 0.0253, "stage1_l": 0.08247, "stage1_h": 0.31701, "loss": 0.18594, "grad_norm": 10.98811, "time": 1.75344}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02714, "stage0_loss_instance_mil": 0.00642, "stage0_bag_acc": 99.65908, "stage0_mean_ious": 0.35514, "stage0_s": 0.0, "stage0_m": 0.03937, "stage0_l": 0.07952, "stage0_h": 0.387, "stage1_loss_instance_mil": 0.11667, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.05091, "stage1_mean_ious": 0.31689, "stage1_s": 0.0, "stage1_m": 0.025, "stage1_l": 0.06441, "stage1_h": 0.34751, "loss": 0.174, "grad_norm": 9.74457, "time": 1.76688}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07473, "stage0_loss_instance_mil": 0.01329, "stage0_bag_acc": 99.26483, "stage0_mean_ious": 0.29912, "stage0_s": 0.0, "stage0_m": 0.03521, "stage0_l": 0.11514, "stage0_h": 0.32284, "stage1_loss_instance_mil": 0.12207, "stage1_bag_acc": 99.61105, "stage1_neg_loss": 0.05209, "stage1_mean_ious": 0.26613, "stage1_s": 0.0, "stage1_m": 0.02347, "stage1_l": 0.09239, "stage1_h": 0.29005, "loss": 0.18746, "grad_norm": 9.37074, "time": 1.81295}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02579, "stage0_loss_instance_mil": 0.01265, "stage0_bag_acc": 99.25376, "stage0_mean_ious": 0.33951, "stage0_s": 0.00786, "stage0_m": 0.0386, "stage0_l": 0.09883, "stage0_h": 0.37254, "stage1_loss_instance_mil": 0.11845, "stage1_bag_acc": 99.54413, "stage1_neg_loss": 0.05344, "stage1_mean_ious": 0.30436, "stage1_s": 0.00535, "stage1_m": 0.02371, "stage1_l": 0.08305, "stage1_h": 0.33633, "loss": 0.18454, "grad_norm": 9.12946, "time": 1.73666}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02796, "stage0_loss_instance_mil": 0.00823, "stage0_bag_acc": 99.57143, "stage0_mean_ious": 0.34184, "stage0_s": 0.0, "stage0_m": 0.03285, "stage0_l": 0.08942, "stage0_h": 0.37552, "stage1_loss_instance_mil": 0.10937, "stage1_bag_acc": 99.65359, "stage1_neg_loss": 0.05068, "stage1_mean_ious": 0.30635, "stage1_s": 0.0, "stage1_m": 0.0216, "stage1_l": 0.06698, "stage1_h": 0.33985, "loss": 0.16828, "grad_norm": 10.44935, "time": 1.76006}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07729, "stage0_loss_instance_mil": 0.00431, "stage0_bag_acc": 99.6995, "stage0_mean_ious": 0.33813, "stage0_s": 0.0079, "stage0_m": 0.03525, "stage0_l": 0.10725, "stage0_h": 0.37259, "stage1_loss_instance_mil": 0.09648, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.05223, "stage1_mean_ious": 0.30234, "stage1_s": 0.00563, "stage1_m": 0.02223, "stage1_l": 0.08, "stage1_h": 0.33745, "loss": 0.15302, "grad_norm": 7.45161, "time": 1.82526}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02661, "stage0_loss_instance_mil": 0.01009, "stage0_bag_acc": 99.65863, "stage0_mean_ious": 0.32683, "stage0_s": 0.0, "stage0_m": 0.05136, "stage0_l": 0.11546, "stage0_h": 0.354, "stage1_loss_instance_mil": 0.0831, "stage1_bag_acc": 99.47681, "stage1_neg_loss": 0.04247, "stage1_mean_ious": 0.30186, "stage1_s": 0.0, "stage1_m": 0.03424, "stage1_l": 0.09817, "stage1_h": 0.33079, "loss": 0.13567, "grad_norm": 6.34087, "time": 1.7788}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02459, "stage0_loss_instance_mil": 0.00279, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.30679, "stage0_s": 0.0, "stage0_m": 0.01761, "stage0_l": 0.11205, "stage0_h": 0.32601, "stage1_loss_instance_mil": 0.08516, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03788, "stage1_mean_ious": 0.28664, "stage1_s": 0.0, "stage1_m": 0.01037, "stage1_l": 0.09019, "stage1_h": 0.30705, "loss": 0.12583, "grad_norm": 4.96158, "time": 1.7613}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 180, "bbox_mAP": 0.057, "bbox_mAP_50": 0.224, "bbox_mAP_75": 0.095, "bbox_mAP_s": 0.03, "bbox_mAP_m": 0.012, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.057 0.224 0.095 0.030 0.012 0.003"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07551, "stage0_loss_instance_mil": 0.0034, "stage0_bag_acc": 99.849, "stage0_mean_ious": 0.3203, "stage0_s": 0.0, "stage0_m": 0.02961, "stage0_l": 0.08958, "stage0_h": 0.3435, "stage1_loss_instance_mil": 0.08, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.04137, "stage1_mean_ious": 0.2904, "stage1_s": 0.0, "stage1_m": 0.01762, "stage1_l": 0.07051, "stage1_h": 0.31386, "loss": 0.12477, "grad_norm": 5.45499, "time": 1.80189}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02467, "stage0_loss_instance_mil": 0.00445, "stage0_bag_acc": 99.92857, "stage0_mean_ious": 0.32649, "stage0_s": 0.0, "stage0_m": 0.04589, "stage0_l": 0.11863, "stage0_h": 0.35545, "stage1_loss_instance_mil": 0.08506, "stage1_bag_acc": 99.92857, "stage1_neg_loss": 0.04176, "stage1_mean_ious": 0.29556, "stage1_s": 0.0, "stage1_m": 0.02831, "stage1_l": 0.09255, "stage1_h": 0.32619, "loss": 0.13127, "grad_norm": 5.71311, "time": 1.76591}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02575, "stage0_loss_instance_mil": 0.00496, "stage0_bag_acc": 99.73214, "stage0_mean_ious": 0.32816, "stage0_s": 0.0, "stage0_m": 0.03131, "stage0_l": 0.09527, "stage0_h": 0.36863, "stage1_loss_instance_mil": 0.07362, "stage1_bag_acc": 99.85714, "stage1_neg_loss": 0.0365, "stage1_mean_ious": 0.29978, "stage1_s": 0.0, "stage1_m": 0.02189, "stage1_l": 0.07147, "stage1_h": 0.3396, "loss": 0.11509, "grad_norm": 5.71827, "time": 1.75722}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07638, "stage0_loss_instance_mil": 0.00717, "stage0_bag_acc": 99.68045, "stage0_mean_ious": 0.32832, "stage0_s": 0.0, "stage0_m": 0.04923, "stage0_l": 0.11471, "stage0_h": 0.3551, "stage1_loss_instance_mil": 0.07016, "stage1_bag_acc": 99.75188, "stage1_neg_loss": 0.03911, "stage1_mean_ious": 0.29726, "stage1_s": 0.0, "stage1_m": 0.02879, "stage1_l": 0.09371, "stage1_h": 0.32367, "loss": 0.11645, "grad_norm": 5.61841, "time": 1.79614}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02445, "stage0_loss_instance_mil": 0.00308, "stage0_bag_acc": 99.82476, "stage0_mean_ious": 0.32974, "stage0_s": 0.0, "stage0_m": 0.03705, "stage0_l": 0.13291, "stage0_h": 0.35352, "stage1_loss_instance_mil": 0.07376, "stage1_bag_acc": 99.84, "stage1_neg_loss": 0.03808, "stage1_mean_ious": 0.29945, "stage1_s": 0.0, "stage1_m": 0.02852, "stage1_l": 0.10543, "stage1_h": 0.32378, "loss": 0.11492, "grad_norm": 5.33232, "time": 1.74951}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02556, "stage0_loss_instance_mil": 0.00297, "stage0_bag_acc": 99.86667, "stage0_mean_ious": 0.32638, "stage0_s": 0.0, "stage0_m": 0.02108, "stage0_l": 0.10578, "stage0_h": 0.34727, "stage1_loss_instance_mil": 0.07426, "stage1_bag_acc": 99.86667, "stage1_neg_loss": 0.04179, "stage1_mean_ious": 0.29753, "stage1_s": 0.0, "stage1_m": 0.01356, "stage1_l": 0.09185, "stage1_h": 0.31826, "loss": 0.11903, "grad_norm": 6.53615, "time": 1.77752}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07508, "stage0_loss_instance_mil": 0.00451, "stage0_bag_acc": 99.92, "stage0_mean_ious": 0.33206, "stage0_s": 0.0, "stage0_m": 0.03664, "stage0_l": 0.10788, "stage0_h": 0.3613, "stage1_loss_instance_mil": 0.0753, "stage1_bag_acc": 99.92, "stage1_neg_loss": 0.03984, "stage1_mean_ious": 0.29961, "stage1_s": 0.0, "stage1_m": 0.02253, "stage1_l": 0.0906, "stage1_h": 0.32855, "loss": 0.11965, "grad_norm": 5.47102, "time": 1.8191}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18840, "data_time": 0.02513, "stage0_loss_instance_mil": 0.00285, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.33321, "stage0_s": 0.0, "stage0_m": 0.0339, "stage0_l": 0.11676, "stage0_h": 0.37233, "stage1_loss_instance_mil": 0.06866, "stage1_bag_acc": 99.92, "stage1_neg_loss": 0.03669, "stage1_mean_ious": 0.30604, "stage1_s": 0.0, "stage1_m": 0.02244, "stage1_l": 0.09744, "stage1_h": 0.34503, "loss": 0.1082, "grad_norm": 5.16659, "time": 1.7427}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18840, "data_time": 0.02417, "stage0_loss_instance_mil": 0.00217, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.30718, "stage0_s": 0.0, "stage0_m": 0.02789, "stage0_l": 0.1308, "stage0_h": 0.32797, "stage1_loss_instance_mil": 0.06921, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03517, "stage1_mean_ious": 0.27574, "stage1_s": 0.0, "stage1_m": 0.01869, "stage1_l": 0.1142, "stage1_h": 0.29613, "loss": 0.10656, "grad_norm": 4.77328, "time": 1.73711}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 180, "bbox_mAP": 0.055, "bbox_mAP_50": 0.208, "bbox_mAP_75": 0.096, "bbox_mAP_s": 0.029, "bbox_mAP_m": 0.011, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.055 0.208 0.096 0.029 0.011 0.002"}
