{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18742, "data_time": 0.077, "stage0_loss_instance_mil": 0.70686, "stage0_bag_acc": 22.71914, "stage0_mean_ious": 0.27996, "stage0_s": 0.0, "stage0_m": 0.07867, "stage0_l": 0.20389, "stage0_h": 0.2804, "stage1_loss_instance_mil": 0.17724, "stage1_bag_acc": 13.72575, "stage1_neg_loss": 0.00081, "stage1_mean_ious": 0.28549, "stage1_s": 0.0, "stage1_m": 0.08349, "stage1_l": 0.21174, "stage1_h": 0.28555, "loss": 0.88491, "grad_norm": 3.13555, "time": 1.77676}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.02779, "stage0_loss_instance_mil": 0.60215, "stage0_bag_acc": 42.3686, "stage0_mean_ious": 0.35041, "stage0_s": 0.0, "stage0_m": 0.1287, "stage0_l": 0.36896, "stage0_h": 0.33646, "stage1_loss_instance_mil": 0.24177, "stage1_bag_acc": 14.72648, "stage1_neg_loss": 0.00255, "stage1_mean_ious": 0.34882, "stage1_s": 0.0, "stage1_m": 0.11775, "stage1_l": 0.33914, "stage1_h": 0.34098, "loss": 0.84647, "grad_norm": 4.30975, "time": 1.76877}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.0267, "stage0_loss_instance_mil": 0.26374, "stage0_bag_acc": 90.88486, "stage0_mean_ious": 0.37651, "stage0_s": 0.0, "stage0_m": 0.10806, "stage0_l": 0.2928, "stage0_h": 0.37465, "stage1_loss_instance_mil": 0.34571, "stage1_bag_acc": 83.57835, "stage1_neg_loss": 0.06519, "stage1_mean_ious": 0.38174, "stage1_s": 0.0, "stage1_m": 0.10943, "stage1_l": 0.29829, "stage1_h": 0.38014, "loss": 0.67464, "grad_norm": 14.81713, "time": 1.72766}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18742, "data_time": 0.07663, "stage0_loss_instance_mil": 0.0723, "stage0_bag_acc": 96.51785, "stage0_mean_ious": 0.27692, "stage0_s": 0.0, "stage0_m": 0.09853, "stage0_l": 0.20142, "stage0_h": 0.27885, "stage1_loss_instance_mil": 0.38704, "stage1_bag_acc": 97.77742, "stage1_neg_loss": 0.08491, "stage1_mean_ious": 0.27095, "stage1_s": 0.0, "stage1_m": 0.10875, "stage1_l": 0.19165, "stage1_h": 0.27244, "loss": 0.54425, "grad_norm": 13.7593, "time": 1.76521}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18742, "data_time": 0.02946, "stage0_loss_instance_mil": 0.05918, "stage0_bag_acc": 96.16627, "stage0_mean_ious": 0.30445, "stage0_s": 0.0, "stage0_m": 0.05438, "stage0_l": 0.16532, "stage0_h": 0.31935, "stage1_loss_instance_mil": 0.335, "stage1_bag_acc": 98.13062, "stage1_neg_loss": 0.09207, "stage1_mean_ious": 0.29148, "stage1_s": 0.0, "stage1_m": 0.05414, "stage1_l": 0.15955, "stage1_h": 0.30586, "loss": 0.48625, "grad_norm": 12.57786, "time": 1.76591}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18742, "data_time": 0.02652, "stage0_loss_instance_mil": 0.04477, "stage0_bag_acc": 97.22638, "stage0_mean_ious": 0.27309, "stage0_s": 0.0, "stage0_m": 0.08746, "stage0_l": 0.18061, "stage0_h": 0.27989, "stage1_loss_instance_mil": 0.3319, "stage1_bag_acc": 98.52897, "stage1_neg_loss": 0.08074, "stage1_mean_ious": 0.25786, "stage1_s": 0.0, "stage1_m": 0.08744, "stage1_l": 0.1666, "stage1_h": 0.26436, "loss": 0.4574, "grad_norm": 12.38075, "time": 1.73478}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18742, "data_time": 0.07344, "stage0_loss_instance_mil": 0.04282, "stage0_bag_acc": 97.11061, "stage0_mean_ious": 0.2737, "stage0_s": 0.0, "stage0_m": 0.0626, "stage0_l": 0.15286, "stage0_h": 0.29012, "stage1_loss_instance_mil": 0.29152, "stage1_bag_acc": 98.29747, "stage1_neg_loss": 0.08304, "stage1_mean_ious": 0.26149, "stage1_s": 0.0, "stage1_m": 0.07209, "stage1_l": 0.1409, "stage1_h": 0.27685, "loss": 0.41738, "grad_norm": 12.56293, "time": 1.7595}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02518, "stage0_loss_instance_mil": 0.03198, "stage0_bag_acc": 98.16833, "stage0_mean_ious": 0.25333, "stage0_s": 0.0, "stage0_m": 0.04327, "stage0_l": 0.13823, "stage0_h": 0.26687, "stage1_loss_instance_mil": 0.29067, "stage1_bag_acc": 98.84994, "stage1_neg_loss": 0.08266, "stage1_mean_ious": 0.23993, "stage1_s": 0.0, "stage1_m": 0.04374, "stage1_l": 0.13138, "stage1_h": 0.25279, "loss": 0.40532, "grad_norm": 14.45297, "time": 1.73132}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.02543, "stage0_loss_instance_mil": 0.02932, "stage0_bag_acc": 98.41159, "stage0_mean_ious": 0.26936, "stage0_s": 0.0, "stage0_m": 0.0354, "stage0_l": 0.16183, "stage0_h": 0.28036, "stage1_loss_instance_mil": 0.2591, "stage1_bag_acc": 99.03804, "stage1_neg_loss": 0.0861, "stage1_mean_ious": 0.25231, "stage1_s": 0.0, "stage1_m": 0.03834, "stage1_l": 0.14939, "stage1_h": 0.26215, "loss": 0.37452, "grad_norm": 12.9264, "time": 1.71757}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.038, "bbox_mAP_50": 0.117, "bbox_mAP_75": 0.068, "bbox_mAP_s": 0.027, "bbox_mAP_m": 0.015, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.038 0.117 0.068 0.027 0.015 0.005"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.07499, "stage0_loss_instance_mil": 0.02665, "stage0_bag_acc": 98.22536, "stage0_mean_ious": 0.32599, "stage0_s": 0.0, "stage0_m": 0.05511, "stage0_l": 0.12121, "stage0_h": 0.34948, "stage1_loss_instance_mil": 0.24146, "stage1_bag_acc": 98.66148, "stage1_neg_loss": 0.07111, "stage1_mean_ious": 0.29844, "stage1_s": 0.0, "stage1_m": 0.05735, "stage1_l": 0.11694, "stage1_h": 0.31785, "loss": 0.33922, "grad_norm": 12.49437, "time": 1.77772}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02458, "stage0_loss_instance_mil": 0.037, "stage0_bag_acc": 98.40497, "stage0_mean_ious": 0.34667, "stage0_s": 0.0, "stage0_m": 0.04611, "stage0_l": 0.16956, "stage0_h": 0.36909, "stage1_loss_instance_mil": 0.20461, "stage1_bag_acc": 98.71016, "stage1_neg_loss": 0.07083, "stage1_mean_ious": 0.3214, "stage1_s": 0.0, "stage1_m": 0.04858, "stage1_l": 0.16549, "stage1_h": 0.34009, "loss": 0.31244, "grad_norm": 12.00758, "time": 1.7592}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18745, "data_time": 0.02745, "stage0_loss_instance_mil": 0.02091, "stage0_bag_acc": 98.9278, "stage0_mean_ious": 0.34984, "stage0_s": 0.0, "stage0_m": 0.04475, "stage0_l": 0.1251, "stage0_h": 0.37289, "stage1_loss_instance_mil": 0.2079, "stage1_bag_acc": 99.01299, "stage1_neg_loss": 0.08381, "stage1_mean_ious": 0.3168, "stage1_s": 0.0, "stage1_m": 0.04187, "stage1_l": 0.12252, "stage1_h": 0.33541, "loss": 0.31262, "grad_norm": 13.03442, "time": 1.68579}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18745, "data_time": 0.07419, "stage0_loss_instance_mil": 0.0123, "stage0_bag_acc": 99.36548, "stage0_mean_ious": 0.36882, "stage0_s": 0.0, "stage0_m": 0.02767, "stage0_l": 0.18969, "stage0_h": 0.39708, "stage1_loss_instance_mil": 0.14024, "stage1_bag_acc": 99.3755, "stage1_neg_loss": 0.05606, "stage1_mean_ious": 0.33142, "stage1_s": 0.0, "stage1_m": 0.03142, "stage1_l": 0.19075, "stage1_h": 0.35324, "loss": 0.2086, "grad_norm": 9.28319, "time": 1.73684}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18752, "data_time": 0.02865, "stage0_loss_instance_mil": 0.01102, "stage0_bag_acc": 99.56304, "stage0_mean_ious": 0.37836, "stage0_s": 0.0, "stage0_m": 0.04025, "stage0_l": 0.14211, "stage0_h": 0.40907, "stage1_loss_instance_mil": 0.12516, "stage1_bag_acc": 98.977, "stage1_neg_loss": 0.05768, "stage1_mean_ious": 0.34035, "stage1_s": 0.0, "stage1_m": 0.03933, "stage1_l": 0.14069, "stage1_h": 0.36534, "loss": 0.19385, "grad_norm": 10.30397, "time": 1.73182}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18752, "data_time": 0.02648, "stage0_loss_instance_mil": 0.01586, "stage0_bag_acc": 98.99225, "stage0_mean_ious": 0.39396, "stage0_s": 0.0, "stage0_m": 0.04414, "stage0_l": 0.15074, "stage0_h": 0.4191, "stage1_loss_instance_mil": 0.13189, "stage1_bag_acc": 99.13995, "stage1_neg_loss": 0.05097, "stage1_mean_ious": 0.35174, "stage1_s": 0.0, "stage1_m": 0.04614, "stage1_l": 0.14019, "stage1_h": 0.37259, "loss": 0.19872, "grad_norm": 8.54279, "time": 1.75274}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18752, "data_time": 0.08019, "stage0_loss_instance_mil": 0.00609, "stage0_bag_acc": 99.70029, "stage0_mean_ious": 0.40559, "stage0_s": 0.0, "stage0_m": 0.02857, "stage0_l": 0.15344, "stage0_h": 0.44259, "stage1_loss_instance_mil": 0.10899, "stage1_bag_acc": 99.575, "stage1_neg_loss": 0.05569, "stage1_mean_ious": 0.35502, "stage1_s": 0.0, "stage1_m": 0.02682, "stage1_l": 0.14033, "stage1_h": 0.38515, "loss": 0.17077, "grad_norm": 11.42967, "time": 1.8279}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18752, "data_time": 0.02765, "stage0_loss_instance_mil": 0.00565, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.41701, "stage0_s": 0.0, "stage0_m": 0.03011, "stage0_l": 0.14304, "stage0_h": 0.4484, "stage1_loss_instance_mil": 0.11794, "stage1_bag_acc": 99.36574, "stage1_neg_loss": 0.04645, "stage1_mean_ious": 0.36578, "stage1_s": 0.0, "stage1_m": 0.02862, "stage1_l": 0.13616, "stage1_h": 0.39108, "loss": 0.17003, "grad_norm": 8.66938, "time": 1.74139}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18752, "data_time": 0.02892, "stage0_loss_instance_mil": 0.01142, "stage0_bag_acc": 99.3576, "stage0_mean_ious": 0.41306, "stage0_s": 0.00782, "stage0_m": 0.05662, "stage0_l": 0.13356, "stage0_h": 0.44842, "stage1_loss_instance_mil": 0.10684, "stage1_bag_acc": 99.54365, "stage1_neg_loss": 0.06223, "stage1_mean_ious": 0.36811, "stage1_s": 0.00854, "stage1_m": 0.05731, "stage1_l": 0.12909, "stage1_h": 0.39805, "loss": 0.18049, "grad_norm": 12.18984, "time": 1.73865}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.061, "bbox_mAP_50": 0.2, "bbox_mAP_75": 0.114, "bbox_mAP_s": 0.043, "bbox_mAP_m": 0.02, "bbox_mAP_l": 0.006, "bbox_mAP_copypaste": "0.061 0.200 0.114 0.043 0.020 0.006"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18752, "data_time": 0.07908, "stage0_loss_instance_mil": 0.00687, "stage0_bag_acc": 99.61721, "stage0_mean_ious": 0.44339, "stage0_s": 0.0, "stage0_m": 0.03997, "stage0_l": 0.14606, "stage0_h": 0.48739, "stage1_loss_instance_mil": 0.084, "stage1_bag_acc": 99.70881, "stage1_neg_loss": 0.04337, "stage1_mean_ious": 0.37474, "stage1_s": 0.0, "stage1_m": 0.02963, "stage1_l": 0.1373, "stage1_h": 0.40962, "loss": 0.13424, "grad_norm": 7.55729, "time": 1.77362}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18752, "data_time": 0.03265, "stage0_loss_instance_mil": 0.00699, "stage0_bag_acc": 99.72294, "stage0_mean_ious": 0.42931, "stage0_s": 0.0, "stage0_m": 0.05158, "stage0_l": 0.13804, "stage0_h": 0.47095, "stage1_loss_instance_mil": 0.07933, "stage1_bag_acc": 99.81818, "stage1_neg_loss": 0.04357, "stage1_mean_ious": 0.37193, "stage1_s": 0.0, "stage1_m": 0.05175, "stage1_l": 0.14061, "stage1_h": 0.4028, "loss": 0.12988, "grad_norm": 7.61094, "time": 1.74011}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18752, "data_time": 0.03184, "stage0_loss_instance_mil": 0.01079, "stage0_bag_acc": 99.76974, "stage0_mean_ious": 0.43457, "stage0_s": 0.0, "stage0_m": 0.06053, "stage0_l": 0.15275, "stage0_h": 0.47266, "stage1_loss_instance_mil": 0.10218, "stage1_bag_acc": 99.5364, "stage1_neg_loss": 0.04408, "stage1_mean_ious": 0.37161, "stage1_s": 0.0, "stage1_m": 0.05741, "stage1_l": 0.14079, "stage1_h": 0.40199, "loss": 0.15705, "grad_norm": 7.72115, "time": 1.74541}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18752, "data_time": 0.08231, "stage0_loss_instance_mil": 0.00864, "stage0_bag_acc": 99.43277, "stage0_mean_ious": 0.48024, "stage0_s": 0.0, "stage0_m": 0.02887, "stage0_l": 0.17567, "stage0_h": 0.52611, "stage1_loss_instance_mil": 0.08686, "stage1_bag_acc": 99.25301, "stage1_neg_loss": 0.04314, "stage1_mean_ious": 0.40564, "stage1_s": 0.0, "stage1_m": 0.02918, "stage1_l": 0.16706, "stage1_h": 0.43983, "loss": 0.13864, "grad_norm": 7.69717, "time": 1.80295}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18752, "data_time": 0.02983, "stage0_loss_instance_mil": 0.01006, "stage0_bag_acc": 99.5514, "stage0_mean_ious": 0.51035, "stage0_s": 0.0, "stage0_m": 0.05134, "stage0_l": 0.18192, "stage0_h": 0.54932, "stage1_loss_instance_mil": 0.08733, "stage1_bag_acc": 99.24539, "stage1_neg_loss": 0.04024, "stage1_mean_ious": 0.43759, "stage1_s": 0.0, "stage1_m": 0.05325, "stage1_l": 0.17714, "stage1_h": 0.46798, "loss": 0.13763, "grad_norm": 6.78368, "time": 1.7323}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18752, "data_time": 0.03282, "stage0_loss_instance_mil": 0.01217, "stage0_bag_acc": 99.12804, "stage0_mean_ious": 0.51145, "stage0_s": 0.0, "stage0_m": 0.02946, "stage0_l": 0.17383, "stage0_h": 0.5473, "stage1_loss_instance_mil": 0.08267, "stage1_bag_acc": 99.31189, "stage1_neg_loss": 0.04168, "stage1_mean_ious": 0.44113, "stage1_s": 0.0, "stage1_m": 0.03331, "stage1_l": 0.17427, "stage1_h": 0.46802, "loss": 0.13652, "grad_norm": 7.25708, "time": 1.75118}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18752, "data_time": 0.08073, "stage0_loss_instance_mil": 0.0022, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.47617, "stage0_s": 0.0, "stage0_m": 0.04385, "stage0_l": 0.166, "stage0_h": 0.51786, "stage1_loss_instance_mil": 0.06402, "stage1_bag_acc": 99.78711, "stage1_neg_loss": 0.03294, "stage1_mean_ious": 0.40942, "stage1_s": 0.0, "stage1_m": 0.04403, "stage1_l": 0.16532, "stage1_h": 0.4403, "loss": 0.09916, "grad_norm": 4.8555, "time": 1.80193}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18752, "data_time": 0.02928, "stage0_loss_instance_mil": 0.00564, "stage0_bag_acc": 99.75165, "stage0_mean_ious": 0.50651, "stage0_s": 0.0, "stage0_m": 0.02955, "stage0_l": 0.14855, "stage0_h": 0.54959, "stage1_loss_instance_mil": 0.06461, "stage1_bag_acc": 99.67778, "stage1_neg_loss": 0.03016, "stage1_mean_ious": 0.43655, "stage1_s": 0.0, "stage1_m": 0.02847, "stage1_l": 0.15116, "stage1_h": 0.47082, "loss": 0.10041, "grad_norm": 4.64136, "time": 1.70291}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18752, "data_time": 0.02936, "stage0_loss_instance_mil": 0.00193, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.46059, "stage0_s": 0.0, "stage0_m": 0.0492, "stage0_l": 0.16532, "stage0_h": 0.51803, "stage1_loss_instance_mil": 0.05395, "stage1_bag_acc": 99.92, "stage1_neg_loss": 0.03166, "stage1_mean_ious": 0.39583, "stage1_s": 0.0, "stage1_m": 0.04985, "stage1_l": 0.16557, "stage1_h": 0.44024, "loss": 0.08754, "grad_norm": 4.96928, "time": 1.70826}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.076, "bbox_mAP_50": 0.262, "bbox_mAP_75": 0.136, "bbox_mAP_s": 0.05, "bbox_mAP_m": 0.025, "bbox_mAP_l": 0.008, "bbox_mAP_copypaste": "0.076 0.262 0.136 0.050 0.025 0.008"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18752, "data_time": 0.07982, "stage0_loss_instance_mil": 0.00691, "stage0_bag_acc": 99.79474, "stage0_mean_ious": 0.47249, "stage0_s": 0.0, "stage0_m": 0.04022, "stage0_l": 0.19668, "stage0_h": 0.50683, "stage1_loss_instance_mil": 0.05734, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.03009, "stage1_mean_ious": 0.41536, "stage1_s": 0.0, "stage1_m": 0.03671, "stage1_l": 0.19729, "stage1_h": 0.44111, "loss": 0.09433, "grad_norm": 4.82997, "time": 1.76396}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18752, "data_time": 0.02779, "stage0_loss_instance_mil": 0.00219, "stage0_bag_acc": 99.91304, "stage0_mean_ious": 0.47969, "stage0_s": 0.0, "stage0_m": 0.03953, "stage0_l": 0.13796, "stage0_h": 0.5251, "stage1_loss_instance_mil": 0.04822, "stage1_bag_acc": 99.80828, "stage1_neg_loss": 0.02431, "stage1_mean_ious": 0.41241, "stage1_s": 0.0, "stage1_m": 0.03897, "stage1_l": 0.14227, "stage1_h": 0.44806, "loss": 0.07472, "grad_norm": 3.73115, "time": 1.69851}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18752, "data_time": 0.0301, "stage0_loss_instance_mil": 0.00213, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.50836, "stage0_s": 0.00777, "stage0_m": 0.03523, "stage0_l": 0.16991, "stage0_h": 0.55647, "stage1_loss_instance_mil": 0.05463, "stage1_bag_acc": 99.86667, "stage1_neg_loss": 0.03912, "stage1_mean_ious": 0.43919, "stage1_s": 0.00996, "stage1_m": 0.03586, "stage1_l": 0.17632, "stage1_h": 0.47571, "loss": 0.09589, "grad_norm": 4.97606, "time": 1.73212}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18752, "data_time": 0.08057, "stage0_loss_instance_mil": 0.00106, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.45407, "stage0_s": 0.0, "stage0_m": 0.03642, "stage0_l": 0.15448, "stage0_h": 0.50026, "stage1_loss_instance_mil": 0.05121, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03063, "stage1_mean_ious": 0.40061, "stage1_s": 0.0, "stage1_m": 0.02984, "stage1_l": 0.15083, "stage1_h": 0.43994, "loss": 0.0829, "grad_norm": 4.52599, "time": 1.79388}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18752, "data_time": 0.02959, "stage0_loss_instance_mil": 0.00125, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.49625, "stage0_s": 0.0, "stage0_m": 0.06006, "stage0_l": 0.14312, "stage0_h": 0.54575, "stage1_loss_instance_mil": 0.05167, "stage1_bag_acc": 99.90909, "stage1_neg_loss": 0.02863, "stage1_mean_ious": 0.4264, "stage1_s": 0.0, "stage1_m": 0.061, "stage1_l": 0.14705, "stage1_h": 0.46392, "loss": 0.08154, "grad_norm": 4.21053, "time": 1.73542}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18752, "data_time": 0.02908, "stage0_loss_instance_mil": 0.00658, "stage0_bag_acc": 99.77976, "stage0_mean_ious": 0.50096, "stage0_s": 0.0, "stage0_m": 0.0345, "stage0_l": 0.16674, "stage0_h": 0.54528, "stage1_loss_instance_mil": 0.05253, "stage1_bag_acc": 99.67976, "stage1_neg_loss": 0.02635, "stage1_mean_ious": 0.42584, "stage1_s": 0.0, "stage1_m": 0.03756, "stage1_l": 0.16074, "stage1_h": 0.45902, "loss": 0.08546, "grad_norm": 4.36902, "time": 1.72825}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18752, "data_time": 0.07985, "stage0_loss_instance_mil": 0.00136, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.50316, "stage0_s": 0.0, "stage0_m": 0.04815, "stage0_l": 0.13126, "stage0_h": 0.55585, "stage1_loss_instance_mil": 0.04621, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03457, "stage1_mean_ious": 0.4349, "stage1_s": 0.0, "stage1_m": 0.04321, "stage1_l": 0.13315, "stage1_h": 0.47547, "loss": 0.08214, "grad_norm": 4.62984, "time": 1.77678}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18752, "data_time": 0.02896, "stage0_loss_instance_mil": 0.00578, "stage0_bag_acc": 99.875, "stage0_mean_ious": 0.48583, "stage0_s": 0.0, "stage0_m": 0.03707, "stage0_l": 0.14519, "stage0_h": 0.53326, "stage1_loss_instance_mil": 0.04322, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.03, "stage1_mean_ious": 0.42244, "stage1_s": 0.0, "stage1_m": 0.03506, "stage1_l": 0.1423, "stage1_h": 0.45996, "loss": 0.079, "grad_norm": 4.45803, "time": 1.73319}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18752, "data_time": 0.03048, "stage0_loss_instance_mil": 0.00244, "stage0_bag_acc": 99.85714, "stage0_mean_ious": 0.47685, "stage0_s": 0.0, "stage0_m": 0.04611, "stage0_l": 0.15862, "stage0_h": 0.52274, "stage1_loss_instance_mil": 0.04796, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.03113, "stage1_mean_ious": 0.41037, "stage1_s": 0.0, "stage1_m": 0.04513, "stage1_l": 0.15579, "stage1_h": 0.44681, "loss": 0.08153, "grad_norm": 4.29403, "time": 1.72948}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.085, "bbox_mAP_50": 0.281, "bbox_mAP_75": 0.153, "bbox_mAP_s": 0.057, "bbox_mAP_m": 0.033, "bbox_mAP_l": 0.013, "bbox_mAP_copypaste": "0.085 0.281 0.153 0.057 0.033 0.013"}
