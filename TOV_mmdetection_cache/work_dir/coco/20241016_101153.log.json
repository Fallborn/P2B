{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+e282583", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [2]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18722, "data_time": 0.07813, "stage0_loss_instance_mil": 0.69491, "stage0_bag_acc": 24.88392, "stage0_mean_ious": 0.32777, "stage0_s": 0.0, "stage0_m": 0.07469, "stage0_l": 0.23993, "stage0_h": 0.32975, "stage1_loss_instance_mil": 0.18412, "stage1_bag_acc": 16.22027, "stage1_neg_loss": 0.00216, "stage1_mean_ious": 0.31319, "stage1_s": 0.0, "stage1_m": 0.06626, "stage1_l": 0.23661, "stage1_h": 0.31578, "loss": 0.88119, "grad_norm": 3.50204, "time": 1.90843}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18722, "data_time": 0.02755, "stage0_loss_instance_mil": 0.55961, "stage0_bag_acc": 57.48351, "stage0_mean_ious": 0.31875, "stage0_s": 0.0, "stage0_m": 0.06033, "stage0_l": 0.19239, "stage0_h": 0.33057, "stage1_loss_instance_mil": 0.26855, "stage1_bag_acc": 28.86548, "stage1_neg_loss": 0.0038, "stage1_mean_ious": 0.3172, "stage1_s": 0.0, "stage1_m": 0.06154, "stage1_l": 0.19303, "stage1_h": 0.32851, "loss": 0.83197, "grad_norm": 4.71236, "time": 1.89224}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18722, "data_time": 0.02835, "stage0_loss_instance_mil": 0.21978, "stage0_bag_acc": 90.19809, "stage0_mean_ious": 0.31794, "stage0_s": 0.0, "stage0_m": 0.04549, "stage0_l": 0.21898, "stage0_h": 0.33393, "stage1_loss_instance_mil": 0.34424, "stage1_bag_acc": 87.547, "stage1_neg_loss": 0.07195, "stage1_mean_ious": 0.30623, "stage1_s": 0.0, "stage1_m": 0.04545, "stage1_l": 0.19949, "stage1_h": 0.32338, "loss": 0.63597, "grad_norm": 11.20795, "time": 1.90588}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18724, "data_time": 0.0797, "stage0_loss_instance_mil": 0.06693, "stage0_bag_acc": 96.80175, "stage0_mean_ious": 0.28105, "stage0_s": 0.0, "stage0_m": 0.0618, "stage0_l": 0.12769, "stage0_h": 0.29157, "stage1_loss_instance_mil": 0.33364, "stage1_bag_acc": 97.36613, "stage1_neg_loss": 0.09742, "stage1_mean_ious": 0.26148, "stage1_s": 0.0, "stage1_m": 0.04085, "stage1_l": 0.10688, "stage1_h": 0.27459, "loss": 0.49799, "grad_norm": 13.36297, "time": 1.98394}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18724, "data_time": 0.03152, "stage0_loss_instance_mil": 0.04764, "stage0_bag_acc": 97.44278, "stage0_mean_ious": 0.27651, "stage0_s": 0.0, "stage0_m": 0.04674, "stage0_l": 0.11318, "stage0_h": 0.29434, "stage1_loss_instance_mil": 0.30694, "stage1_bag_acc": 98.33849, "stage1_neg_loss": 0.08334, "stage1_mean_ious": 0.24583, "stage1_s": 0.0, "stage1_m": 0.03104, "stage1_l": 0.0822, "stage1_h": 0.26501, "loss": 0.43793, "grad_norm": 10.62519, "time": 1.93189}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18724, "data_time": 0.03094, "stage0_loss_instance_mil": 0.05576, "stage0_bag_acc": 96.14635, "stage0_mean_ious": 0.24415, "stage0_s": 0.00851, "stage0_m": 0.05027, "stage0_l": 0.08973, "stage0_h": 0.25152, "stage1_loss_instance_mil": 0.31643, "stage1_bag_acc": 96.68912, "stage1_neg_loss": 0.0905, "stage1_mean_ious": 0.21374, "stage1_s": 0.00681, "stage1_m": 0.03117, "stage1_l": 0.06816, "stage1_h": 0.22342, "loss": 0.46269, "grad_norm": 14.22028, "time": 1.95218}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18724, "data_time": 0.07817, "stage0_loss_instance_mil": 0.02722, "stage0_bag_acc": 98.40901, "stage0_mean_ious": 0.22964, "stage0_s": 0.0, "stage0_m": 0.03746, "stage0_l": 0.10843, "stage0_h": 0.24348, "stage1_loss_instance_mil": 0.27221, "stage1_bag_acc": 99.1491, "stage1_neg_loss": 0.08808, "stage1_mean_ious": 0.20146, "stage1_s": 0.0, "stage1_m": 0.02198, "stage1_l": 0.07968, "stage1_h": 0.21647, "loss": 0.38751, "grad_norm": 11.13666, "time": 1.99904}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18750, "data_time": 0.02834, "stage0_loss_instance_mil": 0.0414, "stage0_bag_acc": 96.85009, "stage0_mean_ious": 0.24752, "stage0_s": 0.0, "stage0_m": 0.04923, "stage0_l": 0.10733, "stage0_h": 0.26136, "stage1_loss_instance_mil": 0.30398, "stage1_bag_acc": 98.21825, "stage1_neg_loss": 0.09127, "stage1_mean_ious": 0.21781, "stage1_s": 0.0, "stage1_m": 0.02783, "stage1_l": 0.09076, "stage1_h": 0.23192, "loss": 0.43665, "grad_norm": 16.16032, "time": 1.89034}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18750, "data_time": 0.02693, "stage0_loss_instance_mil": 0.03097, "stage0_bag_acc": 98.3908, "stage0_mean_ious": 0.26278, "stage0_s": 0.0, "stage0_m": 0.04362, "stage0_l": 0.10653, "stage0_h": 0.28216, "stage1_loss_instance_mil": 0.26886, "stage1_bag_acc": 98.69466, "stage1_neg_loss": 0.08378, "stage1_mean_ious": 0.22853, "stage1_s": 0.0, "stage1_m": 0.02522, "stage1_l": 0.08084, "stage1_h": 0.24801, "loss": 0.3836, "grad_norm": 12.95933, "time": 1.8362}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.005, "bbox_mAP_50": 0.025, "bbox_mAP_75": 0.008, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.005 0.025 0.008 0.001 0.000 0.000"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18750, "data_time": 0.07389, "stage0_loss_instance_mil": 0.02326, "stage0_bag_acc": 98.59884, "stage0_mean_ious": 0.24353, "stage0_s": 0.0, "stage0_m": 0.03827, "stage0_l": 0.11306, "stage0_h": 0.26618, "stage1_loss_instance_mil": 0.23618, "stage1_bag_acc": 99.13867, "stage1_neg_loss": 0.0836, "stage1_mean_ious": 0.20964, "stage1_s": 0.0, "stage1_m": 0.02146, "stage1_l": 0.09029, "stage1_h": 0.23207, "loss": 0.34303, "grad_norm": 14.63789, "time": 1.77513}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18750, "data_time": 0.02547, "stage0_loss_instance_mil": 0.01404, "stage0_bag_acc": 99.44061, "stage0_mean_ious": 0.25951, "stage0_s": 0.0, "stage0_m": 0.04214, "stage0_l": 0.09305, "stage0_h": 0.27852, "stage1_loss_instance_mil": 0.20276, "stage1_bag_acc": 99.4949, "stage1_neg_loss": 0.07329, "stage1_mean_ious": 0.22491, "stage1_s": 0.0, "stage1_m": 0.02479, "stage1_l": 0.06363, "stage1_h": 0.24354, "loss": 0.2901, "grad_norm": 10.3579, "time": 1.7098}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18750, "data_time": 0.02557, "stage0_loss_instance_mil": 0.01558, "stage0_bag_acc": 99.01872, "stage0_mean_ious": 0.23364, "stage0_s": 0.0, "stage0_m": 0.04129, "stage0_l": 0.0949, "stage0_h": 0.24889, "stage1_loss_instance_mil": 0.19917, "stage1_bag_acc": 99.56211, "stage1_neg_loss": 0.06652, "stage1_mean_ious": 0.20352, "stage1_s": 0.0, "stage1_m": 0.0251, "stage1_l": 0.06886, "stage1_h": 0.2202, "loss": 0.28128, "grad_norm": 10.03382, "time": 1.70955}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18750, "data_time": 0.07796, "stage0_loss_instance_mil": 0.01062, "stage0_bag_acc": 99.1359, "stage0_mean_ious": 0.26557, "stage0_s": 0.0, "stage0_m": 0.03379, "stage0_l": 0.09904, "stage0_h": 0.2856, "stage1_loss_instance_mil": 0.16199, "stage1_bag_acc": 99.49808, "stage1_neg_loss": 0.06223, "stage1_mean_ious": 0.22547, "stage1_s": 0.0, "stage1_m": 0.01925, "stage1_l": 0.07839, "stage1_h": 0.24464, "loss": 0.23485, "grad_norm": 8.46585, "time": 1.76808}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18750, "data_time": 0.02567, "stage0_loss_instance_mil": 0.01364, "stage0_bag_acc": 99.35635, "stage0_mean_ious": 0.28344, "stage0_s": 0.00794, "stage0_m": 0.02085, "stage0_l": 0.0998, "stage0_h": 0.3102, "stage1_loss_instance_mil": 0.17154, "stage1_bag_acc": 99.15635, "stage1_neg_loss": 0.06727, "stage1_mean_ious": 0.24364, "stage1_s": 0.00622, "stage1_m": 0.01637, "stage1_l": 0.07454, "stage1_h": 0.26847, "loss": 0.25245, "grad_norm": 11.862, "time": 1.71213}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18750, "data_time": 0.02485, "stage0_loss_instance_mil": 0.01148, "stage0_bag_acc": 99.25016, "stage0_mean_ious": 0.24068, "stage0_s": 0.0, "stage0_m": 0.03833, "stage0_l": 0.09957, "stage0_h": 0.26119, "stage1_loss_instance_mil": 0.14778, "stage1_bag_acc": 99.71304, "stage1_neg_loss": 0.0634, "stage1_mean_ious": 0.20503, "stage1_s": 0.0, "stage1_m": 0.02231, "stage1_l": 0.07319, "stage1_h": 0.22552, "loss": 0.22265, "grad_norm": 10.45206, "time": 1.66678}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18757, "data_time": 0.07434, "stage0_loss_instance_mil": 0.00504, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.28135, "stage0_s": 0.0, "stage0_m": 0.03937, "stage0_l": 0.08919, "stage0_h": 0.30782, "stage1_loss_instance_mil": 0.13197, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05845, "stage1_mean_ious": 0.24178, "stage1_s": 0.0, "stage1_m": 0.02525, "stage1_l": 0.06799, "stage1_h": 0.26752, "loss": 0.19546, "grad_norm": 8.4808, "time": 1.70873}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18757, "data_time": 0.02502, "stage0_loss_instance_mil": 0.01246, "stage0_bag_acc": 99.50457, "stage0_mean_ious": 0.28596, "stage0_s": 0.0, "stage0_m": 0.01614, "stage0_l": 0.10369, "stage0_h": 0.30874, "stage1_loss_instance_mil": 0.15868, "stage1_bag_acc": 99.19653, "stage1_neg_loss": 0.05654, "stage1_mean_ious": 0.24688, "stage1_s": 0.0, "stage1_m": 0.00912, "stage1_l": 0.08511, "stage1_h": 0.26809, "loss": 0.22768, "grad_norm": 9.67754, "time": 1.71048}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18757, "data_time": 0.02491, "stage0_loss_instance_mil": 0.0296, "stage0_bag_acc": 98.63557, "stage0_mean_ious": 0.30881, "stage0_s": 0.0, "stage0_m": 0.04856, "stage0_l": 0.09578, "stage0_h": 0.33026, "stage1_loss_instance_mil": 0.1334, "stage1_bag_acc": 98.92929, "stage1_neg_loss": 0.05259, "stage1_mean_ious": 0.26373, "stage1_s": 0.0, "stage1_m": 0.04212, "stage1_l": 0.07302, "stage1_h": 0.28402, "loss": 0.21559, "grad_norm": 8.33355, "time": 1.7131}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.005, "bbox_mAP_50": 0.03, "bbox_mAP_75": 0.005, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.005 0.030 0.005 0.000 0.000 0.000"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18757, "data_time": 0.07508, "stage0_loss_instance_mil": 0.00859, "stage0_bag_acc": 99.69275, "stage0_mean_ious": 0.34582, "stage0_s": 0.0, "stage0_m": 0.02379, "stage0_l": 0.12508, "stage0_h": 0.37401, "stage1_loss_instance_mil": 0.12686, "stage1_bag_acc": 99.22637, "stage1_neg_loss": 0.04858, "stage1_mean_ious": 0.29616, "stage1_s": 0.0, "stage1_m": 0.01478, "stage1_l": 0.10121, "stage1_h": 0.32202, "loss": 0.18403, "grad_norm": 7.889, "time": 1.76156}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18757, "data_time": 0.02523, "stage0_loss_instance_mil": 0.01868, "stage0_bag_acc": 98.93863, "stage0_mean_ious": 0.3512, "stage0_s": 0.0079, "stage0_m": 0.04687, "stage0_l": 0.09053, "stage0_h": 0.3794, "stage1_loss_instance_mil": 0.13163, "stage1_bag_acc": 99.37478, "stage1_neg_loss": 0.07042, "stage1_mean_ious": 0.30073, "stage1_s": 0.00651, "stage1_m": 0.03143, "stage1_l": 0.0757, "stage1_h": 0.32542, "loss": 0.22074, "grad_norm": 12.89157, "time": 1.72973}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18757, "data_time": 0.02491, "stage0_loss_instance_mil": 0.02238, "stage0_bag_acc": 98.37413, "stage0_mean_ious": 0.36442, "stage0_s": 0.0, "stage0_m": 0.03457, "stage0_l": 0.11729, "stage0_h": 0.40498, "stage1_loss_instance_mil": 0.13175, "stage1_bag_acc": 99.33471, "stage1_neg_loss": 0.05292, "stage1_mean_ious": 0.32186, "stage1_s": 0.0, "stage1_m": 0.02704, "stage1_l": 0.09656, "stage1_h": 0.35967, "loss": 0.20704, "grad_norm": 9.24062, "time": 1.71226}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18757, "data_time": 0.07481, "stage0_loss_instance_mil": 0.01199, "stage0_bag_acc": 99.44013, "stage0_mean_ious": 0.34171, "stage0_s": 0.0, "stage0_m": 0.04057, "stage0_l": 0.12288, "stage0_h": 0.37602, "stage1_loss_instance_mil": 0.10533, "stage1_bag_acc": 99.48347, "stage1_neg_loss": 0.0507, "stage1_mean_ious": 0.29933, "stage1_s": 0.0, "stage1_m": 0.03127, "stage1_l": 0.10088, "stage1_h": 0.33079, "loss": 0.16801, "grad_norm": 6.7204, "time": 1.77311}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18757, "data_time": 0.02586, "stage0_loss_instance_mil": 0.00718, "stage0_bag_acc": 99.73333, "stage0_mean_ious": 0.3392, "stage0_s": 0.0, "stage0_m": 0.04212, "stage0_l": 0.11909, "stage0_h": 0.36613, "stage1_loss_instance_mil": 0.11621, "stage1_bag_acc": 99.70476, "stage1_neg_loss": 0.05224, "stage1_mean_ious": 0.29755, "stage1_s": 0.0, "stage1_m": 0.03384, "stage1_l": 0.10964, "stage1_h": 0.32127, "loss": 0.17563, "grad_norm": 7.9287, "time": 1.67833}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18757, "data_time": 0.02764, "stage0_loss_instance_mil": 0.01093, "stage0_bag_acc": 99.36334, "stage0_mean_ious": 0.30269, "stage0_s": 0.0, "stage0_m": 0.04887, "stage0_l": 0.10426, "stage0_h": 0.33045, "stage1_loss_instance_mil": 0.11547, "stage1_bag_acc": 99.55908, "stage1_neg_loss": 0.05191, "stage1_mean_ious": 0.26602, "stage1_s": 0.0, "stage1_m": 0.03656, "stage1_l": 0.08917, "stage1_h": 0.29197, "loss": 0.17831, "grad_norm": 8.06984, "time": 1.7471}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18757, "data_time": 0.07739, "stage0_loss_instance_mil": 0.00258, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.31757, "stage0_s": 0.0, "stage0_m": 0.02143, "stage0_l": 0.09373, "stage0_h": 0.33716, "stage1_loss_instance_mil": 0.08926, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04687, "stage1_mean_ious": 0.27869, "stage1_s": 0.0, "stage1_m": 0.0175, "stage1_l": 0.08455, "stage1_h": 0.29576, "loss": 0.13871, "grad_norm": 6.08058, "time": 1.77307}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18757, "data_time": 0.02687, "stage0_loss_instance_mil": 0.00591, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.29473, "stage0_s": 0.00764, "stage0_m": 0.04285, "stage0_l": 0.10251, "stage0_h": 0.32241, "stage1_loss_instance_mil": 0.08708, "stage1_bag_acc": 99.81385, "stage1_neg_loss": 0.04442, "stage1_mean_ious": 0.25766, "stage1_s": 0.00634, "stage1_m": 0.03747, "stage1_l": 0.08882, "stage1_h": 0.28173, "loss": 0.13741, "grad_norm": 5.17909, "time": 1.7171}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18757, "data_time": 0.02655, "stage0_loss_instance_mil": 0.00278, "stage0_bag_acc": 99.92308, "stage0_mean_ious": 0.31611, "stage0_s": 0.0, "stage0_m": 0.042, "stage0_l": 0.10708, "stage0_h": 0.34474, "stage1_loss_instance_mil": 0.08488, "stage1_bag_acc": 99.79144, "stage1_neg_loss": 0.04104, "stage1_mean_ious": 0.28031, "stage1_s": 0.0, "stage1_m": 0.03157, "stage1_l": 0.09662, "stage1_h": 0.30641, "loss": 0.12871, "grad_norm": 5.24674, "time": 1.70829}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 180, "bbox_mAP": 0.009, "bbox_mAP_50": 0.051, "bbox_mAP_75": 0.012, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.009 0.051 0.012 0.001 0.000 0.000"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18757, "data_time": 0.07452, "stage0_loss_instance_mil": 0.00291, "stage0_bag_acc": 99.91667, "stage0_mean_ious": 0.32941, "stage0_s": 0.0, "stage0_m": 0.02644, "stage0_l": 0.11103, "stage0_h": 0.35805, "stage1_loss_instance_mil": 0.07632, "stage1_bag_acc": 99.92, "stage1_neg_loss": 0.04006, "stage1_mean_ious": 0.29156, "stage1_s": 0.0, "stage1_m": 0.02171, "stage1_l": 0.09676, "stage1_h": 0.31824, "loss": 0.11929, "grad_norm": 4.72903, "time": 1.76085}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18757, "data_time": 0.02502, "stage0_loss_instance_mil": 0.00353, "stage0_bag_acc": 99.77709, "stage0_mean_ious": 0.30126, "stage0_s": 0.0, "stage0_m": 0.04656, "stage0_l": 0.08857, "stage0_h": 0.32676, "stage1_loss_instance_mil": 0.08091, "stage1_bag_acc": 99.75735, "stage1_neg_loss": 0.04723, "stage1_mean_ious": 0.26149, "stage1_s": 0.0, "stage1_m": 0.03209, "stage1_l": 0.06945, "stage1_h": 0.28666, "loss": 0.13167, "grad_norm": 5.43735, "time": 1.68087}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18757, "data_time": 0.02489, "stage0_loss_instance_mil": 0.006, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.3267, "stage0_s": 0.0, "stage0_m": 0.03421, "stage0_l": 0.09585, "stage0_h": 0.3572, "stage1_loss_instance_mil": 0.08449, "stage1_bag_acc": 99.67836, "stage1_neg_loss": 0.04461, "stage1_mean_ious": 0.2844, "stage1_s": 0.0, "stage1_m": 0.02897, "stage1_l": 0.0888, "stage1_h": 0.3104, "loss": 0.13509, "grad_norm": 5.1309, "time": 1.69256}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07359, "stage0_loss_instance_mil": 0.00174, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.31963, "stage0_s": 0.0, "stage0_m": 0.02961, "stage0_l": 0.10437, "stage0_h": 0.3465, "stage1_loss_instance_mil": 0.07331, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03983, "stage1_mean_ious": 0.28285, "stage1_s": 0.0, "stage1_m": 0.02412, "stage1_l": 0.08786, "stage1_h": 0.30739, "loss": 0.11488, "grad_norm": 4.82467, "time": 1.7231}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02533, "stage0_loss_instance_mil": 0.00607, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.33687, "stage0_s": 0.0, "stage0_m": 0.02813, "stage0_l": 0.11256, "stage0_h": 0.36578, "stage1_loss_instance_mil": 0.08651, "stage1_bag_acc": 99.77709, "stage1_neg_loss": 0.04433, "stage1_mean_ious": 0.29044, "stage1_s": 0.0, "stage1_m": 0.023, "stage1_l": 0.09496, "stage1_h": 0.31565, "loss": 0.13691, "grad_norm": 5.44678, "time": 1.71766}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02482, "stage0_loss_instance_mil": 0.00146, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.29555, "stage0_s": 0.0, "stage0_m": 0.03, "stage0_l": 0.11064, "stage0_h": 0.32051, "stage1_loss_instance_mil": 0.07668, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03818, "stage1_mean_ious": 0.25747, "stage1_s": 0.0, "stage1_m": 0.02216, "stage1_l": 0.0981, "stage1_h": 0.27933, "loss": 0.11632, "grad_norm": 4.86501, "time": 1.7012}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07375, "stage0_loss_instance_mil": 0.00551, "stage0_bag_acc": 99.90909, "stage0_mean_ious": 0.31525, "stage0_s": 0.0, "stage0_m": 0.03036, "stage0_l": 0.10214, "stage0_h": 0.33644, "stage1_loss_instance_mil": 0.07253, "stage1_bag_acc": 99.58311, "stage1_neg_loss": 0.04458, "stage1_mean_ious": 0.27307, "stage1_s": 0.0, "stage1_m": 0.02721, "stage1_l": 0.09354, "stage1_h": 0.29151, "loss": 0.12262, "grad_norm": 5.3687, "time": 1.74603}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18840, "data_time": 0.02434, "stage0_loss_instance_mil": 0.00168, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.33939, "stage0_s": 0.0, "stage0_m": 0.02953, "stage0_l": 0.09864, "stage0_h": 0.3642, "stage1_loss_instance_mil": 0.07811, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04577, "stage1_mean_ious": 0.29882, "stage1_s": 0.0, "stage1_m": 0.01954, "stage1_l": 0.08596, "stage1_h": 0.32136, "loss": 0.12557, "grad_norm": 6.36777, "time": 1.68276}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18840, "data_time": 0.02608, "stage0_loss_instance_mil": 0.00172, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.30359, "stage0_s": 0.0, "stage0_m": 0.0584, "stage0_l": 0.08685, "stage0_h": 0.32313, "stage1_loss_instance_mil": 0.07434, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03646, "stage1_mean_ious": 0.26073, "stage1_s": 0.0, "stage1_m": 0.04765, "stage1_l": 0.07446, "stage1_h": 0.27744, "loss": 0.11253, "grad_norm": 4.81267, "time": 1.75243}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 180, "bbox_mAP": 0.008, "bbox_mAP_50": 0.045, "bbox_mAP_75": 0.009, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.008 0.045 0.009 0.001 0.000 0.000"}
