{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+c820f32", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPNPADNN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=2,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [3]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 19801, "data_time": 0.07614, "stage0_loss_instance_mil": 0.7171, "stage0_bag_acc": 17.69475, "stage0_mean_ious": 0.25956, "stage0_s": 0.0, "stage0_m": 0.07691, "stage0_l": 0.19148, "stage0_h": 0.26669, "stage1_loss_instance_mil": 0.16144, "stage1_bag_acc": 23.13373, "stage1_neg_loss": 0.00098, "stage1_mean_ious": 0.24115, "stage1_s": 0.0, "stage1_m": 0.06675, "stage1_l": 0.17674, "stage1_h": 0.24851, "loss": 0.87951, "grad_norm": 1.57298, "time": 1.62042}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 19801, "data_time": 0.02658, "stage0_loss_instance_mil": 0.65312, "stage0_bag_acc": 36.12259, "stage0_mean_ious": 0.23199, "stage0_s": 0.0, "stage0_m": 0.03614, "stage0_l": 0.18542, "stage0_h": 0.23183, "stage1_loss_instance_mil": 0.19429, "stage1_bag_acc": 28.22038, "stage1_neg_loss": 0.0019, "stage1_mean_ious": 0.22098, "stage1_s": 0.0, "stage1_m": 0.03225, "stage1_l": 0.17105, "stage1_h": 0.22287, "loss": 0.84931, "grad_norm": 2.33297, "time": 1.56402}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 19801, "data_time": 0.0272, "stage0_loss_instance_mil": 0.41757, "stage0_bag_acc": 71.43332, "stage0_mean_ious": 0.24578, "stage0_s": 0.0, "stage0_m": 0.07753, "stage0_l": 0.16663, "stage0_h": 0.24695, "stage1_loss_instance_mil": 0.26619, "stage1_bag_acc": 68.69759, "stage1_neg_loss": 0.05298, "stage1_mean_ious": 0.23267, "stage1_s": 0.0, "stage1_m": 0.052, "stage1_l": 0.1435, "stage1_h": 0.23723, "loss": 0.73674, "grad_norm": 12.07486, "time": 1.58866}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 19801, "data_time": 0.07298, "stage0_loss_instance_mil": 0.14212, "stage0_bag_acc": 94.17759, "stage0_mean_ious": 0.28297, "stage0_s": 0.0, "stage0_m": 0.06623, "stage0_l": 0.13261, "stage0_h": 0.30114, "stage1_loss_instance_mil": 0.33786, "stage1_bag_acc": 96.60045, "stage1_neg_loss": 0.07329, "stage1_mean_ious": 0.24428, "stage1_s": 0.0, "stage1_m": 0.04687, "stage1_l": 0.10108, "stage1_h": 0.26371, "loss": 0.55327, "grad_norm": 10.23889, "time": 1.64795}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 19801, "data_time": 0.02509, "stage0_loss_instance_mil": 0.08195, "stage0_bag_acc": 95.69699, "stage0_mean_ious": 0.34549, "stage0_s": 0.00132, "stage0_m": 0.03277, "stage0_l": 0.12155, "stage0_h": 0.36613, "stage1_loss_instance_mil": 0.30676, "stage1_bag_acc": 97.71913, "stage1_neg_loss": 0.08537, "stage1_mean_ious": 0.2994, "stage1_s": 0.00134, "stage1_m": 0.02393, "stage1_l": 0.08731, "stage1_h": 0.31986, "loss": 0.47407, "grad_norm": 12.23097, "time": 1.60489}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 19801, "data_time": 0.02506, "stage0_loss_instance_mil": 0.05493, "stage0_bag_acc": 97.16254, "stage0_mean_ious": 0.29963, "stage0_s": 0.0, "stage0_m": 0.0462, "stage0_l": 0.11617, "stage0_h": 0.32104, "stage1_loss_instance_mil": 0.29596, "stage1_bag_acc": 98.51522, "stage1_neg_loss": 0.09213, "stage1_mean_ious": 0.25574, "stage1_s": 0.0, "stage1_m": 0.03344, "stage1_l": 0.09549, "stage1_h": 0.2755, "loss": 0.44303, "grad_norm": 13.49476, "time": 1.56648}
{"mode": "val", "epoch": 2, "iter": 180, "lr": 4e-05, "eval_iter_num": 90, "bbox_mAP": 0.028, "bbox_mAP_50": 0.111, "bbox_mAP_75": 0.047, "bbox_mAP_s": 0.012, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.028 0.111 0.047 0.012 0.005 0.001"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 19801, "data_time": 0.08114, "stage0_loss_instance_mil": 0.02845, "stage0_bag_acc": 99.08859, "stage0_mean_ious": 0.33002, "stage0_s": 0.0, "stage0_m": 0.05477, "stage0_l": 0.09216, "stage0_h": 0.35918, "stage1_loss_instance_mil": 0.2809, "stage1_bag_acc": 99.3045, "stage1_neg_loss": 0.08167, "stage1_mean_ious": 0.28056, "stage1_s": 0.0, "stage1_m": 0.03803, "stage1_l": 0.0727, "stage1_h": 0.30627, "loss": 0.39103, "grad_norm": 13.12587, "time": 1.66587}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 19801, "data_time": 0.02816, "stage0_loss_instance_mil": 0.04124, "stage0_bag_acc": 97.55121, "stage0_mean_ious": 0.29241, "stage0_s": 0.0, "stage0_m": 0.03836, "stage0_l": 0.11654, "stage0_h": 0.3196, "stage1_loss_instance_mil": 0.25621, "stage1_bag_acc": 98.32355, "stage1_neg_loss": 0.09584, "stage1_mean_ious": 0.25467, "stage1_s": 0.0, "stage1_m": 0.0272, "stage1_l": 0.08068, "stage1_h": 0.28267, "loss": 0.39329, "grad_norm": 17.05538, "time": 1.56513}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 19801, "data_time": 0.02761, "stage0_loss_instance_mil": 0.04419, "stage0_bag_acc": 97.83125, "stage0_mean_ious": 0.2691, "stage0_s": 0.00183, "stage0_m": 0.03368, "stage0_l": 0.10255, "stage0_h": 0.28925, "stage1_loss_instance_mil": 0.26708, "stage1_bag_acc": 98.20695, "stage1_neg_loss": 0.10831, "stage1_mean_ious": 0.22847, "stage1_s": 0.00138, "stage1_m": 0.02291, "stage1_l": 0.08893, "stage1_h": 0.24674, "loss": 0.41958, "grad_norm": 18.71453, "time": 1.62027}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 19801, "data_time": 0.07473, "stage0_loss_instance_mil": 0.03247, "stage0_bag_acc": 98.53794, "stage0_mean_ious": 0.30782, "stage0_s": 0.00145, "stage0_m": 0.01489, "stage0_l": 0.11134, "stage0_h": 0.34193, "stage1_loss_instance_mil": 0.23482, "stage1_bag_acc": 98.87843, "stage1_neg_loss": 0.08258, "stage1_mean_ious": 0.26119, "stage1_s": 0.00152, "stage1_m": 0.0128, "stage1_l": 0.08728, "stage1_h": 0.29159, "loss": 0.34987, "grad_norm": 12.37526, "time": 1.64985}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 19801, "data_time": 0.02477, "stage0_loss_instance_mil": 0.0261, "stage0_bag_acc": 98.76854, "stage0_mean_ious": 0.25835, "stage0_s": 0.0, "stage0_m": 0.03675, "stage0_l": 0.10952, "stage0_h": 0.27787, "stage1_loss_instance_mil": 0.25712, "stage1_bag_acc": 99.06674, "stage1_neg_loss": 0.08545, "stage1_mean_ious": 0.22781, "stage1_s": 0.0, "stage1_m": 0.02523, "stage1_l": 0.08112, "stage1_h": 0.24848, "loss": 0.36867, "grad_norm": 13.82608, "time": 1.57399}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 19801, "data_time": 0.02512, "stage0_loss_instance_mil": 0.04572, "stage0_bag_acc": 97.15041, "stage0_mean_ious": 0.23795, "stage0_s": 0.0, "stage0_m": 0.02665, "stage0_l": 0.08684, "stage0_h": 0.25252, "stage1_loss_instance_mil": 0.24467, "stage1_bag_acc": 98.55584, "stage1_neg_loss": 0.08077, "stage1_mean_ious": 0.20761, "stage1_s": 0.0, "stage1_m": 0.01865, "stage1_l": 0.06571, "stage1_h": 0.2226, "loss": 0.37116, "grad_norm": 11.85304, "time": 1.58635}
{"mode": "val", "epoch": 4, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.022, "bbox_mAP_50": 0.091, "bbox_mAP_75": 0.037, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.003, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.022 0.091 0.037 0.010 0.003 0.001"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 19801, "data_time": 0.07389, "stage0_loss_instance_mil": 0.02809, "stage0_bag_acc": 98.23909, "stage0_mean_ious": 0.20569, "stage0_s": 0.0, "stage0_m": 0.0183, "stage0_l": 0.09453, "stage0_h": 0.21729, "stage1_loss_instance_mil": 0.24287, "stage1_bag_acc": 99.11322, "stage1_neg_loss": 0.08034, "stage1_mean_ious": 0.18136, "stage1_s": 0.0, "stage1_m": 0.01039, "stage1_l": 0.0712, "stage1_h": 0.19425, "loss": 0.3513, "grad_norm": 11.2364, "time": 1.61424}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 19801, "data_time": 0.02475, "stage0_loss_instance_mil": 0.02513, "stage0_bag_acc": 98.97199, "stage0_mean_ious": 0.18996, "stage0_s": 0.0, "stage0_m": 0.02545, "stage0_l": 0.08462, "stage0_h": 0.19946, "stage1_loss_instance_mil": 0.21693, "stage1_bag_acc": 99.05508, "stage1_neg_loss": 0.07165, "stage1_mean_ious": 0.16876, "stage1_s": 0.0, "stage1_m": 0.01611, "stage1_l": 0.06494, "stage1_h": 0.17915, "loss": 0.31371, "grad_norm": 8.42528, "time": 1.58547}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 19801, "data_time": 0.0249, "stage0_loss_instance_mil": 0.0273, "stage0_bag_acc": 98.19945, "stage0_mean_ious": 0.153, "stage0_s": 0.0015, "stage0_m": 0.03284, "stage0_l": 0.07453, "stage0_h": 0.15954, "stage1_loss_instance_mil": 0.22616, "stage1_bag_acc": 98.64745, "stage1_neg_loss": 0.07832, "stage1_mean_ious": 0.13373, "stage1_s": 0.00164, "stage1_m": 0.02188, "stage1_l": 0.05328, "stage1_h": 0.14249, "loss": 0.33178, "grad_norm": 10.36395, "time": 1.59889}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 19801, "data_time": 0.07397, "stage0_loss_instance_mil": 0.03542, "stage0_bag_acc": 97.95069, "stage0_mean_ious": 0.12688, "stage0_s": 0.0, "stage0_m": 0.03925, "stage0_l": 0.07817, "stage0_h": 0.12653, "stage1_loss_instance_mil": 0.21993, "stage1_bag_acc": 98.37627, "stage1_neg_loss": 0.07124, "stage1_mean_ious": 0.11168, "stage1_s": 0.0, "stage1_m": 0.02461, "stage1_l": 0.05881, "stage1_h": 0.1145, "loss": 0.32658, "grad_norm": 9.96955, "time": 1.63335}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 19801, "data_time": 0.02464, "stage0_loss_instance_mil": 0.0267, "stage0_bag_acc": 98.72545, "stage0_mean_ious": 0.15746, "stage0_s": 0.0, "stage0_m": 0.02617, "stage0_l": 0.10063, "stage0_h": 0.16179, "stage1_loss_instance_mil": 0.21374, "stage1_bag_acc": 99.2936, "stage1_neg_loss": 0.0736, "stage1_mean_ious": 0.14042, "stage1_s": 0.0, "stage1_m": 0.01566, "stage1_l": 0.07674, "stage1_h": 0.14654, "loss": 0.31403, "grad_norm": 9.21769, "time": 1.59942}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 19801, "data_time": 0.02472, "stage0_loss_instance_mil": 0.03241, "stage0_bag_acc": 98.14544, "stage0_mean_ious": 0.14851, "stage0_s": 0.0, "stage0_m": 0.01873, "stage0_l": 0.09008, "stage0_h": 0.15287, "stage1_loss_instance_mil": 0.20672, "stage1_bag_acc": 98.75946, "stage1_neg_loss": 0.07372, "stage1_mean_ious": 0.13049, "stage1_s": 0.0, "stage1_m": 0.01493, "stage1_l": 0.06819, "stage1_h": 0.13676, "loss": 0.31284, "grad_norm": 8.98835, "time": 1.58037}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.001, "bbox_mAP_50": 0.003, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.001 0.003 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 19801, "data_time": 0.07464, "stage0_loss_instance_mil": 0.01219, "stage0_bag_acc": 99.7395, "stage0_mean_ious": 0.13545, "stage0_s": 0.00193, "stage0_m": 0.02199, "stage0_l": 0.07411, "stage0_h": 0.1377, "stage1_loss_instance_mil": 0.19595, "stage1_bag_acc": 99.63214, "stage1_neg_loss": 0.06938, "stage1_mean_ious": 0.11624, "stage1_s": 0.00164, "stage1_m": 0.01404, "stage1_l": 0.05865, "stage1_h": 0.11976, "loss": 0.27751, "grad_norm": 8.62529, "time": 1.61748}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 19801, "data_time": 0.02434, "stage0_loss_instance_mil": 0.0113, "stage0_bag_acc": 99.44224, "stage0_mean_ious": 0.10618, "stage0_s": 0.0, "stage0_m": 0.03231, "stage0_l": 0.08354, "stage0_h": 0.10656, "stage1_loss_instance_mil": 0.19057, "stage1_bag_acc": 99.25108, "stage1_neg_loss": 0.06842, "stage1_mean_ious": 0.0958, "stage1_s": 0.0, "stage1_m": 0.02736, "stage1_l": 0.06395, "stage1_h": 0.0981, "loss": 0.27029, "grad_norm": 8.55298, "time": 1.55266}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 19801, "data_time": 0.0251, "stage0_loss_instance_mil": 0.0169, "stage0_bag_acc": 98.5437, "stage0_mean_ious": 0.08664, "stage0_s": 0.0, "stage0_m": 0.04312, "stage0_l": 0.09259, "stage0_h": 0.0831, "stage1_loss_instance_mil": 0.17968, "stage1_bag_acc": 99.05164, "stage1_neg_loss": 0.06893, "stage1_mean_ious": 0.07767, "stage1_s": 0.0, "stage1_m": 0.02979, "stage1_l": 0.0749, "stage1_h": 0.07688, "loss": 0.2655, "grad_norm": 7.78711, "time": 1.60777}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 19801, "data_time": 0.08019, "stage0_loss_instance_mil": 0.01381, "stage0_bag_acc": 99.12764, "stage0_mean_ious": 0.0854, "stage0_s": 0.0, "stage0_m": 0.03136, "stage0_l": 0.09303, "stage0_h": 0.07934, "stage1_loss_instance_mil": 0.17472, "stage1_bag_acc": 99.29402, "stage1_neg_loss": 0.06469, "stage1_mean_ious": 0.07795, "stage1_s": 0.0, "stage1_m": 0.0237, "stage1_l": 0.08401, "stage1_h": 0.07318, "loss": 0.25322, "grad_norm": 7.7498, "time": 1.6863}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 19801, "data_time": 0.02838, "stage0_loss_instance_mil": 0.00988, "stage0_bag_acc": 99.54167, "stage0_mean_ious": 0.09182, "stage0_s": 0.002, "stage0_m": 0.05401, "stage0_l": 0.09006, "stage0_h": 0.08481, "stage1_loss_instance_mil": 0.18009, "stage1_bag_acc": 99.68783, "stage1_neg_loss": 0.07013, "stage1_mean_ious": 0.08362, "stage1_s": 0.00161, "stage1_m": 0.03898, "stage1_l": 0.07111, "stage1_h": 0.08041, "loss": 0.2601, "grad_norm": 7.85695, "time": 1.60183}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 19801, "data_time": 0.02696, "stage0_loss_instance_mil": 0.0116, "stage0_bag_acc": 99.40279, "stage0_mean_ious": 0.08673, "stage0_s": 0.0, "stage0_m": 0.03237, "stage0_l": 0.11681, "stage0_h": 0.07754, "stage1_loss_instance_mil": 0.15321, "stage1_bag_acc": 99.675, "stage1_neg_loss": 0.06658, "stage1_mean_ious": 0.07861, "stage1_s": 0.0, "stage1_m": 0.0257, "stage1_l": 0.09754, "stage1_h": 0.07209, "loss": 0.2314, "grad_norm": 6.89844, "time": 1.57969}
{"mode": "val", "epoch": 8, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 19801, "data_time": 0.07448, "stage0_loss_instance_mil": 0.00758, "stage0_bag_acc": 99.55285, "stage0_mean_ious": 0.06553, "stage0_s": 0.0, "stage0_m": 0.042, "stage0_l": 0.09379, "stage0_h": 0.05444, "stage1_loss_instance_mil": 0.13552, "stage1_bag_acc": 99.67049, "stage1_neg_loss": 0.05665, "stage1_mean_ious": 0.05801, "stage1_s": 0.0, "stage1_m": 0.02668, "stage1_l": 0.07323, "stage1_h": 0.05099, "loss": 0.19975, "grad_norm": 5.29642, "time": 1.62037}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 19801, "data_time": 0.02534, "stage0_loss_instance_mil": 0.00649, "stage0_bag_acc": 99.76471, "stage0_mean_ious": 0.06088, "stage0_s": 0.0, "stage0_m": 0.03602, "stage0_l": 0.06929, "stage0_h": 0.05435, "stage1_loss_instance_mil": 0.1289, "stage1_bag_acc": 99.63971, "stage1_neg_loss": 0.06271, "stage1_mean_ious": 0.0557, "stage1_s": 0.0, "stage1_m": 0.02805, "stage1_l": 0.06081, "stage1_h": 0.05102, "loss": 0.1981, "grad_norm": 5.23134, "time": 1.59442}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 19801, "data_time": 0.02434, "stage0_loss_instance_mil": 0.01014, "stage0_bag_acc": 98.91725, "stage0_mean_ious": 0.06251, "stage0_s": 0.0, "stage0_m": 0.02699, "stage0_l": 0.07245, "stage0_h": 0.05578, "stage1_loss_instance_mil": 0.13161, "stage1_bag_acc": 99.40029, "stage1_neg_loss": 0.05405, "stage1_mean_ious": 0.05767, "stage1_s": 0.0, "stage1_m": 0.01924, "stage1_l": 0.06333, "stage1_h": 0.05287, "loss": 0.1958, "grad_norm": 4.86121, "time": 1.53976}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 19801, "data_time": 0.07525, "stage0_loss_instance_mil": 0.00541, "stage0_bag_acc": 99.44272, "stage0_mean_ious": 0.06361, "stage0_s": 0.0, "stage0_m": 0.03016, "stage0_l": 0.08394, "stage0_h": 0.05566, "stage1_loss_instance_mil": 0.12662, "stage1_bag_acc": 99.76389, "stage1_neg_loss": 0.0558, "stage1_mean_ious": 0.05766, "stage1_s": 0.0, "stage1_m": 0.02724, "stage1_l": 0.07342, "stage1_h": 0.05145, "loss": 0.18783, "grad_norm": 4.84041, "time": 1.58818}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 19801, "data_time": 0.02545, "stage0_loss_instance_mil": 0.00869, "stage0_bag_acc": 99.60669, "stage0_mean_ious": 0.06679, "stage0_s": 0.0, "stage0_m": 0.03921, "stage0_l": 0.08891, "stage0_h": 0.05921, "stage1_loss_instance_mil": 0.12412, "stage1_bag_acc": 99.60669, "stage1_neg_loss": 0.05674, "stage1_mean_ious": 0.06123, "stage1_s": 0.0, "stage1_m": 0.02564, "stage1_l": 0.07501, "stage1_h": 0.05604, "loss": 0.18955, "grad_norm": 4.85668, "time": 1.5811}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 19801, "data_time": 0.02516, "stage0_loss_instance_mil": 0.0046, "stage0_bag_acc": 99.80383, "stage0_mean_ious": 0.06792, "stage0_s": 0.00192, "stage0_m": 0.04785, "stage0_l": 0.09351, "stage0_h": 0.05802, "stage1_loss_instance_mil": 0.12196, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05458, "stage1_mean_ious": 0.06248, "stage1_s": 0.00157, "stage1_m": 0.03154, "stage1_l": 0.08257, "stage1_h": 0.05561, "loss": 0.18114, "grad_norm": 5.47626, "time": 1.59611}
