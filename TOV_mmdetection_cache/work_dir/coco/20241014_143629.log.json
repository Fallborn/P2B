{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=6,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18766, "data_time": 0.07861, "stage0_loss_instance_mil": 0.7089, "stage0_bag_acc": 17.05009, "stage0_mean_ious": 0.08433, "stage0_s": 0.0, "stage0_m": 0.01463, "stage0_l": 0.10043, "stage0_h": 0.07849, "stage1_loss_instance_mil": 0.16736, "stage1_bag_acc": 15.32954, "stage1_neg_loss": 0.00193, "stage1_mean_ious": 0.08176, "stage1_s": 0.0, "stage1_m": 0.01419, "stage1_l": 0.09775, "stage1_h": 0.07605, "loss": 0.87819, "grad_norm": 3.82882, "time": 1.79958}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18766, "data_time": 0.02738, "stage0_loss_instance_mil": 0.54981, "stage0_bag_acc": 55.40168, "stage0_mean_ious": 0.1072, "stage0_s": 0.0, "stage0_m": 0.02721, "stage0_l": 0.10667, "stage0_h": 0.10221, "stage1_loss_instance_mil": 0.2702, "stage1_bag_acc": 28.7622, "stage1_neg_loss": 0.00683, "stage1_mean_ious": 0.10335, "stage1_s": 0.0, "stage1_m": 0.02582, "stage1_l": 0.10694, "stage1_h": 0.09831, "loss": 0.82684, "grad_norm": 5.00524, "time": 1.692}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18766, "data_time": 0.02733, "stage0_loss_instance_mil": 0.28558, "stage0_bag_acc": 83.53314, "stage0_mean_ious": 0.10978, "stage0_s": 0.0, "stage0_m": 0.01579, "stage0_l": 0.12453, "stage0_h": 0.10628, "stage1_loss_instance_mil": 0.3619, "stage1_bag_acc": 79.63199, "stage1_neg_loss": 0.0629, "stage1_mean_ious": 0.10754, "stage1_s": 0.00028, "stage1_m": 0.01536, "stage1_l": 0.12681, "stage1_h": 0.10352, "loss": 0.71038, "grad_norm": 11.45851, "time": 1.74022}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18766, "data_time": 0.07677, "stage0_loss_instance_mil": 0.14486, "stage0_bag_acc": 94.04612, "stage0_mean_ious": 0.12831, "stage0_s": 0.0, "stage0_m": 0.02754, "stage0_l": 0.14214, "stage0_h": 0.12302, "stage1_loss_instance_mil": 0.35455, "stage1_bag_acc": 92.8617, "stage1_neg_loss": 0.092, "stage1_mean_ious": 0.12255, "stage1_s": 0.0, "stage1_m": 0.03081, "stage1_l": 0.13883, "stage1_h": 0.11611, "loss": 0.59141, "grad_norm": 14.19759, "time": 1.73881}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 2e-05, "memory": 18766, "data_time": 0.0278, "stage0_loss_instance_mil": 0.11076, "stage0_bag_acc": 93.2166, "stage0_mean_ious": 0.13183, "stage0_s": 0.0, "stage0_m": 0.03461, "stage0_l": 0.12234, "stage0_h": 0.13018, "stage1_loss_instance_mil": 0.3172, "stage1_bag_acc": 94.79652, "stage1_neg_loss": 0.08127, "stage1_mean_ious": 0.12741, "stage1_s": 0.00037, "stage1_m": 0.03756, "stage1_l": 0.12616, "stage1_h": 0.12433, "loss": 0.50923, "grad_norm": 12.4859, "time": 1.76133}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18766, "data_time": 0.02665, "stage0_loss_instance_mil": 0.07994, "stage0_bag_acc": 94.71651, "stage0_mean_ious": 0.138, "stage0_s": 0.0, "stage0_m": 0.02959, "stage0_l": 0.133, "stage0_h": 0.13492, "stage1_loss_instance_mil": 0.2774, "stage1_bag_acc": 96.28571, "stage1_neg_loss": 0.07519, "stage1_mean_ious": 0.13374, "stage1_s": 0.0, "stage1_m": 0.03169, "stage1_l": 0.13579, "stage1_h": 0.12942, "loss": 0.43253, "grad_norm": 13.0791, "time": 1.71712}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 3e-05, "memory": 18766, "data_time": 0.07954, "stage0_loss_instance_mil": 0.06853, "stage0_bag_acc": 96.14547, "stage0_mean_ious": 0.13549, "stage0_s": 0.0, "stage0_m": 0.02882, "stage0_l": 0.14835, "stage0_h": 0.13021, "stage1_loss_instance_mil": 0.23375, "stage1_bag_acc": 95.98164, "stage1_neg_loss": 0.08099, "stage1_mean_ious": 0.1292, "stage1_s": 0.0, "stage1_m": 0.02695, "stage1_l": 0.14682, "stage1_h": 0.12299, "loss": 0.38327, "grad_norm": 13.93128, "time": 1.76885}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 4e-05, "memory": 18766, "data_time": 0.02789, "stage0_loss_instance_mil": 0.07308, "stage0_bag_acc": 95.55275, "stage0_mean_ious": 0.13579, "stage0_s": 0.0, "stage0_m": 0.03137, "stage0_l": 0.13027, "stage0_h": 0.13376, "stage1_loss_instance_mil": 0.2232, "stage1_bag_acc": 96.36818, "stage1_neg_loss": 0.06874, "stage1_mean_ious": 0.13146, "stage1_s": 0.0, "stage1_m": 0.03118, "stage1_l": 0.12828, "stage1_h": 0.12864, "loss": 0.36501, "grad_norm": 13.00436, "time": 1.7597}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 4e-05, "memory": 18766, "data_time": 0.03053, "stage0_loss_instance_mil": 0.06399, "stage0_bag_acc": 96.10215, "stage0_mean_ious": 0.13723, "stage0_s": 0.0, "stage0_m": 0.03128, "stage0_l": 0.12402, "stage0_h": 0.13581, "stage1_loss_instance_mil": 0.21167, "stage1_bag_acc": 96.59025, "stage1_neg_loss": 0.07459, "stage1_mean_ious": 0.13013, "stage1_s": 0.0, "stage1_m": 0.03183, "stage1_l": 0.12407, "stage1_h": 0.12715, "loss": 0.35024, "grad_norm": 13.00992, "time": 1.73923}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18766, "data_time": 0.07803, "stage0_loss_instance_mil": 0.06046, "stage0_bag_acc": 96.02392, "stage0_mean_ious": 0.1374, "stage0_s": 0.0, "stage0_m": 0.03362, "stage0_l": 0.14179, "stage0_h": 0.13531, "stage1_loss_instance_mil": 0.19616, "stage1_bag_acc": 97.75983, "stage1_neg_loss": 0.06397, "stage1_mean_ious": 0.1308, "stage1_s": 0.0, "stage1_m": 0.0336, "stage1_l": 0.14793, "stage1_h": 0.12674, "loss": 0.32058, "grad_norm": 14.22116, "time": 1.79588}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18766, "data_time": 0.02627, "stage0_loss_instance_mil": 0.05282, "stage0_bag_acc": 95.80477, "stage0_mean_ious": 0.14265, "stage0_s": 0.0, "stage0_m": 0.04074, "stage0_l": 0.15844, "stage0_h": 0.1368, "stage1_loss_instance_mil": 0.16365, "stage1_bag_acc": 97.19676, "stage1_neg_loss": 0.05996, "stage1_mean_ious": 0.13674, "stage1_s": 0.0, "stage1_m": 0.04322, "stage1_l": 0.15706, "stage1_h": 0.12966, "loss": 0.27644, "grad_norm": 11.23998, "time": 1.71967}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18766, "data_time": 0.02726, "stage0_loss_instance_mil": 0.05501, "stage0_bag_acc": 95.79015, "stage0_mean_ious": 0.13677, "stage0_s": 0.0, "stage0_m": 0.02955, "stage0_l": 0.13709, "stage0_h": 0.13269, "stage1_loss_instance_mil": 0.18936, "stage1_bag_acc": 97.21983, "stage1_neg_loss": 0.0749, "stage1_mean_ious": 0.1308, "stage1_s": 0.0, "stage1_m": 0.02817, "stage1_l": 0.1349, "stage1_h": 0.12641, "loss": 0.31927, "grad_norm": 13.62826, "time": 1.74085}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18766, "data_time": 0.08027, "stage0_loss_instance_mil": 0.03622, "stage0_bag_acc": 97.90714, "stage0_mean_ious": 0.13577, "stage0_s": 0.0, "stage0_m": 0.05012, "stage0_l": 0.15229, "stage0_h": 0.12871, "stage1_loss_instance_mil": 0.14872, "stage1_bag_acc": 98.24606, "stage1_neg_loss": 0.05714, "stage1_mean_ious": 0.13057, "stage1_s": 0.0, "stage1_m": 0.05394, "stage1_l": 0.15565, "stage1_h": 0.12105, "loss": 0.24208, "grad_norm": 9.30947, "time": 1.82175}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18766, "data_time": 0.02828, "stage0_loss_instance_mil": 0.04337, "stage0_bag_acc": 97.33038, "stage0_mean_ious": 0.14114, "stage0_s": 0.0, "stage0_m": 0.02545, "stage0_l": 0.14782, "stage0_h": 0.13717, "stage1_loss_instance_mil": 0.1369, "stage1_bag_acc": 98.10183, "stage1_neg_loss": 0.0524, "stage1_mean_ious": 0.13328, "stage1_s": 0.0, "stage1_m": 0.02325, "stage1_l": 0.14587, "stage1_h": 0.12868, "loss": 0.23267, "grad_norm": 9.07456, "time": 1.74711}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18766, "data_time": 0.02649, "stage0_loss_instance_mil": 0.03365, "stage0_bag_acc": 97.54701, "stage0_mean_ious": 0.1369, "stage0_s": 0.0, "stage0_m": 0.03339, "stage0_l": 0.1497, "stage0_h": 0.13095, "stage1_loss_instance_mil": 0.15232, "stage1_bag_acc": 98.81763, "stage1_neg_loss": 0.06168, "stage1_mean_ious": 0.1293, "stage1_s": 0.0, "stage1_m": 0.02821, "stage1_l": 0.14327, "stage1_h": 0.12383, "loss": 0.24765, "grad_norm": 12.02809, "time": 1.73018}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18766, "data_time": 0.07541, "stage0_loss_instance_mil": 0.04515, "stage0_bag_acc": 97.16831, "stage0_mean_ious": 0.14063, "stage0_s": 0.001, "stage0_m": 0.02403, "stage0_l": 0.14378, "stage0_h": 0.13601, "stage1_loss_instance_mil": 0.13918, "stage1_bag_acc": 97.67202, "stage1_neg_loss": 0.05461, "stage1_mean_ious": 0.13556, "stage1_s": 0.00176, "stage1_m": 0.02606, "stage1_l": 0.14758, "stage1_h": 0.12957, "loss": 0.23894, "grad_norm": 9.76788, "time": 1.79434}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18766, "data_time": 0.02588, "stage0_loss_instance_mil": 0.03242, "stage0_bag_acc": 97.74588, "stage0_mean_ious": 0.14532, "stage0_s": 0.0, "stage0_m": 0.03665, "stage0_l": 0.16341, "stage0_h": 0.14036, "stage1_loss_instance_mil": 0.12969, "stage1_bag_acc": 99.05306, "stage1_neg_loss": 0.05281, "stage1_mean_ious": 0.13752, "stage1_s": 0.0, "stage1_m": 0.03993, "stage1_l": 0.16161, "stage1_h": 0.13144, "loss": 0.21492, "grad_norm": 9.42095, "time": 1.73537}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18766, "data_time": 0.02648, "stage0_loss_instance_mil": 0.02972, "stage0_bag_acc": 97.64365, "stage0_mean_ious": 0.14102, "stage0_s": 0.0, "stage0_m": 0.03526, "stage0_l": 0.15713, "stage0_h": 0.13358, "stage1_loss_instance_mil": 0.13523, "stage1_bag_acc": 99.12038, "stage1_neg_loss": 0.05134, "stage1_mean_ious": 0.13714, "stage1_s": 0.0, "stage1_m": 0.03895, "stage1_l": 0.15361, "stage1_h": 0.12866, "loss": 0.21629, "grad_norm": 8.7552, "time": 1.73983}
{"mode": "val", "epoch": 6, "iter": 150, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.016, "bbox_mAP_50": 0.063, "bbox_mAP_75": 0.025, "bbox_mAP_s": 0.011, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.016 0.063 0.025 0.011 0.005 0.002"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18767, "data_time": 0.08133, "stage0_loss_instance_mil": 0.03447, "stage0_bag_acc": 97.42856, "stage0_mean_ious": 0.13468, "stage0_s": 0.0, "stage0_m": 0.04464, "stage0_l": 0.15267, "stage0_h": 0.12889, "stage1_loss_instance_mil": 0.13174, "stage1_bag_acc": 98.4446, "stage1_neg_loss": 0.05027, "stage1_mean_ious": 0.13237, "stage1_s": 0.0, "stage1_m": 0.05, "stage1_l": 0.15735, "stage1_h": 0.12451, "loss": 0.21648, "grad_norm": 8.03332, "time": 1.78435}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18767, "data_time": 0.03158, "stage0_loss_instance_mil": 0.02458, "stage0_bag_acc": 98.52249, "stage0_mean_ious": 0.13849, "stage0_s": 0.00146, "stage0_m": 0.02253, "stage0_l": 0.17571, "stage0_h": 0.12812, "stage1_loss_instance_mil": 0.13015, "stage1_bag_acc": 99.11791, "stage1_neg_loss": 0.05212, "stage1_mean_ious": 0.13373, "stage1_s": 0.00161, "stage1_m": 0.02621, "stage1_l": 0.17899, "stage1_h": 0.1214, "loss": 0.20685, "grad_norm": 9.07474, "time": 1.78429}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18767, "data_time": 0.02952, "stage0_loss_instance_mil": 0.02885, "stage0_bag_acc": 98.47325, "stage0_mean_ious": 0.13887, "stage0_s": 0.0, "stage0_m": 0.04299, "stage0_l": 0.16527, "stage0_h": 0.12841, "stage1_loss_instance_mil": 0.13301, "stage1_bag_acc": 98.0015, "stage1_neg_loss": 0.05187, "stage1_mean_ious": 0.13728, "stage1_s": 0.0, "stage1_m": 0.05108, "stage1_l": 0.16665, "stage1_h": 0.12491, "loss": 0.21373, "grad_norm": 9.82704, "time": 1.71472}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18767, "data_time": 0.07841, "stage0_loss_instance_mil": 0.02692, "stage0_bag_acc": 97.96466, "stage0_mean_ious": 0.13755, "stage0_s": 0.0, "stage0_m": 0.05312, "stage0_l": 0.15789, "stage0_h": 0.12981, "stage1_loss_instance_mil": 0.11373, "stage1_bag_acc": 98.42393, "stage1_neg_loss": 0.05312, "stage1_mean_ious": 0.13566, "stage1_s": 0.0, "stage1_m": 0.0574, "stage1_l": 0.16646, "stage1_h": 0.12557, "loss": 0.19377, "grad_norm": 8.53674, "time": 1.78227}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18767, "data_time": 0.02865, "stage0_loss_instance_mil": 0.01518, "stage0_bag_acc": 99.29194, "stage0_mean_ious": 0.14247, "stage0_s": 0.0, "stage0_m": 0.07417, "stage0_l": 0.17807, "stage0_h": 0.13108, "stage1_loss_instance_mil": 0.11926, "stage1_bag_acc": 99.39789, "stage1_neg_loss": 0.05156, "stage1_mean_ious": 0.1408, "stage1_s": 0.0, "stage1_m": 0.07619, "stage1_l": 0.18728, "stage1_h": 0.127, "loss": 0.186, "grad_norm": 8.57325, "time": 1.7456}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18767, "data_time": 0.02724, "stage0_loss_instance_mil": 0.03606, "stage0_bag_acc": 97.99813, "stage0_mean_ious": 0.13268, "stage0_s": 0.0, "stage0_m": 0.03831, "stage0_l": 0.15302, "stage0_h": 0.12461, "stage1_loss_instance_mil": 0.11447, "stage1_bag_acc": 98.28152, "stage1_neg_loss": 0.048, "stage1_mean_ious": 0.12991, "stage1_s": 0.0, "stage1_m": 0.04293, "stage1_l": 0.15997, "stage1_h": 0.12014, "loss": 0.19853, "grad_norm": 8.85115, "time": 1.76071}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18767, "data_time": 0.07846, "stage0_loss_instance_mil": 0.0192, "stage0_bag_acc": 98.79522, "stage0_mean_ious": 0.13829, "stage0_s": 0.0, "stage0_m": 0.03829, "stage0_l": 0.14064, "stage0_h": 0.13087, "stage1_loss_instance_mil": 0.10799, "stage1_bag_acc": 98.60859, "stage1_neg_loss": 0.04339, "stage1_mean_ious": 0.13487, "stage1_s": 0.0, "stage1_m": 0.04197, "stage1_l": 0.1439, "stage1_h": 0.12595, "loss": 0.17058, "grad_norm": 6.82136, "time": 1.81659}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18767, "data_time": 0.02701, "stage0_loss_instance_mil": 0.01345, "stage0_bag_acc": 99.1367, "stage0_mean_ious": 0.13907, "stage0_s": 0.0, "stage0_m": 0.04229, "stage0_l": 0.16999, "stage0_h": 0.12844, "stage1_loss_instance_mil": 0.10038, "stage1_bag_acc": 99.62807, "stage1_neg_loss": 0.04395, "stage1_mean_ious": 0.13585, "stage1_s": 0.0, "stage1_m": 0.0451, "stage1_l": 0.17891, "stage1_h": 0.12302, "loss": 0.15778, "grad_norm": 5.79959, "time": 1.72059}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18767, "data_time": 0.02744, "stage0_loss_instance_mil": 0.01028, "stage0_bag_acc": 99.48661, "stage0_mean_ious": 0.1306, "stage0_s": 0.00156, "stage0_m": 0.02224, "stage0_l": 0.16199, "stage0_h": 0.12197, "stage1_loss_instance_mil": 0.09018, "stage1_bag_acc": 99.58092, "stage1_neg_loss": 0.04082, "stage1_mean_ious": 0.12695, "stage1_s": 0.00175, "stage1_m": 0.02488, "stage1_l": 0.16589, "stage1_h": 0.11702, "loss": 0.14128, "grad_norm": 5.43632, "time": 1.75735}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18767, "data_time": 0.07572, "stage0_loss_instance_mil": 0.0113, "stage0_bag_acc": 99.21987, "stage0_mean_ious": 0.12535, "stage0_s": 0.0, "stage0_m": 0.03396, "stage0_l": 0.15634, "stage0_h": 0.11668, "stage1_loss_instance_mil": 0.09303, "stage1_bag_acc": 99.76471, "stage1_neg_loss": 0.04256, "stage1_mean_ious": 0.12374, "stage1_s": 0.0, "stage1_m": 0.04016, "stage1_l": 0.16128, "stage1_h": 0.11292, "loss": 0.14688, "grad_norm": 5.45807, "time": 1.80436}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18767, "data_time": 0.02677, "stage0_loss_instance_mil": 0.01341, "stage0_bag_acc": 99.4709, "stage0_mean_ious": 0.13884, "stage0_s": 0.0, "stage0_m": 0.04825, "stage0_l": 0.16839, "stage0_h": 0.12937, "stage1_loss_instance_mil": 0.09102, "stage1_bag_acc": 99.52632, "stage1_neg_loss": 0.04, "stage1_mean_ious": 0.13529, "stage1_s": 0.0, "stage1_m": 0.05204, "stage1_l": 0.1673, "stage1_h": 0.12453, "loss": 0.14443, "grad_norm": 5.35692, "time": 1.74578}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18767, "data_time": 0.02823, "stage0_loss_instance_mil": 0.01225, "stage0_bag_acc": 99.12164, "stage0_mean_ious": 0.14135, "stage0_s": 0.00122, "stage0_m": 0.06799, "stage0_l": 0.15045, "stage0_h": 0.13065, "stage1_loss_instance_mil": 0.08593, "stage1_bag_acc": 99.36523, "stage1_neg_loss": 0.04036, "stage1_mean_ious": 0.13912, "stage1_s": 0.00137, "stage1_m": 0.07676, "stage1_l": 0.16038, "stage1_h": 0.12543, "loss": 0.13854, "grad_norm": 5.05553, "time": 1.77964}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18767, "data_time": 0.07698, "stage0_loss_instance_mil": 0.01036, "stage0_bag_acc": 99.24214, "stage0_mean_ious": 0.13397, "stage0_s": 0.0, "stage0_m": 0.04945, "stage0_l": 0.14045, "stage0_h": 0.1265, "stage1_loss_instance_mil": 0.08738, "stage1_bag_acc": 99.7395, "stage1_neg_loss": 0.04038, "stage1_mean_ious": 0.13072, "stage1_s": 0.0, "stage1_m": 0.05098, "stage1_l": 0.1443, "stage1_h": 0.12251, "loss": 0.13812, "grad_norm": 4.987, "time": 1.78678}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18767, "data_time": 0.02812, "stage0_loss_instance_mil": 0.01611, "stage0_bag_acc": 98.98861, "stage0_mean_ious": 0.13484, "stage0_s": 0.0, "stage0_m": 0.04759, "stage0_l": 0.13437, "stage0_h": 0.12874, "stage1_loss_instance_mil": 0.08726, "stage1_bag_acc": 99.42873, "stage1_neg_loss": 0.04216, "stage1_mean_ious": 0.13082, "stage1_s": 0.0, "stage1_m": 0.05166, "stage1_l": 0.13903, "stage1_h": 0.12278, "loss": 0.14553, "grad_norm": 5.71885, "time": 1.76415}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18767, "data_time": 0.02747, "stage0_loss_instance_mil": 0.00762, "stage0_bag_acc": 99.73548, "stage0_mean_ious": 0.13329, "stage0_s": 0.00113, "stage0_m": 0.05428, "stage0_l": 0.15692, "stage0_h": 0.12323, "stage1_loss_instance_mil": 0.08859, "stage1_bag_acc": 99.55485, "stage1_neg_loss": 0.04281, "stage1_mean_ious": 0.13179, "stage1_s": 0.00136, "stage1_m": 0.06082, "stage1_l": 0.15799, "stage1_h": 0.12014, "loss": 0.13903, "grad_norm": 6.08927, "time": 1.72473}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18767, "data_time": 0.07922, "stage0_loss_instance_mil": 0.00954, "stage0_bag_acc": 99.52991, "stage0_mean_ious": 0.13311, "stage0_s": 0.0, "stage0_m": 0.0417, "stage0_l": 0.16337, "stage0_h": 0.12192, "stage1_loss_instance_mil": 0.08814, "stage1_bag_acc": 99.44296, "stage1_neg_loss": 0.03819, "stage1_mean_ious": 0.13019, "stage1_s": 0.0, "stage1_m": 0.04714, "stage1_l": 0.16567, "stage1_h": 0.11705, "loss": 0.13588, "grad_norm": 5.33496, "time": 1.80547}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18767, "data_time": 0.02637, "stage0_loss_instance_mil": 0.01169, "stage0_bag_acc": 99.43247, "stage0_mean_ious": 0.13045, "stage0_s": 0.0, "stage0_m": 0.03473, "stage0_l": 0.13367, "stage0_h": 0.1237, "stage1_loss_instance_mil": 0.08842, "stage1_bag_acc": 99.16465, "stage1_neg_loss": 0.04297, "stage1_mean_ious": 0.12711, "stage1_s": 0.0, "stage1_m": 0.0341, "stage1_l": 0.13933, "stage1_h": 0.11845, "loss": 0.14309, "grad_norm": 5.42209, "time": 1.70116}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18767, "data_time": 0.0273, "stage0_loss_instance_mil": 0.00665, "stage0_bag_acc": 99.82066, "stage0_mean_ious": 0.13584, "stage0_s": 0.0, "stage0_m": 0.02882, "stage0_l": 0.15511, "stage0_h": 0.12663, "stage1_loss_instance_mil": 0.08854, "stage1_bag_acc": 99.85714, "stage1_neg_loss": 0.03965, "stage1_mean_ious": 0.13301, "stage1_s": 0.0, "stage1_m": 0.03292, "stage1_l": 0.15571, "stage1_h": 0.12193, "loss": 0.13484, "grad_norm": 5.25414, "time": 1.74479}
{"mode": "val", "epoch": 12, "iter": 150, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.016, "bbox_mAP_50": 0.058, "bbox_mAP_75": 0.026, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.006, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.016 0.058 0.026 0.010 0.006 0.003"}
