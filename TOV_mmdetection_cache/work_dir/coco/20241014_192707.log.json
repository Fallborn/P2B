{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18735, "data_time": 0.07554, "stage0_loss_instance_mil": 0.71352, "stage0_bag_acc": 20.9942, "stage0_mean_ious": 0.28278, "stage0_s": 0.0, "stage0_m": 0.06428, "stage0_l": 0.27625, "stage0_h": 0.27897, "stage1_loss_instance_mil": 0.16335, "stage1_bag_acc": 23.82784, "stage1_neg_loss": 0.00152, "stage1_mean_ious": 0.26815, "stage1_s": 0.0, "stage1_m": 0.0608, "stage1_l": 0.25799, "stage1_h": 0.26452, "loss": 0.87839, "grad_norm": 3.28639, "time": 1.78744}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18735, "data_time": 0.02716, "stage0_loss_instance_mil": 0.5575, "stage0_bag_acc": 64.72187, "stage0_mean_ious": 0.43762, "stage0_s": 0.0, "stage0_m": 0.03418, "stage0_l": 0.27795, "stage0_h": 0.4507, "stage1_loss_instance_mil": 0.24546, "stage1_bag_acc": 33.96424, "stage1_neg_loss": 0.00829, "stage1_mean_ious": 0.40507, "stage1_s": 0.0, "stage1_m": 0.03704, "stage1_l": 0.26528, "stage1_h": 0.417, "loss": 0.81125, "grad_norm": 4.23333, "time": 1.74734}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18735, "data_time": 0.02794, "stage0_loss_instance_mil": 0.19909, "stage0_bag_acc": 94.40385, "stage0_mean_ious": 0.43218, "stage0_s": 0.0, "stage0_m": 0.03649, "stage0_l": 0.29003, "stage0_h": 0.44543, "stage1_loss_instance_mil": 0.32296, "stage1_bag_acc": 86.86735, "stage1_neg_loss": 0.08299, "stage1_mean_ious": 0.40331, "stage1_s": 0.0, "stage1_m": 0.03209, "stage1_l": 0.28066, "stage1_h": 0.41434, "loss": 0.60503, "grad_norm": 12.89861, "time": 1.77087}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18735, "data_time": 0.07517, "stage0_loss_instance_mil": 0.06341, "stage0_bag_acc": 96.61833, "stage0_mean_ious": 0.38542, "stage0_s": 0.0, "stage0_m": 0.02686, "stage0_l": 0.18707, "stage0_h": 0.40456, "stage1_loss_instance_mil": 0.31781, "stage1_bag_acc": 97.95363, "stage1_neg_loss": 0.10521, "stage1_mean_ious": 0.36221, "stage1_s": 0.0, "stage1_m": 0.0235, "stage1_l": 0.16072, "stage1_h": 0.38312, "loss": 0.48644, "grad_norm": 21.72584, "time": 1.78549}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18735, "data_time": 0.02771, "stage0_loss_instance_mil": 0.05163, "stage0_bag_acc": 96.10699, "stage0_mean_ious": 0.39661, "stage0_s": 0.0, "stage0_m": 0.08165, "stage0_l": 0.19744, "stage0_h": 0.42481, "stage1_loss_instance_mil": 0.30777, "stage1_bag_acc": 97.64511, "stage1_neg_loss": 0.08704, "stage1_mean_ious": 0.36538, "stage1_s": 0.0, "stage1_m": 0.05975, "stage1_l": 0.1846, "stage1_h": 0.39357, "loss": 0.44645, "grad_norm": 13.86764, "time": 1.7711}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18735, "data_time": 0.02727, "stage0_loss_instance_mil": 0.04402, "stage0_bag_acc": 97.56866, "stage0_mean_ious": 0.40168, "stage0_s": 0.0, "stage0_m": 0.02762, "stage0_l": 0.20202, "stage0_h": 0.42632, "stage1_loss_instance_mil": 0.28784, "stage1_bag_acc": 98.12081, "stage1_neg_loss": 0.09781, "stage1_mean_ious": 0.37246, "stage1_s": 0.0, "stage1_m": 0.02129, "stage1_l": 0.18679, "stage1_h": 0.39694, "loss": 0.42968, "grad_norm": 18.84223, "time": 1.77791}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18735, "data_time": 0.07749, "stage0_loss_instance_mil": 0.05673, "stage0_bag_acc": 96.49879, "stage0_mean_ious": 0.40718, "stage0_s": 0.0, "stage0_m": 0.05112, "stage0_l": 0.19235, "stage0_h": 0.43749, "stage1_loss_instance_mil": 0.27447, "stage1_bag_acc": 97.58786, "stage1_neg_loss": 0.0939, "stage1_mean_ious": 0.37202, "stage1_s": 0.0, "stage1_m": 0.03345, "stage1_l": 0.17659, "stage1_h": 0.401, "loss": 0.4251, "grad_norm": 18.45523, "time": 1.81043}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18735, "data_time": 0.02724, "stage0_loss_instance_mil": 0.02492, "stage0_bag_acc": 98.47658, "stage0_mean_ious": 0.41162, "stage0_s": 0.0, "stage0_m": 0.06458, "stage0_l": 0.14748, "stage0_h": 0.44045, "stage1_loss_instance_mil": 0.23141, "stage1_bag_acc": 98.94198, "stage1_neg_loss": 0.07322, "stage1_mean_ious": 0.38394, "stage1_s": 0.0, "stage1_m": 0.04918, "stage1_l": 0.12738, "stage1_h": 0.4122, "loss": 0.32955, "grad_norm": 12.18452, "time": 1.73258}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18735, "data_time": 0.02651, "stage0_loss_instance_mil": 0.03306, "stage0_bag_acc": 98.73149, "stage0_mean_ious": 0.36839, "stage0_s": 0.0, "stage0_m": 0.03365, "stage0_l": 0.18002, "stage0_h": 0.39373, "stage1_loss_instance_mil": 0.25044, "stage1_bag_acc": 98.53189, "stage1_neg_loss": 0.07398, "stage1_mean_ious": 0.34091, "stage1_s": 0.0, "stage1_m": 0.01978, "stage1_l": 0.16756, "stage1_h": 0.36656, "loss": 0.35748, "grad_norm": 14.08681, "time": 1.74123}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.112, "bbox_mAP_50": 0.321, "bbox_mAP_75": 0.206, "bbox_mAP_s": 0.095, "bbox_mAP_m": 0.054, "bbox_mAP_l": 0.021, "bbox_mAP_copypaste": "0.112 0.321 0.206 0.095 0.054 0.021"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18735, "data_time": 0.07641, "stage0_loss_instance_mil": 0.02503, "stage0_bag_acc": 98.8385, "stage0_mean_ious": 0.41557, "stage0_s": 0.0, "stage0_m": 0.06016, "stage0_l": 0.19599, "stage0_h": 0.44867, "stage1_loss_instance_mil": 0.20433, "stage1_bag_acc": 98.96247, "stage1_neg_loss": 0.06372, "stage1_mean_ious": 0.38751, "stage1_s": 0.0, "stage1_m": 0.04395, "stage1_l": 0.18215, "stage1_h": 0.41915, "loss": 0.29307, "grad_norm": 13.04442, "time": 1.78311}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18735, "data_time": 0.02472, "stage0_loss_instance_mil": 0.03246, "stage0_bag_acc": 98.03077, "stage0_mean_ious": 0.35506, "stage0_s": 0.0, "stage0_m": 0.03111, "stage0_l": 0.15543, "stage0_h": 0.38049, "stage1_loss_instance_mil": 0.23458, "stage1_bag_acc": 98.11955, "stage1_neg_loss": 0.07329, "stage1_mean_ious": 0.32763, "stage1_s": 0.0, "stage1_m": 0.01791, "stage1_l": 0.14057, "stage1_h": 0.35296, "loss": 0.34033, "grad_norm": 14.11762, "time": 1.71972}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18735, "data_time": 0.02591, "stage0_loss_instance_mil": 0.02582, "stage0_bag_acc": 98.20461, "stage0_mean_ious": 0.3758, "stage0_s": 0.0, "stage0_m": 0.04429, "stage0_l": 0.21583, "stage0_h": 0.39851, "stage1_loss_instance_mil": 0.20438, "stage1_bag_acc": 98.99887, "stage1_neg_loss": 0.07724, "stage1_mean_ious": 0.35181, "stage1_s": 0.0, "stage1_m": 0.02746, "stage1_l": 0.19454, "stage1_h": 0.37591, "loss": 0.30744, "grad_norm": 14.44262, "time": 1.70955}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18735, "data_time": 0.07401, "stage0_loss_instance_mil": 0.02271, "stage0_bag_acc": 98.70964, "stage0_mean_ious": 0.42082, "stage0_s": 0.0, "stage0_m": 0.02912, "stage0_l": 0.19764, "stage0_h": 0.45933, "stage1_loss_instance_mil": 0.15249, "stage1_bag_acc": 99.13491, "stage1_neg_loss": 0.05978, "stage1_mean_ious": 0.38077, "stage1_s": 0.0, "stage1_m": 0.01867, "stage1_l": 0.17899, "stage1_h": 0.41598, "loss": 0.23498, "grad_norm": 8.83793, "time": 1.74787}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18735, "data_time": 0.02599, "stage0_loss_instance_mil": 0.01199, "stage0_bag_acc": 99.22797, "stage0_mean_ious": 0.4488, "stage0_s": 0.0, "stage0_m": 0.03681, "stage0_l": 0.1778, "stage0_h": 0.48151, "stage1_loss_instance_mil": 0.14266, "stage1_bag_acc": 99.13775, "stage1_neg_loss": 0.05634, "stage1_mean_ious": 0.41266, "stage1_s": 0.0, "stage1_m": 0.0261, "stage1_l": 0.14593, "stage1_h": 0.44565, "loss": 0.21099, "grad_norm": 10.24346, "time": 1.7594}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18735, "data_time": 0.02717, "stage0_loss_instance_mil": 0.0135, "stage0_bag_acc": 99.01418, "stage0_mean_ious": 0.44805, "stage0_s": 0.0, "stage0_m": 0.04948, "stage0_l": 0.18214, "stage0_h": 0.48244, "stage1_loss_instance_mil": 0.15687, "stage1_bag_acc": 99.30229, "stage1_neg_loss": 0.05985, "stage1_mean_ious": 0.41509, "stage1_s": 0.0, "stage1_m": 0.03159, "stage1_l": 0.17136, "stage1_h": 0.44727, "loss": 0.23022, "grad_norm": 12.96561, "time": 1.76736}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18735, "data_time": 0.07705, "stage0_loss_instance_mil": 0.01146, "stage0_bag_acc": 99.71781, "stage0_mean_ious": 0.43112, "stage0_s": 0.0, "stage0_m": 0.03779, "stage0_l": 0.19758, "stage0_h": 0.47052, "stage1_loss_instance_mil": 0.12453, "stage1_bag_acc": 99.6067, "stage1_neg_loss": 0.04848, "stage1_mean_ious": 0.40045, "stage1_s": 0.0, "stage1_m": 0.02167, "stage1_l": 0.19407, "stage1_h": 0.43738, "loss": 0.18446, "grad_norm": 10.73513, "time": 1.85016}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18735, "data_time": 0.02718, "stage0_loss_instance_mil": 0.00722, "stage0_bag_acc": 99.55556, "stage0_mean_ious": 0.43191, "stage0_s": 0.0, "stage0_m": 0.02852, "stage0_l": 0.20366, "stage0_h": 0.46052, "stage1_loss_instance_mil": 0.11597, "stage1_bag_acc": 99.32611, "stage1_neg_loss": 0.04981, "stage1_mean_ious": 0.40038, "stage1_s": 0.0, "stage1_m": 0.01638, "stage1_l": 0.20606, "stage1_h": 0.42639, "loss": 0.173, "grad_norm": 9.11653, "time": 1.74902}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18735, "data_time": 0.02659, "stage0_loss_instance_mil": 0.00944, "stage0_bag_acc": 99.57356, "stage0_mean_ious": 0.4117, "stage0_s": 0.00797, "stage0_m": 0.02391, "stage0_l": 0.20052, "stage0_h": 0.43413, "stage1_loss_instance_mil": 0.12952, "stage1_bag_acc": 99.12001, "stage1_neg_loss": 0.05639, "stage1_mean_ious": 0.38607, "stage1_s": 0.00487, "stage1_m": 0.01335, "stage1_l": 0.1845, "stage1_h": 0.4091, "loss": 0.19536, "grad_norm": 10.33037, "time": 1.718}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.133, "bbox_mAP_50": 0.34, "bbox_mAP_75": 0.259, "bbox_mAP_s": 0.129, "bbox_mAP_m": 0.072, "bbox_mAP_l": 0.03, "bbox_mAP_copypaste": "0.133 0.340 0.259 0.129 0.072 0.030"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18735, "data_time": 0.07758, "stage0_loss_instance_mil": 0.01692, "stage0_bag_acc": 99.47725, "stage0_mean_ious": 0.46766, "stage0_s": 0.0, "stage0_m": 0.02759, "stage0_l": 0.17576, "stage0_h": 0.50008, "stage1_loss_instance_mil": 0.11554, "stage1_bag_acc": 99.37806, "stage1_neg_loss": 0.04235, "stage1_mean_ious": 0.42853, "stage1_s": 0.0, "stage1_m": 0.01514, "stage1_l": 0.16694, "stage1_h": 0.45851, "loss": 0.17481, "grad_norm": 8.81414, "time": 1.80067}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18735, "data_time": 0.02786, "stage0_loss_instance_mil": 0.00503, "stage0_bag_acc": 99.7395, "stage0_mean_ious": 0.42628, "stage0_s": 0.0, "stage0_m": 0.03954, "stage0_l": 0.18992, "stage0_h": 0.46634, "stage1_loss_instance_mil": 0.10013, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04712, "stage1_mean_ious": 0.39258, "stage1_s": 0.0, "stage1_m": 0.02485, "stage1_l": 0.17683, "stage1_h": 0.42936, "loss": 0.15229, "grad_norm": 8.46793, "time": 1.73904}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18735, "data_time": 0.02491, "stage0_loss_instance_mil": 0.00422, "stage0_bag_acc": 99.80889, "stage0_mean_ious": 0.46971, "stage0_s": 0.0, "stage0_m": 0.04477, "stage0_l": 0.21639, "stage0_h": 0.50325, "stage1_loss_instance_mil": 0.09363, "stage1_bag_acc": 99.6014, "stage1_neg_loss": 0.04811, "stage1_mean_ious": 0.42457, "stage1_s": 0.0, "stage1_m": 0.02952, "stage1_l": 0.20075, "stage1_h": 0.45517, "loss": 0.14596, "grad_norm": 9.15046, "time": 1.67723}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18735, "data_time": 0.07793, "stage0_loss_instance_mil": 0.00671, "stage0_bag_acc": 99.55685, "stage0_mean_ious": 0.48763, "stage0_s": 0.0, "stage0_m": 0.02397, "stage0_l": 0.19844, "stage0_h": 0.52813, "stage1_loss_instance_mil": 0.09528, "stage1_bag_acc": 99.34748, "stage1_neg_loss": 0.04242, "stage1_mean_ious": 0.4407, "stage1_s": 0.0, "stage1_m": 0.01549, "stage1_l": 0.18114, "stage1_h": 0.47849, "loss": 0.14441, "grad_norm": 8.38422, "time": 1.75312}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18735, "data_time": 0.03258, "stage0_loss_instance_mil": 0.01125, "stage0_bag_acc": 99.3962, "stage0_mean_ious": 0.42471, "stage0_s": 0.0, "stage0_m": 0.05118, "stage0_l": 0.23354, "stage0_h": 0.46238, "stage1_loss_instance_mil": 0.0884, "stage1_bag_acc": 99.43029, "stage1_neg_loss": 0.04299, "stage1_mean_ious": 0.38582, "stage1_s": 0.0, "stage1_m": 0.0356, "stage1_l": 0.22462, "stage1_h": 0.41979, "loss": 0.14264, "grad_norm": 8.33225, "time": 1.75931}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18735, "data_time": 0.03057, "stage0_loss_instance_mil": 0.024, "stage0_bag_acc": 98.14564, "stage0_mean_ious": 0.48037, "stage0_s": 0.0, "stage0_m": 0.03778, "stage0_l": 0.15261, "stage0_h": 0.52673, "stage1_loss_instance_mil": 0.10534, "stage1_bag_acc": 98.77775, "stage1_neg_loss": 0.04704, "stage1_mean_ious": 0.43204, "stage1_s": 0.0, "stage1_m": 0.0354, "stage1_l": 0.12865, "stage1_h": 0.47539, "loss": 0.17638, "grad_norm": 9.93946, "time": 1.73586}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18735, "data_time": 0.07666, "stage0_loss_instance_mil": 0.01083, "stage0_bag_acc": 99.34404, "stage0_mean_ious": 0.48069, "stage0_s": 0.0, "stage0_m": 0.03675, "stage0_l": 0.2412, "stage0_h": 0.51588, "stage1_loss_instance_mil": 0.08041, "stage1_bag_acc": 99.4652, "stage1_neg_loss": 0.03464, "stage1_mean_ious": 0.44305, "stage1_s": 0.0, "stage1_m": 0.02095, "stage1_l": 0.21666, "stage1_h": 0.4771, "loss": 0.12588, "grad_norm": 5.94261, "time": 1.76609}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.02688, "stage0_loss_instance_mil": 0.00715, "stage0_bag_acc": 99.58056, "stage0_mean_ious": 0.45359, "stage0_s": 0.0, "stage0_m": 0.05745, "stage0_l": 0.22376, "stage0_h": 0.48439, "stage1_loss_instance_mil": 0.07507, "stage1_bag_acc": 99.55929, "stage1_neg_loss": 0.04098, "stage1_mean_ious": 0.41393, "stage1_s": 0.0, "stage1_m": 0.04563, "stage1_l": 0.21532, "stage1_h": 0.44275, "loss": 0.1232, "grad_norm": 6.09008, "time": 1.71956}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.02813, "stage0_loss_instance_mil": 0.00566, "stage0_bag_acc": 99.57093, "stage0_mean_ious": 0.46648, "stage0_s": 0.0, "stage0_m": 0.02242, "stage0_l": 0.20107, "stage0_h": 0.49829, "stage1_loss_instance_mil": 0.07016, "stage1_bag_acc": 99.7995, "stage1_neg_loss": 0.03344, "stage1_mean_ious": 0.42985, "stage1_s": 0.0, "stage1_m": 0.01833, "stage1_l": 0.19225, "stage1_h": 0.45807, "loss": 0.10926, "grad_norm": 5.21705, "time": 1.76333}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.143, "bbox_mAP_50": 0.369, "bbox_mAP_75": 0.265, "bbox_mAP_s": 0.139, "bbox_mAP_m": 0.083, "bbox_mAP_l": 0.033, "bbox_mAP_copypaste": "0.143 0.369 0.265 0.139 0.083 0.033"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.07574, "stage0_loss_instance_mil": 0.00466, "stage0_bag_acc": 99.75524, "stage0_mean_ious": 0.45977, "stage0_s": 0.0, "stage0_m": 0.02855, "stage0_l": 0.18695, "stage0_h": 0.49777, "stage1_loss_instance_mil": 0.06569, "stage1_bag_acc": 99.73217, "stage1_neg_loss": 0.02957, "stage1_mean_ious": 0.42209, "stage1_s": 0.0, "stage1_m": 0.02288, "stage1_l": 0.18764, "stage1_h": 0.45509, "loss": 0.09992, "grad_norm": 4.54155, "time": 1.79214}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.02699, "stage0_loss_instance_mil": 0.00394, "stage0_bag_acc": 99.80383, "stage0_mean_ious": 0.4715, "stage0_s": 0.00791, "stage0_m": 0.03774, "stage0_l": 0.21855, "stage0_h": 0.50789, "stage1_loss_instance_mil": 0.07222, "stage1_bag_acc": 99.28174, "stage1_neg_loss": 0.03619, "stage1_mean_ious": 0.42572, "stage1_s": 0.0053, "stage1_m": 0.02206, "stage1_l": 0.20311, "stage1_h": 0.45981, "loss": 0.11235, "grad_norm": 5.3771, "time": 1.74782}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.02686, "stage0_loss_instance_mil": 0.00392, "stage0_bag_acc": 99.79167, "stage0_mean_ious": 0.45359, "stage0_s": 0.0, "stage0_m": 0.01494, "stage0_l": 0.22298, "stage0_h": 0.47571, "stage1_loss_instance_mil": 0.06477, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03513, "stage1_mean_ious": 0.41723, "stage1_s": 0.0, "stage1_m": 0.00899, "stage1_l": 0.21258, "stage1_h": 0.43732, "loss": 0.10382, "grad_norm": 5.26165, "time": 1.71694}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.07687, "stage0_loss_instance_mil": 0.00411, "stage0_bag_acc": 99.74615, "stage0_mean_ious": 0.42706, "stage0_s": 0.0, "stage0_m": 0.04009, "stage0_l": 0.19041, "stage0_h": 0.46946, "stage1_loss_instance_mil": 0.06603, "stage1_bag_acc": 99.73913, "stage1_neg_loss": 0.03359, "stage1_mean_ious": 0.38882, "stage1_s": 0.0, "stage1_m": 0.02586, "stage1_l": 0.18657, "stage1_h": 0.42862, "loss": 0.10373, "grad_norm": 4.93999, "time": 1.79271}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.02758, "stage0_loss_instance_mil": 0.00255, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.50339, "stage0_s": 0.0, "stage0_m": 0.04324, "stage0_l": 0.2461, "stage0_h": 0.53749, "stage1_loss_instance_mil": 0.05603, "stage1_bag_acc": 99.67124, "stage1_neg_loss": 0.03372, "stage1_mean_ious": 0.46347, "stage1_s": 0.0, "stage1_m": 0.03018, "stage1_l": 0.23428, "stage1_h": 0.49383, "loss": 0.0923, "grad_norm": 5.11753, "time": 1.75198}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.02691, "stage0_loss_instance_mil": 0.00125, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.47025, "stage0_s": 0.0, "stage0_m": 0.03674, "stage0_l": 0.24165, "stage0_h": 0.49874, "stage1_loss_instance_mil": 0.05769, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02924, "stage1_mean_ious": 0.43096, "stage1_s": 0.0, "stage1_m": 0.03113, "stage1_l": 0.22636, "stage1_h": 0.45584, "loss": 0.08819, "grad_norm": 4.89351, "time": 1.73965}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18742, "data_time": 0.07575, "stage0_loss_instance_mil": 0.00116, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.46689, "stage0_s": 0.0, "stage0_m": 0.05585, "stage0_l": 0.20638, "stage0_h": 0.499, "stage1_loss_instance_mil": 0.06208, "stage1_bag_acc": 99.86437, "stage1_neg_loss": 0.02805, "stage1_mean_ious": 0.43179, "stage1_s": 0.0, "stage1_m": 0.03716, "stage1_l": 0.19739, "stage1_h": 0.46131, "loss": 0.09129, "grad_norm": 4.6228, "time": 1.77415}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18742, "data_time": 0.02615, "stage0_loss_instance_mil": 0.0113, "stage0_bag_acc": 99.47643, "stage0_mean_ious": 0.48727, "stage0_s": 0.0, "stage0_m": 0.03472, "stage0_l": 0.26477, "stage0_h": 0.51502, "stage1_loss_instance_mil": 0.05869, "stage1_bag_acc": 99.35143, "stage1_neg_loss": 0.02908, "stage1_mean_ious": 0.45111, "stage1_s": 0.0, "stage1_m": 0.02138, "stage1_l": 0.2603, "stage1_h": 0.4751, "loss": 0.09907, "grad_norm": 4.75302, "time": 1.74799}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18742, "data_time": 0.02703, "stage0_loss_instance_mil": 0.00186, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.48279, "stage0_s": 0.0, "stage0_m": 0.03967, "stage0_l": 0.20583, "stage0_h": 0.51939, "stage1_loss_instance_mil": 0.06146, "stage1_bag_acc": 99.79365, "stage1_neg_loss": 0.03932, "stage1_mean_ious": 0.43971, "stage1_s": 0.0, "stage1_m": 0.02648, "stage1_l": 0.19562, "stage1_h": 0.47197, "loss": 0.10264, "grad_norm": 5.46288, "time": 1.73872}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.145, "bbox_mAP_50": 0.374, "bbox_mAP_75": 0.269, "bbox_mAP_s": 0.143, "bbox_mAP_m": 0.085, "bbox_mAP_l": 0.03, "bbox_mAP_copypaste": "0.145 0.374 0.269 0.143 0.085 0.030"}
