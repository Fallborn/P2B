{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+963dd25", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=12,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 16687, "data_time": 0.08037, "stage0_loss_instance_mil": 0.6409, "stage0_bag_acc": 31.4713, "stage0_mean_ious": 0.2367, "stage0_s": 0.0, "stage0_m": 0.03095, "stage0_l": 0.20547, "stage0_h": 0.23979, "stage1_loss_instance_mil": 0.18192, "stage1_bag_acc": 20.68654, "stage1_neg_loss": 0.01206, "stage1_mean_ious": 0.22226, "stage1_s": 0.0, "stage1_m": 0.02999, "stage1_l": 0.18911, "stage1_h": 0.22579, "loss": 0.83488, "grad_norm": 4.01362, "time": 1.52251}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 16687, "data_time": 0.02746, "stage0_loss_instance_mil": 0.35266, "stage0_bag_acc": 69.46582, "stage0_mean_ious": 0.43328, "stage0_s": 0.0, "stage0_m": 0.02643, "stage0_l": 0.18416, "stage0_h": 0.4577, "stage1_loss_instance_mil": 0.28521, "stage1_bag_acc": 61.66391, "stage1_neg_loss": 0.04401, "stage1_mean_ious": 0.41451, "stage1_s": 0.0, "stage1_m": 0.03306, "stage1_l": 0.1863, "stage1_h": 0.43612, "loss": 0.68188, "grad_norm": 5.4477, "time": 1.254}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 16734, "data_time": 0.02958, "stage0_loss_instance_mil": 0.18105, "stage0_bag_acc": 87.98586, "stage0_mean_ious": 0.4163, "stage0_s": 0.0, "stage0_m": 0.02958, "stage0_l": 0.23099, "stage0_h": 0.44475, "stage1_loss_instance_mil": 0.31077, "stage1_bag_acc": 76.49195, "stage1_neg_loss": 0.06254, "stage1_mean_ious": 0.41434, "stage1_s": 0.0, "stage1_m": 0.03381, "stage1_l": 0.23132, "stage1_h": 0.44174, "loss": 0.55436, "grad_norm": 6.12133, "time": 1.39195}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00917, "memory": 16734, "data_time": 0.08912, "stage0_loss_instance_mil": 0.17063, "stage0_bag_acc": 87.73524, "stage0_mean_ious": 0.43366, "stage0_s": 0.0, "stage0_m": 0.03074, "stage0_l": 0.19663, "stage0_h": 0.47206, "stage1_loss_instance_mil": 0.22843, "stage1_bag_acc": 79.35493, "stage1_neg_loss": 0.06008, "stage1_mean_ious": 0.43602, "stage1_s": 0.0, "stage1_m": 0.03049, "stage1_l": 0.20386, "stage1_h": 0.47364, "loss": 0.45914, "grad_norm": 5.22539, "time": 1.51748}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.01117, "memory": 16734, "data_time": 0.02877, "stage0_loss_instance_mil": 0.19872, "stage0_bag_acc": 88.59183, "stage0_mean_ious": 0.3711, "stage0_s": 0.0, "stage0_m": 0.02806, "stage0_l": 0.18418, "stage0_h": 0.40279, "stage1_loss_instance_mil": 0.25838, "stage1_bag_acc": 72.14209, "stage1_neg_loss": 0.03784, "stage1_mean_ious": 0.37378, "stage1_s": 0.0, "stage1_m": 0.02738, "stage1_l": 0.17643, "stage1_h": 0.40736, "loss": 0.49494, "grad_norm": 3.76175, "time": 1.29938}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.01317, "memory": 16734, "data_time": 0.02794, "stage0_loss_instance_mil": 0.24305, "stage0_bag_acc": 83.88271, "stage0_mean_ious": 0.38313, "stage0_s": 0.0, "stage0_m": 0.0452, "stage0_l": 0.22803, "stage0_h": 0.40116, "stage1_loss_instance_mil": 0.32544, "stage1_bag_acc": 69.69507, "stage1_neg_loss": 0.04993, "stage1_mean_ious": 0.39499, "stage1_s": 0.0, "stage1_m": 0.05568, "stage1_l": 0.25352, "stage1_h": 0.41085, "loss": 0.61843, "grad_norm": 4.99843, "time": 1.25006}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.01636, "memory": 16734, "data_time": 0.082, "stage0_loss_instance_mil": 0.40348, "stage0_bag_acc": 65.51591, "stage0_mean_ious": 0.34618, "stage0_s": 0.0, "stage0_m": 0.03156, "stage0_l": 0.2713, "stage0_h": 0.34587, "stage1_loss_instance_mil": 0.22535, "stage1_bag_acc": 64.79198, "stage1_neg_loss": 0.03765, "stage1_mean_ious": 0.34502, "stage1_s": 0.0, "stage1_m": 0.03019, "stage1_l": 0.27206, "stage1_h": 0.34473, "loss": 0.66648, "grad_norm": 4.01411, "time": 1.38598}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.01836, "memory": 16734, "data_time": 0.03092, "stage0_loss_instance_mil": 0.29067, "stage0_bag_acc": 77.56121, "stage0_mean_ious": 0.34386, "stage0_s": 0.0, "stage0_m": 0.09684, "stage0_l": 0.25446, "stage0_h": 0.34542, "stage1_loss_instance_mil": 0.27571, "stage1_bag_acc": 70.91388, "stage1_neg_loss": 0.05385, "stage1_mean_ious": 0.3463, "stage1_s": 0.0, "stage1_m": 0.08594, "stage1_l": 0.26264, "stage1_h": 0.34807, "loss": 0.62023, "grad_norm": 3.0614, "time": 1.21852}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.02, "memory": 16734, "data_time": 0.03017, "stage0_loss_instance_mil": 0.28369, "stage0_bag_acc": 78.18364, "stage0_mean_ious": 0.39588, "stage0_s": 0.0, "stage0_m": 0.04744, "stage0_l": 0.23091, "stage0_h": 0.40781, "stage1_loss_instance_mil": 0.23, "stage1_bag_acc": 70.28447, "stage1_neg_loss": 0.04261, "stage1_mean_ious": 0.40621, "stage1_s": 0.0, "stage1_m": 0.04963, "stage1_l": 0.24673, "stage1_h": 0.41662, "loss": 0.5563, "grad_norm": 2.79133, "time": 1.24467}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.02, "memory": 16734, "data_time": 0.08116, "stage0_loss_instance_mil": 0.2476, "stage0_bag_acc": 80.79953, "stage0_mean_ious": 0.42473, "stage0_s": 0.0, "stage0_m": 0.02934, "stage0_l": 0.25424, "stage0_h": 0.44351, "stage1_loss_instance_mil": 0.18222, "stage1_bag_acc": 80.01331, "stage1_neg_loss": 0.03883, "stage1_mean_ious": 0.43076, "stage1_s": 0.0, "stage1_m": 0.02867, "stage1_l": 0.3015, "stage1_h": 0.44377, "loss": 0.46865, "grad_norm": 2.64956, "time": 1.44862}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.02, "memory": 16734, "data_time": 0.03133, "stage0_loss_instance_mil": 0.33103, "stage0_bag_acc": 72.11823, "stage0_mean_ious": 0.39044, "stage0_s": 0.0, "stage0_m": 0.01246, "stage0_l": 0.20592, "stage0_h": 0.41508, "stage1_loss_instance_mil": 0.23606, "stage1_bag_acc": 58.24768, "stage1_neg_loss": 0.06077, "stage1_mean_ious": 0.40304, "stage1_s": 0.0, "stage1_m": 0.01187, "stage1_l": 0.22252, "stage1_h": 0.42593, "loss": 0.62786, "grad_norm": 4.10174, "time": 1.48182}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.02, "memory": 16734, "data_time": 0.03081, "stage0_loss_instance_mil": 0.22059, "stage0_bag_acc": 84.24907, "stage0_mean_ious": 0.42174, "stage0_s": 0.0, "stage0_m": 0.02347, "stage0_l": 0.1888, "stage0_h": 0.4527, "stage1_loss_instance_mil": 0.1723, "stage1_bag_acc": 79.4466, "stage1_neg_loss": 0.03882, "stage1_mean_ious": 0.42122, "stage1_s": 0.0, "stage1_m": 0.02562, "stage1_l": 0.19958, "stage1_h": 0.4487, "loss": 0.43171, "grad_norm": 2.86904, "time": 1.46791}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.02, "memory": 16734, "data_time": 0.08309, "stage0_loss_instance_mil": 0.15105, "stage0_bag_acc": 91.30902, "stage0_mean_ious": 0.41939, "stage0_s": 0.0, "stage0_m": 0.04074, "stage0_l": 0.21281, "stage0_h": 0.45829, "stage1_loss_instance_mil": 0.18307, "stage1_bag_acc": 86.39407, "stage1_neg_loss": 0.0514, "stage1_mean_ious": 0.41765, "stage1_s": 0.0, "stage1_m": 0.04035, "stage1_l": 0.21894, "stage1_h": 0.45453, "loss": 0.38551, "grad_norm": 2.95457, "time": 1.55779}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.02, "memory": 16734, "data_time": 0.03059, "stage0_loss_instance_mil": 0.13775, "stage0_bag_acc": 91.08745, "stage0_mean_ious": 0.45992, "stage0_s": 0.0, "stage0_m": 0.01702, "stage0_l": 0.24185, "stage0_h": 0.48297, "stage1_loss_instance_mil": 0.16128, "stage1_bag_acc": 84.76212, "stage1_neg_loss": 0.04429, "stage1_mean_ious": 0.46734, "stage1_s": 0.0, "stage1_m": 0.01759, "stage1_l": 0.26253, "stage1_h": 0.48854, "loss": 0.34331, "grad_norm": 2.74433, "time": 1.44087}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.02, "memory": 16734, "data_time": 0.03456, "stage0_loss_instance_mil": 0.143, "stage0_bag_acc": 89.62173, "stage0_mean_ious": 0.48434, "stage0_s": 0.0, "stage0_m": 0.00711, "stage0_l": 0.20631, "stage0_h": 0.52392, "stage1_loss_instance_mil": 0.1482, "stage1_bag_acc": 82.43089, "stage1_neg_loss": 0.03804, "stage1_mean_ious": 0.49125, "stage1_s": 0.0, "stage1_m": 0.00742, "stage1_l": 0.22118, "stage1_h": 0.52838, "loss": 0.32925, "grad_norm": 2.44634, "time": 1.50186}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.02, "memory": 16734, "data_time": 0.08374, "stage0_loss_instance_mil": 0.11374, "stage0_bag_acc": 92.27687, "stage0_mean_ious": 0.49252, "stage0_s": 0.0, "stage0_m": 0.01825, "stage0_l": 0.23356, "stage0_h": 0.53077, "stage1_loss_instance_mil": 0.10776, "stage1_bag_acc": 90.96916, "stage1_neg_loss": 0.04176, "stage1_mean_ious": 0.50189, "stage1_s": 0.0, "stage1_m": 0.02154, "stage1_l": 0.25569, "stage1_h": 0.538, "loss": 0.26326, "grad_norm": 2.33973, "time": 1.53047}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.02, "memory": 16734, "data_time": 0.03236, "stage0_loss_instance_mil": 0.13771, "stage0_bag_acc": 90.04876, "stage0_mean_ious": 0.48898, "stage0_s": 0.0, "stage0_m": 0.03022, "stage0_l": 0.20902, "stage0_h": 0.52323, "stage1_loss_instance_mil": 0.10782, "stage1_bag_acc": 89.36287, "stage1_neg_loss": 0.05481, "stage1_mean_ious": 0.4917, "stage1_s": 0.0, "stage1_m": 0.03191, "stage1_l": 0.2198, "stage1_h": 0.5236, "loss": 0.30035, "grad_norm": 2.87181, "time": 1.46929}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.02, "memory": 16734, "data_time": 0.03305, "stage0_loss_instance_mil": 0.1669, "stage0_bag_acc": 87.87124, "stage0_mean_ious": 0.50061, "stage0_s": 0.0, "stage0_m": 0.03452, "stage0_l": 0.2783, "stage0_h": 0.53204, "stage1_loss_instance_mil": 0.18405, "stage1_bag_acc": 76.69398, "stage1_neg_loss": 0.02934, "stage1_mean_ious": 0.51843, "stage1_s": 0.0, "stage1_m": 0.04141, "stage1_l": 0.31075, "stage1_h": 0.54595, "loss": 0.38029, "grad_norm": 1.97417, "time": 1.48716}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.02, "memory": 16734, "data_time": 0.08547, "stage0_loss_instance_mil": 0.10666, "stage0_bag_acc": 92.57978, "stage0_mean_ious": 0.48273, "stage0_s": 0.0, "stage0_m": 0.02582, "stage0_l": 0.27582, "stage0_h": 0.51596, "stage1_loss_instance_mil": 0.09051, "stage1_bag_acc": 92.63947, "stage1_neg_loss": 0.04081, "stage1_mean_ious": 0.49937, "stage1_s": 0.0, "stage1_m": 0.0322, "stage1_l": 0.29618, "stage1_h": 0.52972, "loss": 0.23798, "grad_norm": 2.19447, "time": 1.55165}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.02, "memory": 16734, "data_time": 0.03137, "stage0_loss_instance_mil": 0.07806, "stage0_bag_acc": 94.7822, "stage0_mean_ious": 0.47657, "stage0_s": 0.0, "stage0_m": 0.01904, "stage0_l": 0.23725, "stage0_h": 0.50091, "stage1_loss_instance_mil": 0.11021, "stage1_bag_acc": 90.76696, "stage1_neg_loss": 0.03592, "stage1_mean_ious": 0.4921, "stage1_s": 0.0, "stage1_m": 0.02286, "stage1_l": 0.24973, "stage1_h": 0.51593, "loss": 0.22419, "grad_norm": 1.87626, "time": 1.49196}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.02, "memory": 16734, "data_time": 0.03262, "stage0_loss_instance_mil": 0.05055, "stage0_bag_acc": 97.15235, "stage0_mean_ious": 0.47211, "stage0_s": 0.0, "stage0_m": 0.03126, "stage0_l": 0.2911, "stage0_h": 0.49761, "stage1_loss_instance_mil": 0.11, "stage1_bag_acc": 95.06572, "stage1_neg_loss": 0.03833, "stage1_mean_ious": 0.48525, "stage1_s": 0.0, "stage1_m": 0.0385, "stage1_l": 0.32793, "stage1_h": 0.5059, "loss": 0.19888, "grad_norm": 1.81621, "time": 1.49913}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.02, "memory": 16734, "data_time": 0.08861, "stage0_loss_instance_mil": 0.09293, "stage0_bag_acc": 93.59817, "stage0_mean_ious": 0.49441, "stage0_s": 0.0, "stage0_m": 0.04517, "stage0_l": 0.26514, "stage0_h": 0.52724, "stage1_loss_instance_mil": 0.06585, "stage1_bag_acc": 94.16251, "stage1_neg_loss": 0.03854, "stage1_mean_ious": 0.4996, "stage1_s": 0.0, "stage1_m": 0.05392, "stage1_l": 0.30169, "stage1_h": 0.52613, "loss": 0.19732, "grad_norm": 2.19793, "time": 1.53333}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.02, "memory": 16734, "data_time": 0.0296, "stage0_loss_instance_mil": 0.11143, "stage0_bag_acc": 93.24429, "stage0_mean_ious": 0.45859, "stage0_s": 0.0, "stage0_m": 0.04896, "stage0_l": 0.26025, "stage0_h": 0.48473, "stage1_loss_instance_mil": 0.11652, "stage1_bag_acc": 92.90627, "stage1_neg_loss": 0.05082, "stage1_mean_ious": 0.46681, "stage1_s": 0.0, "stage1_m": 0.06066, "stage1_l": 0.29126, "stage1_h": 0.48907, "loss": 0.27878, "grad_norm": 2.62674, "time": 1.49166}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.02, "memory": 16734, "data_time": 0.02783, "stage0_loss_instance_mil": 0.10358, "stage0_bag_acc": 93.23233, "stage0_mean_ious": 0.45199, "stage0_s": 0.0, "stage0_m": 0.01487, "stage0_l": 0.28373, "stage0_h": 0.47499, "stage1_loss_instance_mil": 0.23422, "stage1_bag_acc": 83.5231, "stage1_neg_loss": 0.03693, "stage1_mean_ious": 0.46245, "stage1_s": 0.0, "stage1_m": 0.01645, "stage1_l": 0.32931, "stage1_h": 0.47806, "loss": 0.37474, "grad_norm": 2.18527, "time": 1.45356}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.002, "memory": 16742, "data_time": 0.08824, "stage0_loss_instance_mil": 0.04844, "stage0_bag_acc": 96.50733, "stage0_mean_ious": 0.49252, "stage0_s": 0.00116, "stage0_m": 0.02099, "stage0_l": 0.2545, "stage0_h": 0.52235, "stage1_loss_instance_mil": 0.14584, "stage1_bag_acc": 86.11939, "stage1_neg_loss": 0.04075, "stage1_mean_ious": 0.49797, "stage1_s": 0.00128, "stage1_m": 0.02683, "stage1_l": 0.29695, "stage1_h": 0.52053, "loss": 0.23502, "grad_norm": 1.87503, "time": 1.555}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.002, "memory": 16742, "data_time": 0.02883, "stage0_loss_instance_mil": 0.04063, "stage0_bag_acc": 97.02109, "stage0_mean_ious": 0.48771, "stage0_s": 0.0, "stage0_m": 0.02109, "stage0_l": 0.29193, "stage0_h": 0.51274, "stage1_loss_instance_mil": 0.07724, "stage1_bag_acc": 96.09098, "stage1_neg_loss": 0.0348, "stage1_mean_ious": 0.4972, "stage1_s": 0.0, "stage1_m": 0.02496, "stage1_l": 0.32012, "stage1_h": 0.51843, "loss": 0.15267, "grad_norm": 1.48962, "time": 1.49074}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.002, "memory": 16742, "data_time": 0.0272, "stage0_loss_instance_mil": 0.03994, "stage0_bag_acc": 97.06494, "stage0_mean_ious": 0.49736, "stage0_s": 0.0, "stage0_m": 0.03014, "stage0_l": 0.25888, "stage0_h": 0.52412, "stage1_loss_instance_mil": 0.07221, "stage1_bag_acc": 97.65254, "stage1_neg_loss": 0.0407, "stage1_mean_ious": 0.50666, "stage1_s": 0.0, "stage1_m": 0.03911, "stage1_l": 0.27618, "stage1_h": 0.53124, "loss": 0.15285, "grad_norm": 1.52284, "time": 1.41854}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.002, "memory": 16742, "data_time": 0.08095, "stage0_loss_instance_mil": 0.03427, "stage0_bag_acc": 97.25418, "stage0_mean_ious": 0.49246, "stage0_s": 0.0, "stage0_m": 0.04501, "stage0_l": 0.27538, "stage0_h": 0.52115, "stage1_loss_instance_mil": 0.06216, "stage1_bag_acc": 97.89244, "stage1_neg_loss": 0.03, "stage1_mean_ious": 0.49445, "stage1_s": 0.0, "stage1_m": 0.05281, "stage1_l": 0.29376, "stage1_h": 0.51868, "loss": 0.12643, "grad_norm": 1.29942, "time": 1.51857}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.002, "memory": 16742, "data_time": 0.02651, "stage0_loss_instance_mil": 0.02857, "stage0_bag_acc": 98.1965, "stage0_mean_ious": 0.4856, "stage0_s": 0.0, "stage0_m": 0.02308, "stage0_l": 0.25594, "stage0_h": 0.52073, "stage1_loss_instance_mil": 0.05779, "stage1_bag_acc": 97.13553, "stage1_neg_loss": 0.03169, "stage1_mean_ious": 0.49418, "stage1_s": 0.0, "stage1_m": 0.01964, "stage1_l": 0.30802, "stage1_h": 0.52207, "loss": 0.11805, "grad_norm": 1.36268, "time": 1.41811}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.002, "memory": 16742, "data_time": 0.02895, "stage0_loss_instance_mil": 0.02989, "stage0_bag_acc": 97.92765, "stage0_mean_ious": 0.50423, "stage0_s": 0.0, "stage0_m": 0.01238, "stage0_l": 0.27273, "stage0_h": 0.53469, "stage1_loss_instance_mil": 0.05538, "stage1_bag_acc": 98.51487, "stage1_neg_loss": 0.02812, "stage1_mean_ious": 0.50808, "stage1_s": 0.0, "stage1_m": 0.0167, "stage1_l": 0.30785, "stage1_h": 0.5329, "loss": 0.1134, "grad_norm": 1.19373, "time": 1.4867}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.002, "memory": 16742, "data_time": 0.07297, "stage0_loss_instance_mil": 0.0276, "stage0_bag_acc": 98.1986, "stage0_mean_ious": 0.49039, "stage0_s": 0.0, "stage0_m": 0.05841, "stage0_l": 0.2554, "stage0_h": 0.52416, "stage1_loss_instance_mil": 0.05208, "stage1_bag_acc": 98.21514, "stage1_neg_loss": 0.02614, "stage1_mean_ious": 0.49685, "stage1_s": 0.0, "stage1_m": 0.0546, "stage1_l": 0.29857, "stage1_h": 0.52553, "loss": 0.10583, "grad_norm": 1.23297, "time": 1.26708}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.002, "memory": 16742, "data_time": 0.02528, "stage0_loss_instance_mil": 0.0296, "stage0_bag_acc": 98.00385, "stage0_mean_ious": 0.49379, "stage0_s": 0.0, "stage0_m": 0.02553, "stage0_l": 0.24287, "stage0_h": 0.52603, "stage1_loss_instance_mil": 0.04856, "stage1_bag_acc": 98.10082, "stage1_neg_loss": 0.03268, "stage1_mean_ious": 0.50151, "stage1_s": 0.0, "stage1_m": 0.02959, "stage1_l": 0.2751, "stage1_h": 0.5293, "loss": 0.11083, "grad_norm": 1.28721, "time": 1.20922}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.002, "memory": 16742, "data_time": 0.02576, "stage0_loss_instance_mil": 0.01864, "stage0_bag_acc": 98.8015, "stage0_mean_ious": 0.50797, "stage0_s": 0.0, "stage0_m": 0.03705, "stage0_l": 0.22285, "stage0_h": 0.53914, "stage1_loss_instance_mil": 0.05075, "stage1_bag_acc": 98.86684, "stage1_neg_loss": 0.02739, "stage1_mean_ious": 0.5137, "stage1_s": 0.0, "stage1_m": 0.03484, "stage1_l": 0.24641, "stage1_h": 0.54175, "loss": 0.09678, "grad_norm": 1.10228, "time": 1.22044}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0002, "memory": 16742, "data_time": 0.07472, "stage0_loss_instance_mil": 0.02391, "stage0_bag_acc": 98.07266, "stage0_mean_ious": 0.51488, "stage0_s": 0.00116, "stage0_m": 0.03125, "stage0_l": 0.22274, "stage0_h": 0.5394, "stage1_loss_instance_mil": 0.04539, "stage1_bag_acc": 98.7085, "stage1_neg_loss": 0.03359, "stage1_mean_ious": 0.52101, "stage1_s": 0.0013, "stage1_m": 0.02841, "stage1_l": 0.25425, "stage1_h": 0.5421, "loss": 0.10289, "grad_norm": 1.27285, "time": 1.33497}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0002, "memory": 16742, "data_time": 0.02925, "stage0_loss_instance_mil": 0.02262, "stage0_bag_acc": 98.69952, "stage0_mean_ious": 0.49955, "stage0_s": 0.0, "stage0_m": 0.0126, "stage0_l": 0.27204, "stage0_h": 0.52849, "stage1_loss_instance_mil": 0.04269, "stage1_bag_acc": 98.4665, "stage1_neg_loss": 0.0308, "stage1_mean_ious": 0.50634, "stage1_s": 0.0, "stage1_m": 0.01201, "stage1_l": 0.30395, "stage1_h": 0.53114, "loss": 0.09611, "grad_norm": 1.20031, "time": 1.44552}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0002, "memory": 16742, "data_time": 0.02978, "stage0_loss_instance_mil": 0.0201, "stage0_bag_acc": 98.69487, "stage0_mean_ious": 0.50389, "stage0_s": 0.0, "stage0_m": 0.02274, "stage0_l": 0.26147, "stage0_h": 0.5335, "stage1_loss_instance_mil": 0.0448, "stage1_bag_acc": 98.95954, "stage1_neg_loss": 0.02907, "stage1_mean_ious": 0.51293, "stage1_s": 0.0, "stage1_m": 0.02791, "stage1_l": 0.29742, "stage1_h": 0.53779, "loss": 0.09397, "grad_norm": 1.12689, "time": 1.45888}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0002, "eval_iter_num": 90, "bbox_mAP": 0.131, "bbox_mAP_50": 0.425, "bbox_mAP_75": 0.241, "bbox_mAP_s": 0.089, "bbox_mAP_m": 0.042, "bbox_mAP_l": 0.017, "bbox_mAP_copypaste": "0.131 0.425 0.241 0.089 0.042 0.017"}
