{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07887, "stage0_loss_instance_mil": 0.6883, "stage0_bag_acc": 35.13101, "stage0_mean_ious": 0.22051, "stage0_s": 0.0, "stage0_m": 0.04994, "stage0_l": 0.2219, "stage0_h": 0.2117, "stage1_loss_instance_mil": 0.18276, "stage1_bag_acc": 19.50373, "stage1_neg_loss": 0.00119, "stage1_mean_ious": 0.22808, "stage1_s": 0.0, "stage1_m": 0.04957, "stage1_l": 0.23402, "stage1_h": 0.21887, "loss": 0.87225, "grad_norm": 3.29012, "time": 1.74481}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02745, "stage0_loss_instance_mil": 0.5685, "stage0_bag_acc": 58.57839, "stage0_mean_ious": 0.26755, "stage0_s": 0.0, "stage0_m": 0.07121, "stage0_l": 0.27329, "stage0_h": 0.25256, "stage1_loss_instance_mil": 0.24419, "stage1_bag_acc": 38.59117, "stage1_neg_loss": 0.005, "stage1_mean_ious": 0.2807, "stage1_s": 0.0, "stage1_m": 0.05415, "stage1_l": 0.27656, "stage1_h": 0.2684, "loss": 0.81769, "grad_norm": 4.98821, "time": 1.74561}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02732, "stage0_loss_instance_mil": 0.27127, "stage0_bag_acc": 85.29471, "stage0_mean_ious": 0.24848, "stage0_s": 0.0, "stage0_m": 0.03711, "stage0_l": 0.22217, "stage0_h": 0.24402, "stage1_loss_instance_mil": 0.32303, "stage1_bag_acc": 76.127, "stage1_neg_loss": 0.07231, "stage1_mean_ious": 0.24792, "stage1_s": 0.0, "stage1_m": 0.02933, "stage1_l": 0.21174, "stage1_h": 0.24533, "loss": 0.66661, "grad_norm": 13.50731, "time": 1.69206}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18833, "data_time": 0.07909, "stage0_loss_instance_mil": 0.0841, "stage0_bag_acc": 95.61912, "stage0_mean_ious": 0.21658, "stage0_s": 0.0, "stage0_m": 0.04783, "stage0_l": 0.193, "stage0_h": 0.21381, "stage1_loss_instance_mil": 0.32571, "stage1_bag_acc": 95.43038, "stage1_neg_loss": 0.08973, "stage1_mean_ious": 0.21361, "stage1_s": 0.0, "stage1_m": 0.0542, "stage1_l": 0.18349, "stage1_h": 0.21156, "loss": 0.49953, "grad_norm": 12.79935, "time": 1.75859}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18833, "data_time": 0.03111, "stage0_loss_instance_mil": 0.05075, "stage0_bag_acc": 97.07144, "stage0_mean_ious": 0.20085, "stage0_s": 0.0, "stage0_m": 0.02679, "stage0_l": 0.18384, "stage0_h": 0.19833, "stage1_loss_instance_mil": 0.32794, "stage1_bag_acc": 98.26828, "stage1_neg_loss": 0.08622, "stage1_mean_ious": 0.20444, "stage1_s": 0.0, "stage1_m": 0.0321, "stage1_l": 0.19316, "stage1_h": 0.20041, "loss": 0.46492, "grad_norm": 13.23416, "time": 1.72561}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18833, "data_time": 0.03173, "stage0_loss_instance_mil": 0.04927, "stage0_bag_acc": 96.99258, "stage0_mean_ious": 0.20592, "stage0_s": 0.00451, "stage0_m": 0.04861, "stage0_l": 0.21984, "stage0_h": 0.20405, "stage1_loss_instance_mil": 0.30802, "stage1_bag_acc": 98.4616, "stage1_neg_loss": 0.08643, "stage1_mean_ious": 0.19889, "stage1_s": 0.0071, "stage1_m": 0.04153, "stage1_l": 0.21065, "stage1_h": 0.19946, "loss": 0.44372, "grad_norm": 13.29553, "time": 1.72035}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18833, "data_time": 0.08311, "stage0_loss_instance_mil": 0.04086, "stage0_bag_acc": 97.28889, "stage0_mean_ious": 0.27811, "stage0_s": 0.0, "stage0_m": 0.04473, "stage0_l": 0.17009, "stage0_h": 0.28869, "stage1_loss_instance_mil": 0.29346, "stage1_bag_acc": 98.88076, "stage1_neg_loss": 0.08439, "stage1_mean_ious": 0.26077, "stage1_s": 0.0, "stage1_m": 0.03709, "stage1_l": 0.17161, "stage1_h": 0.27043, "loss": 0.41871, "grad_norm": 13.54798, "time": 1.7882}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03008, "stage0_loss_instance_mil": 0.05248, "stage0_bag_acc": 96.76926, "stage0_mean_ious": 0.30192, "stage0_s": 0.0, "stage0_m": 0.04912, "stage0_l": 0.22412, "stage0_h": 0.30879, "stage1_loss_instance_mil": 0.29009, "stage1_bag_acc": 98.70371, "stage1_neg_loss": 0.09, "stage1_mean_ious": 0.29258, "stage1_s": 0.0, "stage1_m": 0.05725, "stage1_l": 0.2145, "stage1_h": 0.29957, "loss": 0.43258, "grad_norm": 15.92386, "time": 1.70669}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.03178, "stage0_loss_instance_mil": 0.02016, "stage0_bag_acc": 98.81393, "stage0_mean_ious": 0.30322, "stage0_s": 0.0, "stage0_m": 0.05076, "stage0_l": 0.1817, "stage0_h": 0.31309, "stage1_loss_instance_mil": 0.25424, "stage1_bag_acc": 99.11838, "stage1_neg_loss": 0.08111, "stage1_mean_ious": 0.28556, "stage1_s": 0.0, "stage1_m": 0.04745, "stage1_l": 0.17295, "stage1_h": 0.29431, "loss": 0.35551, "grad_norm": 16.26354, "time": 1.76212}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.087, "bbox_mAP_50": 0.278, "bbox_mAP_75": 0.156, "bbox_mAP_s": 0.066, "bbox_mAP_m": 0.034, "bbox_mAP_l": 0.008, "bbox_mAP_copypaste": "0.087 0.278 0.156 0.066 0.034 0.008"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08361, "stage0_loss_instance_mil": 0.02337, "stage0_bag_acc": 98.87193, "stage0_mean_ious": 0.38199, "stage0_s": 0.0, "stage0_m": 0.02215, "stage0_l": 0.2093, "stage0_h": 0.40531, "stage1_loss_instance_mil": 0.21663, "stage1_bag_acc": 98.99244, "stage1_neg_loss": 0.0685, "stage1_mean_ious": 0.35595, "stage1_s": 0.0, "stage1_m": 0.02255, "stage1_l": 0.21503, "stage1_h": 0.37302, "loss": 0.3085, "grad_norm": 12.40078, "time": 1.81571}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03077, "stage0_loss_instance_mil": 0.01957, "stage0_bag_acc": 99.09307, "stage0_mean_ious": 0.49999, "stage0_s": 0.00879, "stage0_m": 0.06008, "stage0_l": 0.23026, "stage0_h": 0.53241, "stage1_loss_instance_mil": 0.18184, "stage1_bag_acc": 99.33355, "stage1_neg_loss": 0.0626, "stage1_mean_ious": 0.46599, "stage1_s": 0.0098, "stage1_m": 0.07286, "stage1_l": 0.23971, "stage1_h": 0.48996, "loss": 0.26402, "grad_norm": 13.00988, "time": 1.75141}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02899, "stage0_loss_instance_mil": 0.01731, "stage0_bag_acc": 98.94951, "stage0_mean_ious": 0.49983, "stage0_s": 0.0, "stage0_m": 0.07412, "stage0_l": 0.17043, "stage0_h": 0.53122, "stage1_loss_instance_mil": 0.14579, "stage1_bag_acc": 99.10769, "stage1_neg_loss": 0.06019, "stage1_mean_ious": 0.47309, "stage1_s": 0.0, "stage1_m": 0.08158, "stage1_l": 0.18841, "stage1_h": 0.49841, "loss": 0.22329, "grad_norm": 12.09322, "time": 1.72499}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08164, "stage0_loss_instance_mil": 0.02049, "stage0_bag_acc": 99.24526, "stage0_mean_ious": 0.45989, "stage0_s": 0.0, "stage0_m": 0.06896, "stage0_l": 0.243, "stage0_h": 0.48407, "stage1_loss_instance_mil": 0.17405, "stage1_bag_acc": 99.31759, "stage1_neg_loss": 0.05856, "stage1_mean_ious": 0.43505, "stage1_s": 0.0, "stage1_m": 0.08025, "stage1_l": 0.25148, "stage1_h": 0.45054, "loss": 0.2531, "grad_norm": 11.33422, "time": 1.77812}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02949, "stage0_loss_instance_mil": 0.01396, "stage0_bag_acc": 99.25074, "stage0_mean_ious": 0.48169, "stage0_s": 0.00877, "stage0_m": 0.05726, "stage0_l": 0.27118, "stage0_h": 0.50028, "stage1_loss_instance_mil": 0.13888, "stage1_bag_acc": 99.33316, "stage1_neg_loss": 0.05353, "stage1_mean_ious": 0.43517, "stage1_s": 0.01073, "stage1_m": 0.06148, "stage1_l": 0.27214, "stage1_h": 0.44687, "loss": 0.20637, "grad_norm": 10.16753, "time": 1.71376}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.0308, "stage0_loss_instance_mil": 0.01523, "stage0_bag_acc": 99.02673, "stage0_mean_ious": 0.52641, "stage0_s": 0.0, "stage0_m": 0.01831, "stage0_l": 0.32865, "stage0_h": 0.55586, "stage1_loss_instance_mil": 0.10712, "stage1_bag_acc": 98.8737, "stage1_neg_loss": 0.04138, "stage1_mean_ious": 0.49298, "stage1_s": 0.0, "stage1_m": 0.01866, "stage1_l": 0.32086, "stage1_h": 0.51844, "loss": 0.16373, "grad_norm": 6.92727, "time": 1.74112}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08172, "stage0_loss_instance_mil": 0.0307, "stage0_bag_acc": 98.00418, "stage0_mean_ious": 0.47445, "stage0_s": 0.0, "stage0_m": 0.0788, "stage0_l": 0.32185, "stage0_h": 0.49126, "stage1_loss_instance_mil": 0.13316, "stage1_bag_acc": 97.50123, "stage1_neg_loss": 0.05261, "stage1_mean_ious": 0.45029, "stage1_s": 0.0, "stage1_m": 0.07257, "stage1_l": 0.34346, "stage1_h": 0.46044, "loss": 0.21647, "grad_norm": 10.53224, "time": 1.77636}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02963, "stage0_loss_instance_mil": 0.01947, "stage0_bag_acc": 99.05065, "stage0_mean_ious": 0.50787, "stage0_s": 0.0, "stage0_m": 0.02319, "stage0_l": 0.31143, "stage0_h": 0.52218, "stage1_loss_instance_mil": 0.11218, "stage1_bag_acc": 99.1683, "stage1_neg_loss": 0.04257, "stage1_mean_ious": 0.47268, "stage1_s": 0.0, "stage1_m": 0.02241, "stage1_l": 0.30611, "stage1_h": 0.48369, "loss": 0.17421, "grad_norm": 7.21472, "time": 1.71262}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.03007, "stage0_loss_instance_mil": 0.00927, "stage0_bag_acc": 99.65209, "stage0_mean_ious": 0.53985, "stage0_s": 0.0, "stage0_m": 0.05103, "stage0_l": 0.34727, "stage0_h": 0.57178, "stage1_loss_instance_mil": 0.08431, "stage1_bag_acc": 99.67183, "stage1_neg_loss": 0.03709, "stage1_mean_ious": 0.50816, "stage1_s": 0.0, "stage1_m": 0.05527, "stage1_l": 0.35914, "stage1_h": 0.53197, "loss": 0.13067, "grad_norm": 5.41691, "time": 1.72563}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.21, "bbox_mAP_50": 0.484, "bbox_mAP_75": 0.349, "bbox_mAP_s": 0.231, "bbox_mAP_m": 0.175, "bbox_mAP_l": 0.104, "bbox_mAP_copypaste": "0.210 0.484 0.349 0.231 0.175 0.104"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07358, "stage0_loss_instance_mil": 0.0125, "stage0_bag_acc": 99.15528, "stage0_mean_ious": 0.54748, "stage0_s": 0.0, "stage0_m": 0.09932, "stage0_l": 0.37709, "stage0_h": 0.56446, "stage1_loss_instance_mil": 0.08348, "stage1_bag_acc": 99.27526, "stage1_neg_loss": 0.03716, "stage1_mean_ious": 0.51111, "stage1_s": 0.0, "stage1_m": 0.09232, "stage1_l": 0.35863, "stage1_h": 0.52683, "loss": 0.13315, "grad_norm": 6.63761, "time": 1.74989}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02873, "stage0_loss_instance_mil": 0.01089, "stage0_bag_acc": 99.02783, "stage0_mean_ious": 0.52094, "stage0_s": 0.0, "stage0_m": 0.06089, "stage0_l": 0.29727, "stage0_h": 0.54377, "stage1_loss_instance_mil": 0.06844, "stage1_bag_acc": 99.28218, "stage1_neg_loss": 0.03536, "stage1_mean_ious": 0.48757, "stage1_s": 0.0, "stage1_m": 0.06257, "stage1_l": 0.31022, "stage1_h": 0.50125, "loss": 0.11469, "grad_norm": 5.51843, "time": 1.75818}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02726, "stage0_loss_instance_mil": 0.00975, "stage0_bag_acc": 99.1863, "stage0_mean_ious": 0.56487, "stage0_s": 0.0, "stage0_m": 0.07608, "stage0_l": 0.28657, "stage0_h": 0.59174, "stage1_loss_instance_mil": 0.07782, "stage1_bag_acc": 99.36061, "stage1_neg_loss": 0.03563, "stage1_mean_ious": 0.52528, "stage1_s": 0.0, "stage1_m": 0.08082, "stage1_l": 0.2854, "stage1_h": 0.54755, "loss": 0.12321, "grad_norm": 6.1761, "time": 1.71994}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08202, "stage0_loss_instance_mil": 0.00625, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.54624, "stage0_s": 0.0, "stage0_m": 0.13436, "stage0_l": 0.3051, "stage0_h": 0.56713, "stage1_loss_instance_mil": 0.07286, "stage1_bag_acc": 99.02206, "stage1_neg_loss": 0.03564, "stage1_mean_ious": 0.51164, "stage1_s": 0.0, "stage1_m": 0.15078, "stage1_l": 0.30161, "stage1_h": 0.52695, "loss": 0.11476, "grad_norm": 6.82315, "time": 1.78723}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02754, "stage0_loss_instance_mil": 0.00926, "stage0_bag_acc": 99.57183, "stage0_mean_ious": 0.53353, "stage0_s": 0.0, "stage0_m": 0.02635, "stage0_l": 0.27611, "stage0_h": 0.56274, "stage1_loss_instance_mil": 0.07453, "stage1_bag_acc": 99.71474, "stage1_neg_loss": 0.03227, "stage1_mean_ious": 0.50588, "stage1_s": 0.0, "stage1_m": 0.02852, "stage1_l": 0.28183, "stage1_h": 0.53111, "loss": 0.11606, "grad_norm": 6.18866, "time": 1.70559}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02732, "stage0_loss_instance_mil": 0.00323, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.54446, "stage0_s": 0.0, "stage0_m": 0.06887, "stage0_l": 0.3029, "stage0_h": 0.57293, "stage1_loss_instance_mil": 0.07366, "stage1_bag_acc": 99.78667, "stage1_neg_loss": 0.03292, "stage1_mean_ious": 0.51017, "stage1_s": 0.0, "stage1_m": 0.07499, "stage1_l": 0.28585, "stage1_h": 0.53591, "loss": 0.10981, "grad_norm": 4.93863, "time": 1.72767}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08205, "stage0_loss_instance_mil": 0.00816, "stage0_bag_acc": 99.65168, "stage0_mean_ious": 0.53815, "stage0_s": 0.0, "stage0_m": 0.04573, "stage0_l": 0.37426, "stage0_h": 0.55747, "stage1_loss_instance_mil": 0.06944, "stage1_bag_acc": 99.91667, "stage1_neg_loss": 0.03409, "stage1_mean_ious": 0.51091, "stage1_s": 0.0, "stage1_m": 0.05169, "stage1_l": 0.37727, "stage1_h": 0.52379, "loss": 0.11169, "grad_norm": 4.88799, "time": 1.79322}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.03323, "stage0_loss_instance_mil": 0.00582, "stage0_bag_acc": 99.71304, "stage0_mean_ious": 0.51234, "stage0_s": 0.0, "stage0_m": 0.08559, "stage0_l": 0.30999, "stage0_h": 0.54681, "stage1_loss_instance_mil": 0.06759, "stage1_bag_acc": 99.49013, "stage1_neg_loss": 0.02974, "stage1_mean_ious": 0.48284, "stage1_s": 0.0, "stage1_m": 0.09718, "stage1_l": 0.31518, "stage1_h": 0.50944, "loss": 0.10315, "grad_norm": 4.83131, "time": 1.75667}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.03176, "stage0_loss_instance_mil": 0.0028, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.54115, "stage0_s": 0.0, "stage0_m": 0.0641, "stage0_l": 0.29476, "stage0_h": 0.56714, "stage1_loss_instance_mil": 0.06035, "stage1_bag_acc": 99.68363, "stage1_neg_loss": 0.03207, "stage1_mean_ious": 0.50605, "stage1_s": 0.0, "stage1_m": 0.06696, "stage1_l": 0.28621, "stage1_h": 0.52591, "loss": 0.09522, "grad_norm": 4.31697, "time": 1.75935}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.251, "bbox_mAP_50": 0.565, "bbox_mAP_75": 0.417, "bbox_mAP_s": 0.269, "bbox_mAP_m": 0.196, "bbox_mAP_l": 0.125, "bbox_mAP_copypaste": "0.251 0.565 0.417 0.269 0.196 0.125"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08161, "stage0_loss_instance_mil": 0.00216, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.55528, "stage0_s": 0.0, "stage0_m": 0.08223, "stage0_l": 0.34896, "stage0_h": 0.5841, "stage1_loss_instance_mil": 0.05106, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02595, "stage1_mean_ious": 0.52725, "stage1_s": 0.0, "stage1_m": 0.08638, "stage1_l": 0.34206, "stage1_h": 0.55157, "loss": 0.07917, "grad_norm": 3.23153, "time": 1.80986}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02788, "stage0_loss_instance_mil": 0.00175, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.52755, "stage0_s": 0.0, "stage0_m": 0.04908, "stage0_l": 0.2892, "stage0_h": 0.55834, "stage1_loss_instance_mil": 0.05684, "stage1_bag_acc": 99.80383, "stage1_neg_loss": 0.03358, "stage1_mean_ious": 0.49851, "stage1_s": 0.0, "stage1_m": 0.0593, "stage1_l": 0.29756, "stage1_h": 0.52259, "loss": 0.09217, "grad_norm": 4.51341, "time": 1.72454}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02953, "stage0_loss_instance_mil": 0.00135, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.55401, "stage0_s": 0.0, "stage0_m": 0.04635, "stage0_l": 0.30813, "stage0_h": 0.58327, "stage1_loss_instance_mil": 0.05895, "stage1_bag_acc": 99.68409, "stage1_neg_loss": 0.02692, "stage1_mean_ious": 0.51473, "stage1_s": 0.0, "stage1_m": 0.04737, "stage1_l": 0.31382, "stage1_h": 0.53643, "loss": 0.08722, "grad_norm": 4.18106, "time": 1.7481}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07925, "stage0_loss_instance_mil": 0.00182, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.54171, "stage0_s": 0.0, "stage0_m": 0.07445, "stage0_l": 0.32279, "stage0_h": 0.57706, "stage1_loss_instance_mil": 0.0566, "stage1_bag_acc": 99.78363, "stage1_neg_loss": 0.03141, "stage1_mean_ious": 0.50389, "stage1_s": 0.0, "stage1_m": 0.08047, "stage1_l": 0.3289, "stage1_h": 0.53212, "loss": 0.08983, "grad_norm": 4.37278, "time": 1.77403}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02851, "stage0_loss_instance_mil": 0.00608, "stage0_bag_acc": 99.77778, "stage0_mean_ious": 0.53777, "stage0_s": 0.0, "stage0_m": 0.04681, "stage0_l": 0.29634, "stage0_h": 0.56537, "stage1_loss_instance_mil": 0.05416, "stage1_bag_acc": 99.70085, "stage1_neg_loss": 0.02558, "stage1_mean_ious": 0.50375, "stage1_s": 0.0, "stage1_m": 0.0517, "stage1_l": 0.29275, "stage1_h": 0.52677, "loss": 0.08582, "grad_norm": 3.57715, "time": 1.74193}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02835, "stage0_loss_instance_mil": 0.00193, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.56862, "stage0_s": 0.0, "stage0_m": 0.06994, "stage0_l": 0.3376, "stage0_h": 0.59622, "stage1_loss_instance_mil": 0.04563, "stage1_bag_acc": 99.75714, "stage1_neg_loss": 0.02345, "stage1_mean_ious": 0.53647, "stage1_s": 0.0, "stage1_m": 0.08247, "stage1_l": 0.33333, "stage1_h": 0.55774, "loss": 0.07101, "grad_norm": 3.45771, "time": 1.69435}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07866, "stage0_loss_instance_mil": 0.00147, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.55086, "stage0_s": 0.0, "stage0_m": 0.05776, "stage0_l": 0.26658, "stage0_h": 0.58471, "stage1_loss_instance_mil": 0.04879, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.02999, "stage1_mean_ious": 0.51192, "stage1_s": 0.0, "stage1_m": 0.06671, "stage1_l": 0.27144, "stage1_h": 0.53895, "loss": 0.08026, "grad_norm": 3.94094, "time": 1.73891}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18833, "data_time": 0.02863, "stage0_loss_instance_mil": 0.00187, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.53171, "stage0_s": 0.0, "stage0_m": 0.06398, "stage0_l": 0.30468, "stage0_h": 0.55472, "stage1_loss_instance_mil": 0.05332, "stage1_bag_acc": 99.79798, "stage1_neg_loss": 0.02747, "stage1_mean_ious": 0.4945, "stage1_s": 0.0, "stage1_m": 0.07686, "stage1_l": 0.30154, "stage1_h": 0.51241, "loss": 0.08266, "grad_norm": 3.51082, "time": 1.7148}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18833, "data_time": 0.02882, "stage0_loss_instance_mil": 0.00253, "stage0_bag_acc": 99.875, "stage0_mean_ious": 0.55281, "stage0_s": 0.0, "stage0_m": 0.09381, "stage0_l": 0.34317, "stage0_h": 0.58075, "stage1_loss_instance_mil": 0.0532, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.02802, "stage1_mean_ious": 0.5222, "stage1_s": 0.0, "stage1_m": 0.10005, "stage1_l": 0.33955, "stage1_h": 0.54441, "loss": 0.08375, "grad_norm": 3.80402, "time": 1.71068}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.253, "bbox_mAP_50": 0.569, "bbox_mAP_75": 0.429, "bbox_mAP_s": 0.262, "bbox_mAP_m": 0.192, "bbox_mAP_l": 0.122, "bbox_mAP_copypaste": "0.253 0.569 0.429 0.262 0.192 0.122"}
