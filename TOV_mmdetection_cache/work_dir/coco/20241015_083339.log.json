{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.0772, "stage0_loss_instance_mil": 0.70731, "stage0_bag_acc": 18.63757, "stage0_mean_ious": 0.33725, "stage0_s": 0.0, "stage0_m": 0.02602, "stage0_l": 0.20619, "stage0_h": 0.35285, "stage1_loss_instance_mil": 0.16714, "stage1_bag_acc": 18.742, "stage1_neg_loss": 0.0016, "stage1_mean_ious": 0.33084, "stage1_s": 0.0, "stage1_m": 0.03128, "stage1_l": 0.21229, "stage1_h": 0.34457, "loss": 0.87606, "grad_norm": 3.41678, "time": 1.81719}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02675, "stage0_loss_instance_mil": 0.58182, "stage0_bag_acc": 55.28177, "stage0_mean_ious": 0.30915, "stage0_s": 0.0, "stage0_m": 0.04057, "stage0_l": 0.26231, "stage0_h": 0.31551, "stage1_loss_instance_mil": 0.23343, "stage1_bag_acc": 21.39713, "stage1_neg_loss": 0.0087, "stage1_mean_ious": 0.30115, "stage1_s": 0.0, "stage1_m": 0.04008, "stage1_l": 0.2474, "stage1_h": 0.30705, "loss": 0.82395, "grad_norm": 4.21781, "time": 1.75114}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02549, "stage0_loss_instance_mil": 0.28412, "stage0_bag_acc": 82.79841, "stage0_mean_ious": 0.27452, "stage0_s": 0.0, "stage0_m": 0.0456, "stage0_l": 0.24821, "stage0_h": 0.27711, "stage1_loss_instance_mil": 0.32681, "stage1_bag_acc": 78.33483, "stage1_neg_loss": 0.06463, "stage1_mean_ious": 0.25557, "stage1_s": 0.0, "stage1_m": 0.04034, "stage1_l": 0.22891, "stage1_h": 0.25922, "loss": 0.67556, "grad_norm": 10.05884, "time": 1.69648}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18833, "data_time": 0.07263, "stage0_loss_instance_mil": 0.072, "stage0_bag_acc": 96.60426, "stage0_mean_ious": 0.27844, "stage0_s": 0.0, "stage0_m": 0.04494, "stage0_l": 0.19752, "stage0_h": 0.2836, "stage1_loss_instance_mil": 0.34827, "stage1_bag_acc": 97.3463, "stage1_neg_loss": 0.092, "stage1_mean_ious": 0.25027, "stage1_s": 0.0, "stage1_m": 0.03543, "stage1_l": 0.16169, "stage1_h": 0.25798, "loss": 0.51226, "grad_norm": 13.18193, "time": 1.76916}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18833, "data_time": 0.0269, "stage0_loss_instance_mil": 0.04301, "stage0_bag_acc": 97.3366, "stage0_mean_ious": 0.2815, "stage0_s": 0.0, "stage0_m": 0.10334, "stage0_l": 0.16856, "stage0_h": 0.28959, "stage1_loss_instance_mil": 0.31386, "stage1_bag_acc": 98.67767, "stage1_neg_loss": 0.08627, "stage1_mean_ious": 0.24703, "stage1_s": 0.0, "stage1_m": 0.08037, "stage1_l": 0.13702, "stage1_h": 0.25704, "loss": 0.44314, "grad_norm": 10.95102, "time": 1.70985}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18833, "data_time": 0.02801, "stage0_loss_instance_mil": 0.04224, "stage0_bag_acc": 97.58193, "stage0_mean_ious": 0.31084, "stage0_s": 0.0, "stage0_m": 0.04774, "stage0_l": 0.21449, "stage0_h": 0.32017, "stage1_loss_instance_mil": 0.31338, "stage1_bag_acc": 98.62208, "stage1_neg_loss": 0.10831, "stage1_mean_ious": 0.27408, "stage1_s": 0.0, "stage1_m": 0.03632, "stage1_l": 0.17309, "stage1_h": 0.28531, "loss": 0.46394, "grad_norm": 24.57948, "time": 1.7223}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18833, "data_time": 0.07874, "stage0_loss_instance_mil": 0.04838, "stage0_bag_acc": 96.93447, "stage0_mean_ious": 0.37156, "stage0_s": 0.0, "stage0_m": 0.05164, "stage0_l": 0.22492, "stage0_h": 0.38876, "stage1_loss_instance_mil": 0.2987, "stage1_bag_acc": 98.12784, "stage1_neg_loss": 0.08393, "stage1_mean_ious": 0.31432, "stage1_s": 0.0, "stage1_m": 0.04066, "stage1_l": 0.19586, "stage1_h": 0.32915, "loss": 0.43101, "grad_norm": 14.09223, "time": 1.75916}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03152, "stage0_loss_instance_mil": 0.03019, "stage0_bag_acc": 99.00812, "stage0_mean_ious": 0.39752, "stage0_s": 0.0, "stage0_m": 0.03411, "stage0_l": 0.2352, "stage0_h": 0.40836, "stage1_loss_instance_mil": 0.30742, "stage1_bag_acc": 99.33077, "stage1_neg_loss": 0.09384, "stage1_mean_ious": 0.33547, "stage1_s": 0.0, "stage1_m": 0.02878, "stage1_l": 0.20148, "stage1_h": 0.34327, "loss": 0.43146, "grad_norm": 17.88267, "time": 1.73302}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.03299, "stage0_loss_instance_mil": 0.02486, "stage0_bag_acc": 98.63249, "stage0_mean_ious": 0.42537, "stage0_s": 0.0, "stage0_m": 0.04373, "stage0_l": 0.22967, "stage0_h": 0.44116, "stage1_loss_instance_mil": 0.23705, "stage1_bag_acc": 99.10325, "stage1_neg_loss": 0.07289, "stage1_mean_ious": 0.34752, "stage1_s": 0.0, "stage1_m": 0.03311, "stage1_l": 0.20557, "stage1_h": 0.35724, "loss": 0.3348, "grad_norm": 12.63287, "time": 1.73652}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.013, "bbox_mAP_50": 0.06, "bbox_mAP_75": 0.021, "bbox_mAP_s": 0.004, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.013 0.060 0.021 0.004 0.001 0.001"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07523, "stage0_loss_instance_mil": 0.03545, "stage0_bag_acc": 98.34581, "stage0_mean_ious": 0.42775, "stage0_s": 0.0, "stage0_m": 0.05841, "stage0_l": 0.24766, "stage0_h": 0.45142, "stage1_loss_instance_mil": 0.22958, "stage1_bag_acc": 98.75588, "stage1_neg_loss": 0.07519, "stage1_mean_ious": 0.35593, "stage1_s": 0.0, "stage1_m": 0.0478, "stage1_l": 0.21927, "stage1_h": 0.37292, "loss": 0.34022, "grad_norm": 13.19201, "time": 1.76437}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02624, "stage0_loss_instance_mil": 0.01718, "stage0_bag_acc": 99.20825, "stage0_mean_ious": 0.46978, "stage0_s": 0.0, "stage0_m": 0.02834, "stage0_l": 0.2896, "stage0_h": 0.49099, "stage1_loss_instance_mil": 0.20292, "stage1_bag_acc": 99.28052, "stage1_neg_loss": 0.06692, "stage1_mean_ious": 0.39501, "stage1_s": 0.0, "stage1_m": 0.0263, "stage1_l": 0.26565, "stage1_h": 0.40951, "loss": 0.28702, "grad_norm": 13.21997, "time": 1.74683}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02681, "stage0_loss_instance_mil": 0.0271, "stage0_bag_acc": 98.74627, "stage0_mean_ious": 0.44723, "stage0_s": 0.00826, "stage0_m": 0.06585, "stage0_l": 0.23292, "stage0_h": 0.48546, "stage1_loss_instance_mil": 0.18713, "stage1_bag_acc": 98.54704, "stage1_neg_loss": 0.06771, "stage1_mean_ious": 0.38294, "stage1_s": 0.00805, "stage1_m": 0.05926, "stage1_l": 0.22094, "stage1_h": 0.41038, "loss": 0.28194, "grad_norm": 11.93643, "time": 1.74006}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07832, "stage0_loss_instance_mil": 0.0115, "stage0_bag_acc": 99.11105, "stage0_mean_ious": 0.50517, "stage0_s": 0.0, "stage0_m": 0.02461, "stage0_l": 0.263, "stage0_h": 0.53594, "stage1_loss_instance_mil": 0.15585, "stage1_bag_acc": 99.50187, "stage1_neg_loss": 0.06008, "stage1_mean_ious": 0.42582, "stage1_s": 0.0, "stage1_m": 0.02605, "stage1_l": 0.24689, "stage1_h": 0.44675, "loss": 0.22742, "grad_norm": 11.62778, "time": 1.82198}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02778, "stage0_loss_instance_mil": 0.01803, "stage0_bag_acc": 98.65582, "stage0_mean_ious": 0.47531, "stage0_s": 0.0, "stage0_m": 0.0592, "stage0_l": 0.25475, "stage0_h": 0.50679, "stage1_loss_instance_mil": 0.14837, "stage1_bag_acc": 99.54167, "stage1_neg_loss": 0.06089, "stage1_mean_ious": 0.4065, "stage1_s": 0.0, "stage1_m": 0.06334, "stage1_l": 0.24858, "stage1_h": 0.42552, "loss": 0.22728, "grad_norm": 12.55858, "time": 1.73884}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02796, "stage0_loss_instance_mil": 0.01826, "stage0_bag_acc": 99.22823, "stage0_mean_ious": 0.47664, "stage0_s": 0.0, "stage0_m": 0.0421, "stage0_l": 0.19417, "stage0_h": 0.51114, "stage1_loss_instance_mil": 0.15423, "stage1_bag_acc": 99.6376, "stage1_neg_loss": 0.05821, "stage1_mean_ious": 0.41355, "stage1_s": 0.0, "stage1_m": 0.03977, "stage1_l": 0.18996, "stage1_h": 0.4386, "loss": 0.23069, "grad_norm": 11.50045, "time": 1.72437}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07924, "stage0_loss_instance_mil": 0.01997, "stage0_bag_acc": 98.77512, "stage0_mean_ious": 0.47494, "stage0_s": 0.0, "stage0_m": 0.01947, "stage0_l": 0.2254, "stage0_h": 0.5073, "stage1_loss_instance_mil": 0.13531, "stage1_bag_acc": 98.4936, "stage1_neg_loss": 0.05571, "stage1_mean_ious": 0.41292, "stage1_s": 0.0, "stage1_m": 0.01656, "stage1_l": 0.23011, "stage1_h": 0.4349, "loss": 0.21099, "grad_norm": 10.86275, "time": 1.79491}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02522, "stage0_loss_instance_mil": 0.02545, "stage0_bag_acc": 99.1075, "stage0_mean_ious": 0.48961, "stage0_s": 0.0, "stage0_m": 0.02895, "stage0_l": 0.21497, "stage0_h": 0.51527, "stage1_loss_instance_mil": 0.14241, "stage1_bag_acc": 99.01227, "stage1_neg_loss": 0.05204, "stage1_mean_ious": 0.43964, "stage1_s": 0.0, "stage1_m": 0.03174, "stage1_l": 0.22253, "stage1_h": 0.45691, "loss": 0.21989, "grad_norm": 10.23532, "time": 1.72609}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02529, "stage0_loss_instance_mil": 0.01451, "stage0_bag_acc": 99.20963, "stage0_mean_ious": 0.53564, "stage0_s": 0.0, "stage0_m": 0.12499, "stage0_l": 0.30267, "stage0_h": 0.56812, "stage1_loss_instance_mil": 0.11147, "stage1_bag_acc": 99.05487, "stage1_neg_loss": 0.04522, "stage1_mean_ious": 0.46253, "stage1_s": 0.0, "stage1_m": 0.12194, "stage1_l": 0.28637, "stage1_h": 0.48533, "loss": 0.1712, "grad_norm": 7.4708, "time": 1.73284}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.089, "bbox_mAP_50": 0.302, "bbox_mAP_75": 0.16, "bbox_mAP_s": 0.058, "bbox_mAP_m": 0.027, "bbox_mAP_l": 0.011, "bbox_mAP_copypaste": "0.089 0.302 0.160 0.058 0.027 0.011"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07372, "stage0_loss_instance_mil": 0.00858, "stage0_bag_acc": 99.59124, "stage0_mean_ious": 0.55003, "stage0_s": 0.00786, "stage0_m": 0.05896, "stage0_l": 0.26455, "stage0_h": 0.57831, "stage1_loss_instance_mil": 0.12136, "stage1_bag_acc": 99.58471, "stage1_neg_loss": 0.0558, "stage1_mean_ious": 0.48795, "stage1_s": 0.00882, "stage1_m": 0.05721, "stage1_l": 0.24153, "stage1_h": 0.51097, "loss": 0.18574, "grad_norm": 9.86095, "time": 1.76555}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02659, "stage0_loss_instance_mil": 0.00926, "stage0_bag_acc": 99.70383, "stage0_mean_ious": 0.54306, "stage0_s": 0.0, "stage0_m": 0.0688, "stage0_l": 0.33194, "stage0_h": 0.56242, "stage1_loss_instance_mil": 0.13537, "stage1_bag_acc": 99.67576, "stage1_neg_loss": 0.04754, "stage1_mean_ious": 0.48315, "stage1_s": 0.0, "stage1_m": 0.0627, "stage1_l": 0.31944, "stage1_h": 0.4971, "loss": 0.19218, "grad_norm": 11.13447, "time": 1.74272}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02554, "stage0_loss_instance_mil": 0.00741, "stage0_bag_acc": 99.49455, "stage0_mean_ious": 0.54033, "stage0_s": 0.0, "stage0_m": 0.08624, "stage0_l": 0.356, "stage0_h": 0.56897, "stage1_loss_instance_mil": 0.10342, "stage1_bag_acc": 99.71092, "stage1_neg_loss": 0.04586, "stage1_mean_ious": 0.48828, "stage1_s": 0.0, "stage1_m": 0.0869, "stage1_l": 0.35497, "stage1_h": 0.50743, "loss": 0.1567, "grad_norm": 8.43634, "time": 1.70081}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07783, "stage0_loss_instance_mil": 0.0034, "stage0_bag_acc": 99.86667, "stage0_mean_ious": 0.54143, "stage0_s": 0.0, "stage0_m": 0.09261, "stage0_l": 0.2932, "stage0_h": 0.57412, "stage1_loss_instance_mil": 0.08802, "stage1_bag_acc": 99.90909, "stage1_neg_loss": 0.04109, "stage1_mean_ious": 0.49064, "stage1_s": 0.0, "stage1_m": 0.09469, "stage1_l": 0.29309, "stage1_h": 0.51458, "loss": 0.13251, "grad_norm": 7.4655, "time": 1.78579}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02526, "stage0_loss_instance_mil": 0.00912, "stage0_bag_acc": 99.49355, "stage0_mean_ious": 0.51488, "stage0_s": 0.0, "stage0_m": 0.05392, "stage0_l": 0.29519, "stage0_h": 0.53652, "stage1_loss_instance_mil": 0.118, "stage1_bag_acc": 99.72381, "stage1_neg_loss": 0.05444, "stage1_mean_ious": 0.46778, "stage1_s": 0.0, "stage1_m": 0.05815, "stage1_l": 0.30057, "stage1_h": 0.48071, "loss": 0.18155, "grad_norm": 11.69973, "time": 1.66631}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02835, "stage0_loss_instance_mil": 0.04801, "stage0_bag_acc": 97.05767, "stage0_mean_ious": 0.54321, "stage0_s": 0.0, "stage0_m": 0.10433, "stage0_l": 0.34729, "stage0_h": 0.56255, "stage1_loss_instance_mil": 0.12168, "stage1_bag_acc": 97.36041, "stage1_neg_loss": 0.04598, "stage1_mean_ious": 0.49094, "stage1_s": 0.0, "stage1_m": 0.10583, "stage1_l": 0.34808, "stage1_h": 0.50183, "loss": 0.21567, "grad_norm": 10.09865, "time": 1.75263}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08436, "stage0_loss_instance_mil": 0.00936, "stage0_bag_acc": 99.61032, "stage0_mean_ious": 0.56152, "stage0_s": 0.0, "stage0_m": 0.04915, "stage0_l": 0.29544, "stage0_h": 0.5965, "stage1_loss_instance_mil": 0.08806, "stage1_bag_acc": 99.61465, "stage1_neg_loss": 0.02923, "stage1_mean_ious": 0.49926, "stage1_s": 0.0, "stage1_m": 0.05413, "stage1_l": 0.28963, "stage1_h": 0.52548, "loss": 0.12665, "grad_norm": 4.78572, "time": 1.81334}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02797, "stage0_loss_instance_mil": 0.00964, "stage0_bag_acc": 99.35299, "stage0_mean_ious": 0.53042, "stage0_s": 0.0, "stage0_m": 0.08629, "stage0_l": 0.34724, "stage0_h": 0.56161, "stage1_loss_instance_mil": 0.08565, "stage1_bag_acc": 99.25299, "stage1_neg_loss": 0.04349, "stage1_mean_ious": 0.48183, "stage1_s": 0.0, "stage1_m": 0.09222, "stage1_l": 0.35179, "stage1_h": 0.50261, "loss": 0.13878, "grad_norm": 6.26303, "time": 1.77356}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02662, "stage0_loss_instance_mil": 0.00476, "stage0_bag_acc": 99.78409, "stage0_mean_ious": 0.54211, "stage0_s": 0.00772, "stage0_m": 0.06792, "stage0_l": 0.31073, "stage0_h": 0.56505, "stage1_loss_instance_mil": 0.08734, "stage1_bag_acc": 99.90909, "stage1_neg_loss": 0.04042, "stage1_mean_ious": 0.49187, "stage1_s": 0.00957, "stage1_m": 0.07836, "stage1_l": 0.30486, "stage1_h": 0.50813, "loss": 0.13251, "grad_norm": 6.21297, "time": 1.72999}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.114, "bbox_mAP_50": 0.326, "bbox_mAP_75": 0.203, "bbox_mAP_s": 0.103, "bbox_mAP_m": 0.061, "bbox_mAP_l": 0.027, "bbox_mAP_copypaste": "0.114 0.326 0.203 0.103 0.061 0.027"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07577, "stage0_loss_instance_mil": 0.00594, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.5523, "stage0_s": 0.0, "stage0_m": 0.05897, "stage0_l": 0.27663, "stage0_h": 0.57755, "stage1_loss_instance_mil": 0.07691, "stage1_bag_acc": 99.67576, "stage1_neg_loss": 0.03946, "stage1_mean_ious": 0.50001, "stage1_s": 0.0, "stage1_m": 0.06323, "stage1_l": 0.28014, "stage1_h": 0.51736, "loss": 0.12232, "grad_norm": 5.65545, "time": 1.79096}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02669, "stage0_loss_instance_mil": 0.00804, "stage0_bag_acc": 99.68185, "stage0_mean_ious": 0.54725, "stage0_s": 0.0, "stage0_m": 0.05268, "stage0_l": 0.30716, "stage0_h": 0.58648, "stage1_loss_instance_mil": 0.0708, "stage1_bag_acc": 99.42801, "stage1_neg_loss": 0.03425, "stage1_mean_ious": 0.49913, "stage1_s": 0.0, "stage1_m": 0.06044, "stage1_l": 0.31111, "stage1_h": 0.5276, "loss": 0.11308, "grad_norm": 4.81728, "time": 1.72757}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.026, "stage0_loss_instance_mil": 0.00318, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.55009, "stage0_s": 0.0, "stage0_m": 0.03669, "stage0_l": 0.29604, "stage0_h": 0.57937, "stage1_loss_instance_mil": 0.07688, "stage1_bag_acc": 99.61696, "stage1_neg_loss": 0.03856, "stage1_mean_ious": 0.49122, "stage1_s": 0.0, "stage1_m": 0.04198, "stage1_l": 0.29579, "stage1_h": 0.51219, "loss": 0.11862, "grad_norm": 4.9598, "time": 1.69062}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.0771, "stage0_loss_instance_mil": 0.00412, "stage0_bag_acc": 99.80889, "stage0_mean_ious": 0.54819, "stage0_s": 0.0, "stage0_m": 0.05829, "stage0_l": 0.31318, "stage0_h": 0.57244, "stage1_loss_instance_mil": 0.07196, "stage1_bag_acc": 99.59775, "stage1_neg_loss": 0.03852, "stage1_mean_ious": 0.49236, "stage1_s": 0.0, "stage1_m": 0.06481, "stage1_l": 0.29859, "stage1_h": 0.5093, "loss": 0.11459, "grad_norm": 5.70953, "time": 1.79116}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02623, "stage0_loss_instance_mil": 0.0062, "stage0_bag_acc": 99.78409, "stage0_mean_ious": 0.54704, "stage0_s": 0.0, "stage0_m": 0.05002, "stage0_l": 0.26278, "stage0_h": 0.5807, "stage1_loss_instance_mil": 0.07295, "stage1_bag_acc": 99.38212, "stage1_neg_loss": 0.03055, "stage1_mean_ious": 0.50197, "stage1_s": 0.0, "stage1_m": 0.06129, "stage1_l": 0.28246, "stage1_h": 0.52278, "loss": 0.10971, "grad_norm": 4.74853, "time": 1.69402}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.0278, "stage0_loss_instance_mil": 0.00185, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.55483, "stage0_s": 0.0, "stage0_m": 0.05661, "stage0_l": 0.34059, "stage0_h": 0.57566, "stage1_loss_instance_mil": 0.06856, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03646, "stage1_mean_ious": 0.49805, "stage1_s": 0.0, "stage1_m": 0.05836, "stage1_l": 0.33643, "stage1_h": 0.51086, "loss": 0.10687, "grad_norm": 5.54491, "time": 1.72271}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07697, "stage0_loss_instance_mil": 0.00269, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.54127, "stage0_s": 0.0, "stage0_m": 0.04558, "stage0_l": 0.37695, "stage0_h": 0.56126, "stage1_loss_instance_mil": 0.07448, "stage1_bag_acc": 99.88235, "stage1_neg_loss": 0.03252, "stage1_mean_ious": 0.49077, "stage1_s": 0.0, "stage1_m": 0.05366, "stage1_l": 0.36364, "stage1_h": 0.50413, "loss": 0.1097, "grad_norm": 5.34394, "time": 1.7853}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18833, "data_time": 0.02698, "stage0_loss_instance_mil": 0.00414, "stage0_bag_acc": 99.70458, "stage0_mean_ious": 0.54615, "stage0_s": 0.0, "stage0_m": 0.07527, "stage0_l": 0.29174, "stage0_h": 0.58672, "stage1_loss_instance_mil": 0.06441, "stage1_bag_acc": 99.62478, "stage1_neg_loss": 0.03388, "stage1_mean_ious": 0.49938, "stage1_s": 0.0, "stage1_m": 0.08387, "stage1_l": 0.3112, "stage1_h": 0.52696, "loss": 0.10243, "grad_norm": 4.88963, "time": 1.71022}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18833, "data_time": 0.02579, "stage0_loss_instance_mil": 0.00817, "stage0_bag_acc": 99.69259, "stage0_mean_ious": 0.55635, "stage0_s": 0.0, "stage0_m": 0.0557, "stage0_l": 0.25286, "stage0_h": 0.58955, "stage1_loss_instance_mil": 0.06263, "stage1_bag_acc": 99.69259, "stage1_neg_loss": 0.04056, "stage1_mean_ious": 0.50661, "stage1_s": 0.0, "stage1_m": 0.06468, "stage1_l": 0.26198, "stage1_h": 0.53196, "loss": 0.11136, "grad_norm": 5.91277, "time": 1.70977}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.12, "bbox_mAP_50": 0.34, "bbox_mAP_75": 0.211, "bbox_mAP_s": 0.112, "bbox_mAP_m": 0.063, "bbox_mAP_l": 0.028, "bbox_mAP_copypaste": "0.120 0.340 0.211 0.112 0.063 0.028"}
