{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+e282583", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [2]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07528, "stage0_loss_instance_mil": 0.71387, "stage0_bag_acc": 16.29529, "stage0_mean_ious": 0.22749, "stage0_s": 0.0, "stage0_m": 0.04485, "stage0_l": 0.22238, "stage0_h": 0.22292, "stage1_loss_instance_mil": 0.1674, "stage1_bag_acc": 17.16082, "stage1_neg_loss": 0.00249, "stage1_mean_ious": 0.2109, "stage1_s": 0.0, "stage1_m": 0.03785, "stage1_l": 0.20433, "stage1_h": 0.2074, "loss": 0.88376, "grad_norm": 3.44641, "time": 1.78688}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02423, "stage0_loss_instance_mil": 0.61106, "stage0_bag_acc": 61.46941, "stage0_mean_ious": 0.29537, "stage0_s": 0.0, "stage0_m": 0.05062, "stage0_l": 0.23827, "stage0_h": 0.29601, "stage1_loss_instance_mil": 0.22704, "stage1_bag_acc": 22.84709, "stage1_neg_loss": 0.00467, "stage1_mean_ious": 0.27665, "stage1_s": 0.0, "stage1_m": 0.04986, "stage1_l": 0.23336, "stage1_h": 0.27606, "loss": 0.84277, "grad_norm": 3.78742, "time": 1.7581}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02544, "stage0_loss_instance_mil": 0.25281, "stage0_bag_acc": 91.00655, "stage0_mean_ious": 0.41257, "stage0_s": 0.0, "stage0_m": 0.05525, "stage0_l": 0.29029, "stage0_h": 0.4263, "stage1_loss_instance_mil": 0.34807, "stage1_bag_acc": 82.07976, "stage1_neg_loss": 0.06474, "stage1_mean_ious": 0.38331, "stage1_s": 0.0, "stage1_m": 0.05215, "stage1_l": 0.29469, "stage1_h": 0.39424, "loss": 0.66561, "grad_norm": 11.37686, "time": 1.80206}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18840, "data_time": 0.07715, "stage0_loss_instance_mil": 0.07867, "stage0_bag_acc": 96.31583, "stage0_mean_ious": 0.42537, "stage0_s": 0.00857, "stage0_m": 0.0611, "stage0_l": 0.23379, "stage0_h": 0.44866, "stage1_loss_instance_mil": 0.32585, "stage1_bag_acc": 97.26155, "stage1_neg_loss": 0.08571, "stage1_mean_ious": 0.39083, "stage1_s": 0.01055, "stage1_m": 0.05231, "stage1_l": 0.21854, "stage1_h": 0.41101, "loss": 0.49023, "grad_norm": 12.58199, "time": 1.85335}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18840, "data_time": 0.0241, "stage0_loss_instance_mil": 0.06671, "stage0_bag_acc": 96.5871, "stage0_mean_ious": 0.41132, "stage0_s": 0.0, "stage0_m": 0.04625, "stage0_l": 0.20186, "stage0_h": 0.43173, "stage1_loss_instance_mil": 0.29199, "stage1_bag_acc": 96.9474, "stage1_neg_loss": 0.08355, "stage1_mean_ious": 0.37814, "stage1_s": 0.0, "stage1_m": 0.03002, "stage1_l": 0.19914, "stage1_h": 0.39654, "loss": 0.44224, "grad_norm": 15.77959, "time": 1.73786}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18840, "data_time": 0.02493, "stage0_loss_instance_mil": 0.04549, "stage0_bag_acc": 97.71906, "stage0_mean_ious": 0.43186, "stage0_s": 0.0, "stage0_m": 0.04973, "stage0_l": 0.24018, "stage0_h": 0.45028, "stage1_loss_instance_mil": 0.29124, "stage1_bag_acc": 97.49549, "stage1_neg_loss": 0.08165, "stage1_mean_ious": 0.40108, "stage1_s": 0.0, "stage1_m": 0.04111, "stage1_l": 0.22863, "stage1_h": 0.41735, "loss": 0.41838, "grad_norm": 14.54713, "time": 1.7099}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18840, "data_time": 0.07854, "stage0_loss_instance_mil": 0.04784, "stage0_bag_acc": 97.04432, "stage0_mean_ious": 0.38948, "stage0_s": 0.00873, "stage0_m": 0.04533, "stage0_l": 0.19669, "stage0_h": 0.40698, "stage1_loss_instance_mil": 0.27335, "stage1_bag_acc": 96.68925, "stage1_neg_loss": 0.07322, "stage1_mean_ious": 0.36311, "stage1_s": 0.01008, "stage1_m": 0.03183, "stage1_l": 0.18223, "stage1_h": 0.3804, "loss": 0.39441, "grad_norm": 14.62814, "time": 1.79182}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02534, "stage0_loss_instance_mil": 0.04829, "stage0_bag_acc": 96.68021, "stage0_mean_ious": 0.41766, "stage0_s": 0.0, "stage0_m": 0.06693, "stage0_l": 0.18824, "stage0_h": 0.45362, "stage1_loss_instance_mil": 0.25412, "stage1_bag_acc": 97.73007, "stage1_neg_loss": 0.07689, "stage1_mean_ious": 0.38822, "stage1_s": 0.0, "stage1_m": 0.04752, "stage1_l": 0.17722, "stage1_h": 0.42433, "loss": 0.3793, "grad_norm": 16.5858, "time": 1.69384}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02527, "stage0_loss_instance_mil": 0.03575, "stage0_bag_acc": 98.04179, "stage0_mean_ious": 0.40466, "stage0_s": 0.0, "stage0_m": 0.03337, "stage0_l": 0.20581, "stage0_h": 0.43059, "stage1_loss_instance_mil": 0.25343, "stage1_bag_acc": 98.37383, "stage1_neg_loss": 0.07853, "stage1_mean_ious": 0.37825, "stage1_s": 0.0, "stage1_m": 0.03195, "stage1_l": 0.19853, "stage1_h": 0.40226, "loss": 0.3677, "grad_norm": 14.36147, "time": 1.71981}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.088, "bbox_mAP_50": 0.246, "bbox_mAP_75": 0.166, "bbox_mAP_s": 0.077, "bbox_mAP_m": 0.042, "bbox_mAP_l": 0.015, "bbox_mAP_copypaste": "0.088 0.246 0.166 0.077 0.042 0.015"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07454, "stage0_loss_instance_mil": 0.04511, "stage0_bag_acc": 97.9548, "stage0_mean_ious": 0.41814, "stage0_s": 0.0, "stage0_m": 0.05656, "stage0_l": 0.25963, "stage0_h": 0.4461, "stage1_loss_instance_mil": 0.22264, "stage1_bag_acc": 98.1755, "stage1_neg_loss": 0.07507, "stage1_mean_ious": 0.3896, "stage1_s": 0.0, "stage1_m": 0.04484, "stage1_l": 0.2353, "stage1_h": 0.41649, "loss": 0.34282, "grad_norm": 15.18817, "time": 1.75508}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02517, "stage0_loss_instance_mil": 0.02773, "stage0_bag_acc": 98.65722, "stage0_mean_ious": 0.38748, "stage0_s": 0.00849, "stage0_m": 0.03076, "stage0_l": 0.18479, "stage0_h": 0.4124, "stage1_loss_instance_mil": 0.22479, "stage1_bag_acc": 98.54621, "stage1_neg_loss": 0.06355, "stage1_mean_ious": 0.36617, "stage1_s": 0.0092, "stage1_m": 0.01689, "stage1_l": 0.17037, "stage1_h": 0.3906, "loss": 0.31607, "grad_norm": 11.37912, "time": 1.68569}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02534, "stage0_loss_instance_mil": 0.02045, "stage0_bag_acc": 98.58303, "stage0_mean_ious": 0.34794, "stage0_s": 0.0, "stage0_m": 0.05919, "stage0_l": 0.19514, "stage0_h": 0.36302, "stage1_loss_instance_mil": 0.24451, "stage1_bag_acc": 99.05296, "stage1_neg_loss": 0.0761, "stage1_mean_ious": 0.32065, "stage1_s": 0.0, "stage1_m": 0.04528, "stage1_l": 0.17787, "stage1_h": 0.33613, "loss": 0.34105, "grad_norm": 13.98466, "time": 1.72145}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07538, "stage0_loss_instance_mil": 0.01641, "stage0_bag_acc": 98.90201, "stage0_mean_ious": 0.37909, "stage0_s": 0.0, "stage0_m": 0.0402, "stage0_l": 0.17241, "stage0_h": 0.40346, "stage1_loss_instance_mil": 0.1965, "stage1_bag_acc": 99.42347, "stage1_neg_loss": 0.06228, "stage1_mean_ious": 0.35063, "stage1_s": 0.0, "stage1_m": 0.02715, "stage1_l": 0.15675, "stage1_h": 0.37412, "loss": 0.27519, "grad_norm": 10.27311, "time": 1.77787}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02572, "stage0_loss_instance_mil": 0.0101, "stage0_bag_acc": 99.43466, "stage0_mean_ious": 0.31751, "stage0_s": 0.0, "stage0_m": 0.03941, "stage0_l": 0.22407, "stage0_h": 0.32999, "stage1_loss_instance_mil": 0.17844, "stage1_bag_acc": 99.62559, "stage1_neg_loss": 0.05729, "stage1_mean_ious": 0.29211, "stage1_s": 0.0, "stage1_m": 0.03052, "stage1_l": 0.21066, "stage1_h": 0.30394, "loss": 0.24583, "grad_norm": 9.16824, "time": 1.70959}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02658, "stage0_loss_instance_mil": 0.04349, "stage0_bag_acc": 97.5907, "stage0_mean_ious": 0.30481, "stage0_s": 0.0, "stage0_m": 0.02747, "stage0_l": 0.1621, "stage0_h": 0.32031, "stage1_loss_instance_mil": 0.22126, "stage1_bag_acc": 98.13142, "stage1_neg_loss": 0.07391, "stage1_mean_ious": 0.28239, "stage1_s": 0.0, "stage1_m": 0.0175, "stage1_l": 0.14976, "stage1_h": 0.29682, "loss": 0.33866, "grad_norm": 17.19564, "time": 1.69612}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07656, "stage0_loss_instance_mil": 0.02999, "stage0_bag_acc": 98.26943, "stage0_mean_ious": 0.31489, "stage0_s": 0.00813, "stage0_m": 0.02852, "stage0_l": 0.15859, "stage0_h": 0.32566, "stage1_loss_instance_mil": 0.16852, "stage1_bag_acc": 99.01215, "stage1_neg_loss": 0.05952, "stage1_mean_ious": 0.29978, "stage1_s": 0.01002, "stage1_m": 0.0209, "stage1_l": 0.14179, "stage1_h": 0.3123, "loss": 0.25802, "grad_norm": 9.10888, "time": 1.75225}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02473, "stage0_loss_instance_mil": 0.01584, "stage0_bag_acc": 99.02243, "stage0_mean_ious": 0.31275, "stage0_s": 0.0, "stage0_m": 0.03512, "stage0_l": 0.18679, "stage0_h": 0.3263, "stage1_loss_instance_mil": 0.15732, "stage1_bag_acc": 99.09921, "stage1_neg_loss": 0.05963, "stage1_mean_ious": 0.29393, "stage1_s": 0.0, "stage1_m": 0.02529, "stage1_l": 0.18419, "stage1_h": 0.30683, "loss": 0.2328, "grad_norm": 8.1684, "time": 1.73441}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02709, "stage0_loss_instance_mil": 0.01122, "stage0_bag_acc": 99.34719, "stage0_mean_ious": 0.32746, "stage0_s": 0.0, "stage0_m": 0.03496, "stage0_l": 0.22028, "stage0_h": 0.34296, "stage1_loss_instance_mil": 0.13723, "stage1_bag_acc": 99.29663, "stage1_neg_loss": 0.05583, "stage1_mean_ious": 0.30893, "stage1_s": 0.0, "stage1_m": 0.02457, "stage1_l": 0.21284, "stage1_h": 0.32508, "loss": 0.20427, "grad_norm": 9.53494, "time": 1.75809}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.102, "bbox_mAP_50": 0.255, "bbox_mAP_75": 0.182, "bbox_mAP_s": 0.11, "bbox_mAP_m": 0.071, "bbox_mAP_l": 0.027, "bbox_mAP_copypaste": "0.102 0.255 0.182 0.110 0.071 0.027"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07232, "stage0_loss_instance_mil": 0.00772, "stage0_bag_acc": 99.7614, "stage0_mean_ious": 0.34147, "stage0_s": 0.0, "stage0_m": 0.04651, "stage0_l": 0.27217, "stage0_h": 0.34869, "stage1_loss_instance_mil": 0.12475, "stage1_bag_acc": 99.86667, "stage1_neg_loss": 0.0499, "stage1_mean_ious": 0.3194, "stage1_s": 0.0, "stage1_m": 0.03597, "stage1_l": 0.26633, "stage1_h": 0.32529, "loss": 0.18236, "grad_norm": 8.11283, "time": 1.76824}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02416, "stage0_loss_instance_mil": 0.01519, "stage0_bag_acc": 99.18921, "stage0_mean_ious": 0.29136, "stage0_s": 0.0, "stage0_m": 0.03641, "stage0_l": 0.22631, "stage0_h": 0.29981, "stage1_loss_instance_mil": 0.12991, "stage1_bag_acc": 99.36134, "stage1_neg_loss": 0.0549, "stage1_mean_ious": 0.27639, "stage1_s": 0.0, "stage1_m": 0.02391, "stage1_l": 0.2156, "stage1_h": 0.28549, "loss": 0.2, "grad_norm": 8.30564, "time": 1.75312}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02404, "stage0_loss_instance_mil": 0.01494, "stage0_bag_acc": 99.47473, "stage0_mean_ious": 0.33312, "stage0_s": 0.0, "stage0_m": 0.05672, "stage0_l": 0.19786, "stage0_h": 0.34844, "stage1_loss_instance_mil": 0.12348, "stage1_bag_acc": 99.02924, "stage1_neg_loss": 0.05243, "stage1_mean_ious": 0.31287, "stage1_s": 0.0, "stage1_m": 0.04182, "stage1_l": 0.18905, "stage1_h": 0.32817, "loss": 0.19084, "grad_norm": 6.85803, "time": 1.75921}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07321, "stage0_loss_instance_mil": 0.00976, "stage0_bag_acc": 99.62324, "stage0_mean_ious": 0.34067, "stage0_s": 0.0, "stage0_m": 0.00961, "stage0_l": 0.18101, "stage0_h": 0.35705, "stage1_loss_instance_mil": 0.10701, "stage1_bag_acc": 99.32518, "stage1_neg_loss": 0.04946, "stage1_mean_ious": 0.31896, "stage1_s": 0.0, "stage1_m": 0.00705, "stage1_l": 0.17196, "stage1_h": 0.33477, "loss": 0.16622, "grad_norm": 7.91823, "time": 1.79043}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.0256, "stage0_loss_instance_mil": 0.01002, "stage0_bag_acc": 99.53175, "stage0_mean_ious": 0.31614, "stage0_s": 0.0, "stage0_m": 0.04133, "stage0_l": 0.15309, "stage0_h": 0.33704, "stage1_loss_instance_mil": 0.11282, "stage1_bag_acc": 99.39008, "stage1_neg_loss": 0.04874, "stage1_mean_ious": 0.3003, "stage1_s": 0.0, "stage1_m": 0.03152, "stage1_l": 0.14487, "stage1_h": 0.32017, "loss": 0.17159, "grad_norm": 6.44212, "time": 1.77424}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02534, "stage0_loss_instance_mil": 0.02675, "stage0_bag_acc": 98.50407, "stage0_mean_ious": 0.28959, "stage0_s": 0.0, "stage0_m": 0.06207, "stage0_l": 0.16687, "stage0_h": 0.30266, "stage1_loss_instance_mil": 0.11946, "stage1_bag_acc": 98.75844, "stage1_neg_loss": 0.05437, "stage1_mean_ious": 0.27517, "stage1_s": 0.0, "stage1_m": 0.0445, "stage1_l": 0.15532, "stage1_h": 0.28999, "loss": 0.20058, "grad_norm": 9.17691, "time": 1.75395}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07423, "stage0_loss_instance_mil": 0.00946, "stage0_bag_acc": 99.32165, "stage0_mean_ious": 0.31505, "stage0_s": 0.0, "stage0_m": 0.0518, "stage0_l": 0.17621, "stage0_h": 0.33098, "stage1_loss_instance_mil": 0.10123, "stage1_bag_acc": 99.60318, "stage1_neg_loss": 0.04162, "stage1_mean_ious": 0.30374, "stage1_s": 0.0, "stage1_m": 0.03571, "stage1_l": 0.17251, "stage1_h": 0.31934, "loss": 0.1523, "grad_norm": 5.51668, "time": 1.8087}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.0258, "stage0_loss_instance_mil": 0.00389, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.27807, "stage0_s": 0.0, "stage0_m": 0.04773, "stage0_l": 0.14822, "stage0_h": 0.28935, "stage1_loss_instance_mil": 0.10108, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04827, "stage1_mean_ious": 0.27023, "stage1_s": 0.0, "stage1_m": 0.0359, "stage1_l": 0.14929, "stage1_h": 0.28131, "loss": 0.15323, "grad_norm": 5.42019, "time": 1.76485}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02471, "stage0_loss_instance_mil": 0.00635, "stage0_bag_acc": 99.80778, "stage0_mean_ious": 0.27679, "stage0_s": 0.0, "stage0_m": 0.04985, "stage0_l": 0.15882, "stage0_h": 0.29825, "stage1_loss_instance_mil": 0.09647, "stage1_bag_acc": 99.80778, "stage1_neg_loss": 0.0431, "stage1_mean_ious": 0.26579, "stage1_s": 0.0, "stage1_m": 0.04141, "stage1_l": 0.15377, "stage1_h": 0.28782, "loss": 0.14593, "grad_norm": 4.8996, "time": 1.74876}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 180, "bbox_mAP": 0.09, "bbox_mAP_50": 0.226, "bbox_mAP_75": 0.166, "bbox_mAP_s": 0.093, "bbox_mAP_m": 0.051, "bbox_mAP_l": 0.022, "bbox_mAP_copypaste": "0.090 0.226 0.166 0.093 0.051 0.022"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07869, "stage0_loss_instance_mil": 0.00468, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.28601, "stage0_s": 0.0, "stage0_m": 0.04639, "stage0_l": 0.18957, "stage0_h": 0.30121, "stage1_loss_instance_mil": 0.09104, "stage1_bag_acc": 99.55171, "stage1_neg_loss": 0.04146, "stage1_mean_ious": 0.27919, "stage1_s": 0.0, "stage1_m": 0.03955, "stage1_l": 0.19351, "stage1_h": 0.29458, "loss": 0.13718, "grad_norm": 5.06345, "time": 1.82036}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02606, "stage0_loss_instance_mil": 0.00541, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.28922, "stage0_s": 0.0, "stage0_m": 0.02343, "stage0_l": 0.20048, "stage0_h": 0.30471, "stage1_loss_instance_mil": 0.08948, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.04403, "stage1_mean_ious": 0.27764, "stage1_s": 0.0, "stage1_m": 0.01856, "stage1_l": 0.19131, "stage1_h": 0.29266, "loss": 0.13892, "grad_norm": 4.80337, "time": 1.74949}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02743, "stage0_loss_instance_mil": 0.00488, "stage0_bag_acc": 99.71861, "stage0_mean_ious": 0.28199, "stage0_s": 0.0, "stage0_m": 0.02565, "stage0_l": 0.17857, "stage0_h": 0.29396, "stage1_loss_instance_mil": 0.09681, "stage1_bag_acc": 99.71385, "stage1_neg_loss": 0.04712, "stage1_mean_ious": 0.27106, "stage1_s": 0.0, "stage1_m": 0.01922, "stage1_l": 0.1736, "stage1_h": 0.28255, "loss": 0.14881, "grad_norm": 5.45065, "time": 1.79641}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07355, "stage0_loss_instance_mil": 0.00461, "stage0_bag_acc": 99.91667, "stage0_mean_ious": 0.31722, "stage0_s": 0.0, "stage0_m": 0.05384, "stage0_l": 0.17617, "stage0_h": 0.33263, "stage1_loss_instance_mil": 0.08581, "stage1_bag_acc": 99.78333, "stage1_neg_loss": 0.04067, "stage1_mean_ious": 0.31224, "stage1_s": 0.0, "stage1_m": 0.04483, "stage1_l": 0.16734, "stage1_h": 0.32816, "loss": 0.13109, "grad_norm": 5.1229, "time": 1.80009}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02471, "stage0_loss_instance_mil": 0.00387, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.2885, "stage0_s": 0.0, "stage0_m": 0.04047, "stage0_l": 0.17111, "stage0_h": 0.30841, "stage1_loss_instance_mil": 0.09092, "stage1_bag_acc": 99.57466, "stage1_neg_loss": 0.0439, "stage1_mean_ious": 0.27344, "stage1_s": 0.0, "stage1_m": 0.03245, "stage1_l": 0.15881, "stage1_h": 0.29438, "loss": 0.13869, "grad_norm": 4.55593, "time": 1.75877}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02559, "stage0_loss_instance_mil": 0.0022, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.29215, "stage0_s": 0.0, "stage0_m": 0.02381, "stage0_l": 0.18523, "stage0_h": 0.29958, "stage1_loss_instance_mil": 0.09042, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04112, "stage1_mean_ious": 0.27841, "stage1_s": 0.0, "stage1_m": 0.01931, "stage1_l": 0.18371, "stage1_h": 0.28499, "loss": 0.13374, "grad_norm": 4.36763, "time": 1.78699}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07474, "stage0_loss_instance_mil": 0.00253, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.27443, "stage0_s": 0.0, "stage0_m": 0.029, "stage0_l": 0.15578, "stage0_h": 0.28373, "stage1_loss_instance_mil": 0.09842, "stage1_bag_acc": 99.61004, "stage1_neg_loss": 0.04514, "stage1_mean_ious": 0.26139, "stage1_s": 0.0, "stage1_m": 0.02343, "stage1_l": 0.1592, "stage1_h": 0.2691, "loss": 0.14609, "grad_norm": 4.74116, "time": 1.77339}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18840, "data_time": 0.02513, "stage0_loss_instance_mil": 0.00497, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.30857, "stage0_s": 0.0, "stage0_m": 0.03, "stage0_l": 0.16933, "stage0_h": 0.32343, "stage1_loss_instance_mil": 0.08373, "stage1_bag_acc": 99.82143, "stage1_neg_loss": 0.04141, "stage1_mean_ious": 0.28881, "stage1_s": 0.0, "stage1_m": 0.02605, "stage1_l": 0.16353, "stage1_h": 0.30291, "loss": 0.13011, "grad_norm": 4.49825, "time": 1.79733}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18840, "data_time": 0.02509, "stage0_loss_instance_mil": 0.00315, "stage0_bag_acc": 99.76623, "stage0_mean_ious": 0.31502, "stage0_s": 0.0, "stage0_m": 0.0545, "stage0_l": 0.20161, "stage0_h": 0.33175, "stage1_loss_instance_mil": 0.08254, "stage1_bag_acc": 99.79144, "stage1_neg_loss": 0.03997, "stage1_mean_ious": 0.29757, "stage1_s": 0.0, "stage1_m": 0.04035, "stage1_l": 0.19842, "stage1_h": 0.31342, "loss": 0.12567, "grad_norm": 5.27122, "time": 1.79631}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 180, "bbox_mAP": 0.097, "bbox_mAP_50": 0.249, "bbox_mAP_75": 0.176, "bbox_mAP_s": 0.096, "bbox_mAP_m": 0.056, "bbox_mAP_l": 0.022, "bbox_mAP_copypaste": "0.097 0.249 0.176 0.096 0.056 0.022"}
