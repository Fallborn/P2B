{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=2,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ]))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='Adam', lr=0.003, weight_decay=0.001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=1,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [1]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0003, "memory": 9759, "data_time": 0.06031, "stage0_loss_instance_mil": 0.48877, "stage0_bag_acc": 50.42407, "stage0_mean_ious": 0.10312, "stage0_s": 0.0, "stage0_m": 0.02346, "stage0_l": 0.07592, "stage0_h": 0.09713, "stage1_loss_instance_mil": 0.33335, "stage1_bag_acc": 39.47347, "stage1_neg_loss": 0.05322, "stage1_mean_ious": 0.10767, "stage1_s": 0.0, "stage1_m": 0.02514, "stage1_l": 0.07914, "stage1_h": 0.10035, "loss": 0.87534, "grad_norm": 13.10772, "time": 0.92927}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0006, "memory": 9759, "data_time": 0.01327, "stage0_loss_instance_mil": 0.45507, "stage0_bag_acc": 58.91559, "stage0_mean_ious": 0.11429, "stage0_s": 0.0, "stage0_m": 0.01836, "stage0_l": 0.10081, "stage0_h": 0.10852, "stage1_loss_instance_mil": 0.39003, "stage1_bag_acc": 57.79196, "stage1_neg_loss": 0.11078, "stage1_mean_ious": 0.11163, "stage1_s": 0.0, "stage1_m": 0.02163, "stage1_l": 0.10012, "stage1_h": 0.10501, "loss": 0.95589, "grad_norm": 20.44077, "time": 0.88455}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0009, "memory": 9759, "data_time": 0.01295, "stage0_loss_instance_mil": 0.61444, "stage0_bag_acc": 38.88893, "stage0_mean_ious": 0.10887, "stage0_s": 0.0, "stage0_m": 0.03121, "stage0_l": 0.08533, "stage0_h": 0.10248, "stage1_loss_instance_mil": 0.26428, "stage1_bag_acc": 36.96101, "stage1_neg_loss": 0.01336, "stage1_mean_ious": 0.10534, "stage1_s": 0.0, "stage1_m": 0.03119, "stage1_l": 0.08267, "stage1_h": 0.09848, "loss": 0.89208, "grad_norm": 3.99289, "time": 0.87737}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0012, "memory": 9759, "data_time": 0.01354, "stage0_loss_instance_mil": 0.63053, "stage0_bag_acc": 23.57533, "stage0_mean_ious": 0.12613, "stage0_s": 0.0, "stage0_m": 0.01692, "stage0_l": 0.09475, "stage0_h": 0.12269, "stage1_loss_instance_mil": 0.18963, "stage1_bag_acc": 29.02132, "stage1_neg_loss": 0.01387, "stage1_mean_ious": 0.12234, "stage1_s": 0.0, "stage1_m": 0.01843, "stage1_l": 0.09623, "stage1_h": 0.11774, "loss": 0.83403, "grad_norm": 2.19287, "time": 0.90878}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0015, "memory": 9759, "data_time": 0.01548, "stage0_loss_instance_mil": 0.62842, "stage0_bag_acc": 25.42378, "stage0_mean_ious": 0.10622, "stage0_s": 0.0, "stage0_m": 0.01439, "stage0_l": 0.08751, "stage0_h": 0.10265, "stage1_loss_instance_mil": 0.1917, "stage1_bag_acc": 30.91707, "stage1_neg_loss": 0.01847, "stage1_mean_ious": 0.10319, "stage1_s": 0.0, "stage1_m": 0.01302, "stage1_l": 0.0859, "stage1_h": 0.09932, "loss": 0.83859, "grad_norm": 1.89089, "time": 0.87939}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0018, "memory": 9759, "data_time": 0.01373, "stage0_loss_instance_mil": 0.64403, "stage0_bag_acc": 29.42199, "stage0_mean_ious": 0.12792, "stage0_s": 0.0, "stage0_m": 0.01458, "stage0_l": 0.10084, "stage0_h": 0.12095, "stage1_loss_instance_mil": 0.2245, "stage1_bag_acc": 31.54357, "stage1_neg_loss": 0.13376, "stage1_mean_ious": 0.12556, "stage1_s": 0.0, "stage1_m": 0.01466, "stage1_l": 0.09657, "stage1_h": 0.11924, "loss": 1.00229, "grad_norm": 40.00075, "time": 0.87085}
{"mode": "val", "epoch": 1, "iter": 300, "lr": 0.0018, "eval_iter_num": 720, "bbox_mAP": 0.015, "bbox_mAP_50": 0.062, "bbox_mAP_75": 0.024, "bbox_mAP_s": 0.007, "bbox_mAP_m": 0.002, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.015 0.062 0.024 0.007 0.002 0.001"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00209, "memory": 9759, "data_time": 0.05807, "stage0_loss_instance_mil": 0.62384, "stage0_bag_acc": 26.52806, "stage0_mean_ious": 0.13829, "stage0_s": 0.0, "stage0_m": 0.00865, "stage0_l": 0.11831, "stage0_h": 0.12999, "stage1_loss_instance_mil": 0.19992, "stage1_bag_acc": 28.19697, "stage1_neg_loss": 0.01124, "stage1_mean_ious": 0.14751, "stage1_s": 0.0, "stage1_m": 0.00835, "stage1_l": 0.11565, "stage1_h": 0.14179, "loss": 0.835, "grad_norm": 1.29406, "time": 0.94546}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00239, "memory": 9759, "data_time": 0.01303, "stage0_loss_instance_mil": 0.63431, "stage0_bag_acc": 20.14253, "stage0_mean_ious": 0.10994, "stage0_s": 0.0, "stage0_m": 0.00285, "stage0_l": 0.09005, "stage0_h": 0.10832, "stage1_loss_instance_mil": 0.17014, "stage1_bag_acc": 24.06358, "stage1_neg_loss": 0.01535, "stage1_mean_ious": 0.11129, "stage1_s": 0.0, "stage1_m": 0.0042, "stage1_l": 0.09355, "stage1_h": 0.1096, "loss": 0.81979, "grad_norm": 1.46822, "time": 0.894}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00269, "memory": 9759, "data_time": 0.01396, "stage0_loss_instance_mil": 0.65325, "stage0_bag_acc": 19.78579, "stage0_mean_ious": 0.10867, "stage0_s": 0.0, "stage0_m": 0.01484, "stage0_l": 0.09248, "stage0_h": 0.10062, "stage1_loss_instance_mil": 0.1795, "stage1_bag_acc": 19.08139, "stage1_neg_loss": 0.01114, "stage1_mean_ious": 0.1129, "stage1_s": 0.0, "stage1_m": 0.0175, "stage1_l": 0.09797, "stage1_h": 0.10426, "loss": 0.8439, "grad_norm": 1.44155, "time": 0.90383}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00299, "memory": 9759, "data_time": 0.01411, "stage0_loss_instance_mil": 0.64382, "stage0_bag_acc": 25.92313, "stage0_mean_ious": 0.076, "stage0_s": 0.0, "stage0_m": 0.01607, "stage0_l": 0.07051, "stage0_h": 0.06828, "stage1_loss_instance_mil": 0.19451, "stage1_bag_acc": 21.57188, "stage1_neg_loss": 0.02326, "stage1_mean_ious": 0.07573, "stage1_s": 0.0, "stage1_m": 0.01741, "stage1_l": 0.07405, "stage1_h": 0.0672, "loss": 0.86159, "grad_norm": 2.54155, "time": 0.88521}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.003, "memory": 9759, "data_time": 0.01521, "stage0_loss_instance_mil": 0.64245, "stage0_bag_acc": 17.96587, "stage0_mean_ious": 0.06141, "stage0_s": 0.0, "stage0_m": 0.00807, "stage0_l": 0.07221, "stage0_h": 0.05285, "stage1_loss_instance_mil": 0.19208, "stage1_bag_acc": 15.38197, "stage1_neg_loss": 0.00552, "stage1_mean_ious": 0.06098, "stage1_s": 0.0, "stage1_m": 0.01098, "stage1_l": 0.07089, "stage1_h": 0.05248, "loss": 0.84006, "grad_norm": 1.14327, "time": 0.90942}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.003, "memory": 9759, "data_time": 0.01387, "stage0_loss_instance_mil": 0.6133, "stage0_bag_acc": 24.67015, "stage0_mean_ious": 0.06714, "stage0_s": 0.0, "stage0_m": 0.0285, "stage0_l": 0.0828, "stage0_h": 0.0535, "stage1_loss_instance_mil": 0.1752, "stage1_bag_acc": 26.36599, "stage1_neg_loss": 0.01698, "stage1_mean_ious": 0.06446, "stage1_s": 0.0, "stage1_m": 0.03392, "stage1_l": 0.08389, "stage1_h": 0.04939, "loss": 0.80548, "grad_norm": 1.27649, "time": 0.88715}
{"mode": "val", "epoch": 2, "iter": 300, "lr": 0.003, "eval_iter_num": 720, "bbox_mAP": 0.001, "bbox_mAP_50": 0.003, "bbox_mAP_75": 0.002, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.001 0.003 0.002 0.000 0.000 0.000"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.003, "memory": 9759, "data_time": 0.05882, "stage0_loss_instance_mil": 0.63983, "stage0_bag_acc": 29.02691, "stage0_mean_ious": 0.08058, "stage0_s": 0.0, "stage0_m": 0.01851, "stage0_l": 0.08308, "stage0_h": 0.07006, "stage1_loss_instance_mil": 0.19264, "stage1_bag_acc": 25.04466, "stage1_neg_loss": 0.01316, "stage1_mean_ious": 0.0803, "stage1_s": 0.0, "stage1_m": 0.01693, "stage1_l": 0.0881, "stage1_h": 0.06886, "loss": 0.84564, "grad_norm": 1.28682, "time": 0.92693}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.003, "memory": 9759, "data_time": 0.01445, "stage0_loss_instance_mil": 0.63147, "stage0_bag_acc": 22.99761, "stage0_mean_ious": 0.12574, "stage0_s": 0.0, "stage0_m": 0.01762, "stage0_l": 0.09614, "stage0_h": 0.11865, "stage1_loss_instance_mil": 0.18289, "stage1_bag_acc": 20.71789, "stage1_neg_loss": 0.01369, "stage1_mean_ious": 0.12931, "stage1_s": 0.0, "stage1_m": 0.01703, "stage1_l": 0.10272, "stage1_h": 0.12158, "loss": 0.82805, "grad_norm": 1.05079, "time": 0.90173}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.003, "memory": 9759, "data_time": 0.01519, "stage0_loss_instance_mil": 0.62432, "stage0_bag_acc": 20.77401, "stage0_mean_ious": 0.09307, "stage0_s": 0.0, "stage0_m": 0.01999, "stage0_l": 0.07652, "stage0_h": 0.08862, "stage1_loss_instance_mil": 0.17577, "stage1_bag_acc": 20.7814, "stage1_neg_loss": 0.01463, "stage1_mean_ious": 0.09328, "stage1_s": 0.0, "stage1_m": 0.02109, "stage1_l": 0.07606, "stage1_h": 0.08807, "loss": 0.81472, "grad_norm": 1.16377, "time": 0.91078}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.003, "memory": 9759, "data_time": 0.01543, "stage0_loss_instance_mil": 0.63674, "stage0_bag_acc": 18.04042, "stage0_mean_ious": 0.10475, "stage0_s": 0.0, "stage0_m": 0.02906, "stage0_l": 0.07394, "stage0_h": 0.09717, "stage1_loss_instance_mil": 0.16379, "stage1_bag_acc": 19.75662, "stage1_neg_loss": 0.0129, "stage1_mean_ious": 0.1059, "stage1_s": 0.0, "stage1_m": 0.03429, "stage1_l": 0.07646, "stage1_h": 0.0966, "loss": 0.81343, "grad_norm": 1.4761, "time": 0.89571}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.003, "memory": 9759, "data_time": 0.01447, "stage0_loss_instance_mil": 0.62352, "stage0_bag_acc": 24.64918, "stage0_mean_ious": 0.1056, "stage0_s": 0.0, "stage0_m": 0.01585, "stage0_l": 0.07468, "stage0_h": 0.10282, "stage1_loss_instance_mil": 0.17724, "stage1_bag_acc": 25.94879, "stage1_neg_loss": 0.01353, "stage1_mean_ious": 0.09804, "stage1_s": 0.0, "stage1_m": 0.017, "stage1_l": 0.07235, "stage1_h": 0.09439, "loss": 0.81429, "grad_norm": 1.29246, "time": 0.92328}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.003, "memory": 9759, "data_time": 0.01471, "stage0_loss_instance_mil": 0.62046, "stage0_bag_acc": 25.20515, "stage0_mean_ious": 0.10486, "stage0_s": 0.0, "stage0_m": 0.01475, "stage0_l": 0.09277, "stage0_h": 0.09882, "stage1_loss_instance_mil": 0.16085, "stage1_bag_acc": 25.12243, "stage1_neg_loss": 0.01713, "stage1_mean_ious": 0.10158, "stage1_s": 0.0, "stage1_m": 0.01407, "stage1_l": 0.0947, "stage1_h": 0.09426, "loss": 0.79844, "grad_norm": 1.13956, "time": 0.89267}
{"mode": "val", "epoch": 3, "iter": 300, "lr": 0.003, "eval_iter_num": 720, "bbox_mAP": 0.013, "bbox_mAP_50": 0.044, "bbox_mAP_75": 0.02, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.013 0.044 0.020 0.010 0.005 0.002"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.003, "memory": 9759, "data_time": 0.05816, "stage0_loss_instance_mil": 0.61454, "stage0_bag_acc": 28.55685, "stage0_mean_ious": 0.09678, "stage0_s": 0.0, "stage0_m": 0.00738, "stage0_l": 0.08797, "stage0_h": 0.08661, "stage1_loss_instance_mil": 0.16117, "stage1_bag_acc": 21.87816, "stage1_neg_loss": 0.01768, "stage1_mean_ious": 0.09084, "stage1_s": 0.0, "stage1_m": 0.00692, "stage1_l": 0.08629, "stage1_h": 0.08018, "loss": 0.7934, "grad_norm": 1.14389, "time": 0.93029}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.003, "memory": 9759, "data_time": 0.01451, "stage0_loss_instance_mil": 0.61236, "stage0_bag_acc": 25.3321, "stage0_mean_ious": 0.10367, "stage0_s": 0.0, "stage0_m": 0.00373, "stage0_l": 0.06088, "stage0_h": 0.1021, "stage1_loss_instance_mil": 0.16643, "stage1_bag_acc": 29.37956, "stage1_neg_loss": 0.01896, "stage1_mean_ious": 0.09545, "stage1_s": 0.0, "stage1_m": 0.00432, "stage1_l": 0.06136, "stage1_h": 0.09289, "loss": 0.79775, "grad_norm": 1.1517, "time": 0.89177}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.003, "memory": 9759, "data_time": 0.01377, "stage0_loss_instance_mil": 0.60899, "stage0_bag_acc": 29.81069, "stage0_mean_ious": 0.1211, "stage0_s": 0.0, "stage0_m": 0.01543, "stage0_l": 0.12091, "stage0_h": 0.11407, "stage1_loss_instance_mil": 0.1733, "stage1_bag_acc": 25.19393, "stage1_neg_loss": 0.01742, "stage1_mean_ious": 0.11369, "stage1_s": 0.0, "stage1_m": 0.01474, "stage1_l": 0.11592, "stage1_h": 0.10597, "loss": 0.79971, "grad_norm": 0.9571, "time": 0.90512}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.003, "memory": 9759, "data_time": 0.01414, "stage0_loss_instance_mil": 0.60462, "stage0_bag_acc": 28.55433, "stage0_mean_ious": 0.12285, "stage0_s": 0.0, "stage0_m": 0.03069, "stage0_l": 0.11312, "stage0_h": 0.113, "stage1_loss_instance_mil": 0.16073, "stage1_bag_acc": 25.0096, "stage1_neg_loss": 0.01979, "stage1_mean_ious": 0.11552, "stage1_s": 0.0, "stage1_m": 0.03179, "stage1_l": 0.11681, "stage1_h": 0.10294, "loss": 0.78514, "grad_norm": 1.09424, "time": 0.88145}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.003, "memory": 9759, "data_time": 0.01404, "stage0_loss_instance_mil": 0.61933, "stage0_bag_acc": 24.44745, "stage0_mean_ious": 0.11185, "stage0_s": 0.0, "stage0_m": 0.01419, "stage0_l": 0.09404, "stage0_h": 0.10375, "stage1_loss_instance_mil": 0.15474, "stage1_bag_acc": 25.8953, "stage1_neg_loss": 0.01938, "stage1_mean_ious": 0.10257, "stage1_s": 0.0, "stage1_m": 0.01513, "stage1_l": 0.09432, "stage1_h": 0.09303, "loss": 0.79345, "grad_norm": 0.99459, "time": 0.91449}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.003, "memory": 9759, "data_time": 0.01511, "stage0_loss_instance_mil": 0.61744, "stage0_bag_acc": 24.54852, "stage0_mean_ious": 0.10143, "stage0_s": 0.0, "stage0_m": 0.01712, "stage0_l": 0.06649, "stage0_h": 0.09839, "stage1_loss_instance_mil": 0.16365, "stage1_bag_acc": 23.60643, "stage1_neg_loss": 0.01672, "stage1_mean_ious": 0.09285, "stage1_s": 0.0, "stage1_m": 0.0174, "stage1_l": 0.0711, "stage1_h": 0.08809, "loss": 0.79781, "grad_norm": 0.9244, "time": 0.90624}
{"mode": "val", "epoch": 4, "iter": 300, "lr": 0.003, "eval_iter_num": 720, "bbox_mAP": 0.035, "bbox_mAP_50": 0.12, "bbox_mAP_75": 0.058, "bbox_mAP_s": 0.024, "bbox_mAP_m": 0.013, "bbox_mAP_l": 0.007, "bbox_mAP_copypaste": "0.035 0.120 0.058 0.024 0.013 0.007"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.003, "memory": 9759, "data_time": 0.06389, "stage0_loss_instance_mil": 0.6138, "stage0_bag_acc": 26.04798, "stage0_mean_ious": 0.11329, "stage0_s": 0.0, "stage0_m": 0.02396, "stage0_l": 0.10608, "stage0_h": 0.10276, "stage1_loss_instance_mil": 0.1537, "stage1_bag_acc": 29.16565, "stage1_neg_loss": 0.02053, "stage1_mean_ious": 0.10585, "stage1_s": 0.0, "stage1_m": 0.02532, "stage1_l": 0.10234, "stage1_h": 0.09454, "loss": 0.78803, "grad_norm": 0.96952, "time": 0.95875}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.003, "memory": 9759, "data_time": 0.0166, "stage0_loss_instance_mil": 0.61026, "stage0_bag_acc": 25.0451, "stage0_mean_ious": 0.10723, "stage0_s": 0.0, "stage0_m": 0.00444, "stage0_l": 0.09792, "stage0_h": 0.10029, "stage1_loss_instance_mil": 0.15804, "stage1_bag_acc": 26.30895, "stage1_neg_loss": 0.01917, "stage1_mean_ious": 0.09454, "stage1_s": 0.0, "stage1_m": 0.00529, "stage1_l": 0.09955, "stage1_h": 0.08602, "loss": 0.78747, "grad_norm": 0.92183, "time": 0.90703}
