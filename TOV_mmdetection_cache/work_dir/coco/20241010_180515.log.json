{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+15637e6", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=2,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ]))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=1,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [4]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 9610, "data_time": 0.05909, "stage0_loss_instance_mil": 0.48161, "stage0_bag_acc": 51.5907, "stage0_mean_ious": 0.16546, "stage0_s": 0.0, "stage0_m": 0.02486, "stage0_l": 0.12754, "stage0_h": 0.16337, "stage1_loss_instance_mil": 0.33426, "stage1_bag_acc": 41.35616, "stage1_neg_loss": 0.08437, "stage1_mean_ious": 0.16293, "stage1_s": 0.0, "stage1_m": 0.02281, "stage1_l": 0.12912, "stage1_h": 0.16074, "loss": 0.90023, "grad_norm": 9.80891, "time": 0.98292}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.01988, "memory": 9610, "data_time": 0.01309, "stage0_loss_instance_mil": 0.59793, "stage0_bag_acc": 40.59502, "stage0_mean_ious": 0.09959, "stage0_s": 0.0, "stage0_m": 0.02233, "stage0_l": 0.09064, "stage0_h": 0.09653, "stage1_loss_instance_mil": 0.27084, "stage1_bag_acc": 41.99765, "stage1_neg_loss": 0.03011, "stage1_mean_ious": 0.09535, "stage1_s": 0.0, "stage1_m": 0.02206, "stage1_l": 0.09063, "stage1_h": 0.0914, "loss": 0.89888, "grad_norm": 3.96673, "time": 0.96949}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.02987, "memory": 9610, "data_time": 0.01238, "stage0_loss_instance_mil": 0.65729, "stage0_bag_acc": 24.79188, "stage0_mean_ious": 0.09025, "stage0_s": 0.0, "stage0_m": 0.00654, "stage0_l": 0.08125, "stage0_h": 0.08645, "stage1_loss_instance_mil": 0.20817, "stage1_bag_acc": 25.51866, "stage1_neg_loss": 0.0086, "stage1_mean_ious": 0.08629, "stage1_s": 0.0, "stage1_m": 0.00658, "stage1_l": 0.07711, "stage1_h": 0.08295, "loss": 0.87405, "grad_norm": 1.01695, "time": 0.94179}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.03986, "memory": 9610, "data_time": 0.01299, "stage0_loss_instance_mil": 0.65664, "stage0_bag_acc": 21.71928, "stage0_mean_ious": 0.10107, "stage0_s": 0.0, "stage0_m": 0.01246, "stage0_l": 0.06974, "stage0_h": 0.10475, "stage1_loss_instance_mil": 0.18392, "stage1_bag_acc": 23.21797, "stage1_neg_loss": 0.01105, "stage1_mean_ious": 0.09751, "stage1_s": 0.0, "stage1_m": 0.0129, "stage1_l": 0.07093, "stage1_h": 0.0988, "loss": 0.85162, "grad_norm": 0.67178, "time": 0.97561}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.04985, "memory": 9610, "data_time": 0.01235, "stage0_loss_instance_mil": 0.65374, "stage0_bag_acc": 18.45795, "stage0_mean_ious": 0.11675, "stage0_s": 0.0, "stage0_m": 0.02137, "stage0_l": 0.09841, "stage0_h": 0.11494, "stage1_loss_instance_mil": 0.17548, "stage1_bag_acc": 30.55578, "stage1_neg_loss": 0.01271, "stage1_mean_ious": 0.11291, "stage1_s": 0.0, "stage1_m": 0.02037, "stage1_l": 0.09113, "stage1_h": 0.11227, "loss": 0.84193, "grad_norm": 0.59033, "time": 0.92172}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.05984, "memory": 9610, "data_time": 0.01307, "stage0_loss_instance_mil": 0.62579, "stage0_bag_acc": 31.12913, "stage0_mean_ious": 0.13299, "stage0_s": 0.00297, "stage0_m": 0.04548, "stage0_l": 0.09116, "stage0_h": 0.13713, "stage1_loss_instance_mil": 0.18317, "stage1_bag_acc": 38.96499, "stage1_neg_loss": 0.01888, "stage1_mean_ious": 0.12692, "stage1_s": 0.00266, "stage1_m": 0.04734, "stage1_l": 0.08739, "stage1_h": 0.13084, "loss": 0.82784, "grad_norm": 0.71288, "time": 0.92889}
{"mode": "val", "epoch": 1, "iter": 300, "lr": 0.05984, "eval_iter_num": 720, "bbox_mAP": 0.002, "bbox_mAP_50": 0.009, "bbox_mAP_75": 0.004, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.002 0.009 0.004 0.001 0.001 0.000"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.06983, "memory": 9610, "data_time": 0.06106, "stage0_loss_instance_mil": 0.63596, "stage0_bag_acc": 24.55472, "stage0_mean_ious": 0.10816, "stage0_s": 0.0, "stage0_m": 0.00757, "stage0_l": 0.0864, "stage0_h": 0.10632, "stage1_loss_instance_mil": 0.17604, "stage1_bag_acc": 31.79027, "stage1_neg_loss": 0.02213, "stage1_mean_ious": 0.10461, "stage1_s": 0.0, "stage1_m": 0.00699, "stage1_l": 0.0915, "stage1_h": 0.10112, "loss": 0.83413, "grad_norm": 0.70903, "time": 0.98695}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.07982, "memory": 9610, "data_time": 0.01199, "stage0_loss_instance_mil": 0.63545, "stage0_bag_acc": 22.18293, "stage0_mean_ious": 0.11592, "stage0_s": 0.0, "stage0_m": 0.0394, "stage0_l": 0.08772, "stage0_h": 0.11457, "stage1_loss_instance_mil": 0.17608, "stage1_bag_acc": 37.00141, "stage1_neg_loss": 0.01688, "stage1_mean_ious": 0.11294, "stage1_s": 0.0, "stage1_m": 0.03994, "stage1_l": 0.08898, "stage1_h": 0.10969, "loss": 0.82841, "grad_norm": 0.55392, "time": 0.92238}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.08981, "memory": 9610, "data_time": 0.01269, "stage0_loss_instance_mil": 0.60947, "stage0_bag_acc": 31.01901, "stage0_mean_ious": 0.09071, "stage0_s": 0.00137, "stage0_m": 0.0209, "stage0_l": 0.07936, "stage0_h": 0.08609, "stage1_loss_instance_mil": 0.19278, "stage1_bag_acc": 31.73149, "stage1_neg_loss": 0.09368, "stage1_mean_ious": 0.08557, "stage1_s": 0.00238, "stage1_m": 0.02, "stage1_l": 0.08127, "stage1_h": 0.08001, "loss": 0.89594, "grad_norm": 3.29626, "time": 0.94793}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0998, "memory": 9610, "data_time": 0.0134, "stage0_loss_instance_mil": 10.10405, "stage0_bag_acc": 18.65687, "stage0_mean_ious": 0.04317, "stage0_s": 0.0, "stage0_m": 0.02213, "stage0_l": 0.06458, "stage0_h": 0.03506, "stage1_loss_instance_mil": 0.43495, "stage1_bag_acc": 24.12528, "stage1_neg_loss": 379.45384, "stage1_mean_ious": 0.03437, "stage1_s": 0.0, "stage1_m": 0.01868, "stage1_l": 0.0546, "stage1_h": 0.02654, "loss": 389.99285, "grad_norm": 4403.27622, "time": 0.96882}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.1, "memory": 9610, "data_time": 0.01274, "stage0_loss_instance_mil": 40.83005, "stage0_bag_acc": 14.82133, "stage0_mean_ious": 0.01283, "stage0_s": 0.0, "stage0_m": 0.00243, "stage0_l": 0.00786, "stage0_h": 0.01193, "stage1_loss_instance_mil": 1.76345, "stage1_bag_acc": 23.04232, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 42.5935, "grad_norm": 1.803, "time": 0.93976}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.1, "memory": 9610, "data_time": 0.01329, "stage0_loss_instance_mil": 36.94914, "stage0_bag_acc": 14.23821, "stage0_mean_ious": 0.0117, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.00563, "stage0_h": 0.01289, "stage1_loss_instance_mil": 1.31247, "stage1_bag_acc": 21.1102, "stage1_neg_loss": 0.05182, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 38.31343, "grad_norm": 1.53855, "time": 0.93794}
{"mode": "val", "epoch": 2, "iter": 300, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.1, "memory": 9610, "data_time": 0.05913, "stage0_loss_instance_mil": 26.15446, "stage0_bag_acc": 29.65797, "stage0_mean_ious": 0.00056, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.00159, "stage0_h": 0.00035, "stage1_loss_instance_mil": 0.34539, "stage1_bag_acc": 28.80948, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 26.49984, "grad_norm": 1e-05, "time": 0.9667}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.1, "memory": 9610, "data_time": 0.01261, "stage0_loss_instance_mil": 25.14228, "stage0_bag_acc": 24.33845, "stage0_mean_ious": 0.00049, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.00098, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.06908, "stage1_bag_acc": 24.58289, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.21136, "grad_norm": 0.23156, "time": 0.93997}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.1, "memory": 9610, "data_time": 0.01276, "stage0_loss_instance_mil": 25.04545, "stage0_bag_acc": 24.03979, "stage0_mean_ious": 0.0, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0, "stage1_bag_acc": 24.22161, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.04545, "grad_norm": 0.0, "time": 0.92814}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.1, "memory": 9610, "data_time": 0.01363, "stage0_loss_instance_mil": 25.22698, "stage0_bag_acc": 25.15565, "stage0_mean_ious": 0.0, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0, "stage1_bag_acc": 25.37787, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.22698, "grad_norm": 0.0, "time": 0.95267}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.1, "memory": 9610, "data_time": 0.01338, "stage0_loss_instance_mil": 25.18808, "stage0_bag_acc": 21.2615, "stage0_mean_ious": 0.0, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0, "stage1_bag_acc": 21.60999, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.18808, "grad_norm": 0.0, "time": 0.95995}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.1, "memory": 9610, "data_time": 0.01303, "stage0_loss_instance_mil": 25.09545, "stage0_bag_acc": 24.79356, "stage0_mean_ious": 0.0, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0, "stage1_bag_acc": 25.17538, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.09545, "grad_norm": 0.30061, "time": 0.9192}
{"mode": "val", "epoch": 3, "iter": 300, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.1, "memory": 9610, "data_time": 0.06247, "stage0_loss_instance_mil": 25.07692, "stage0_bag_acc": 17.77486, "stage0_mean_ious": 0.0, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0, "stage1_bag_acc": 18.08256, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.07692, "grad_norm": 0.0, "time": 1.0036}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.1, "memory": 9610, "data_time": 0.01354, "stage0_loss_instance_mil": 25.14813, "stage0_bag_acc": 26.84664, "stage0_mean_ious": 0.0, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0, "stage1_bag_acc": 27.31418, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.14813, "grad_norm": 0.0, "time": 0.842}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.1, "memory": 9610, "data_time": 0.01335, "stage0_loss_instance_mil": 25.14545, "stage0_bag_acc": 26.61846, "stage0_mean_ious": 0.0, "stage0_s": 0.0, "stage0_m": 0.0, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.0, "stage1_bag_acc": 27.20028, "stage1_neg_loss": 0.0, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.14545, "grad_norm": 0.0, "time": 0.94299}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.1, "memory": 9610, "data_time": 0.01226, "stage0_loss_instance_mil": 25.64434, "stage0_bag_acc": 24.97684, "stage0_mean_ious": 0.00015, "stage0_s": 0.0, "stage0_m": 0.00138, "stage0_l": 0.0, "stage0_h": 0.0, "stage1_loss_instance_mil": 0.06908, "stage1_bag_acc": 26.56371, "stage1_neg_loss": 2e-05, "stage1_mean_ious": 0.0, "stage1_s": 0.0, "stage1_m": 0.0, "stage1_l": 0.0, "stage1_h": 0.0, "loss": 25.71344, "grad_norm": 1.52477, "time": 0.87885}
