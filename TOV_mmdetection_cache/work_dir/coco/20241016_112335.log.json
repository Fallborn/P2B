{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+e282583", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [2]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07477, "stage0_loss_instance_mil": 0.69933, "stage0_bag_acc": 22.80776, "stage0_mean_ious": 0.3742, "stage0_s": 0.0, "stage0_m": 0.06823, "stage0_l": 0.25456, "stage0_h": 0.38557, "stage1_loss_instance_mil": 0.18943, "stage1_bag_acc": 20.60749, "stage1_neg_loss": 0.00056, "stage1_mean_ious": 0.36942, "stage1_s": 0.0, "stage1_m": 0.07321, "stage1_l": 0.26198, "stage1_h": 0.37749, "loss": 0.88932, "grad_norm": 3.18908, "time": 1.77783}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.0256, "stage0_loss_instance_mil": 0.57412, "stage0_bag_acc": 54.15932, "stage0_mean_ious": 0.44917, "stage0_s": 0.0, "stage0_m": 0.0446, "stage0_l": 0.23436, "stage0_h": 0.46967, "stage1_loss_instance_mil": 0.27254, "stage1_bag_acc": 35.97477, "stage1_neg_loss": 0.00148, "stage1_mean_ious": 0.43507, "stage1_s": 0.0, "stage1_m": 0.05149, "stage1_l": 0.24087, "stage1_h": 0.45058, "loss": 0.84814, "grad_norm": 3.86648, "time": 1.71463}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02515, "stage0_loss_instance_mil": 0.20854, "stage0_bag_acc": 91.88321, "stage0_mean_ious": 0.41155, "stage0_s": 0.0, "stage0_m": 0.05896, "stage0_l": 0.23787, "stage0_h": 0.4281, "stage1_loss_instance_mil": 0.35603, "stage1_bag_acc": 83.92293, "stage1_neg_loss": 0.05959, "stage1_mean_ious": 0.39976, "stage1_s": 0.0, "stage1_m": 0.06173, "stage1_l": 0.25768, "stage1_h": 0.41124, "loss": 0.62416, "grad_norm": 9.86351, "time": 1.70617}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18840, "data_time": 0.0737, "stage0_loss_instance_mil": 0.0673, "stage0_bag_acc": 96.4203, "stage0_mean_ious": 0.45012, "stage0_s": 0.0, "stage0_m": 0.04116, "stage0_l": 0.22562, "stage0_h": 0.47544, "stage1_loss_instance_mil": 0.2953, "stage1_bag_acc": 97.4801, "stage1_neg_loss": 0.07638, "stage1_mean_ious": 0.42726, "stage1_s": 0.0, "stage1_m": 0.04022, "stage1_l": 0.23693, "stage1_h": 0.44878, "loss": 0.43897, "grad_norm": 11.37235, "time": 1.7496}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18840, "data_time": 0.02586, "stage0_loss_instance_mil": 0.04131, "stage0_bag_acc": 97.89215, "stage0_mean_ious": 0.43685, "stage0_s": 0.0, "stage0_m": 0.05444, "stage0_l": 0.23252, "stage0_h": 0.46003, "stage1_loss_instance_mil": 0.27063, "stage1_bag_acc": 98.98841, "stage1_neg_loss": 0.08241, "stage1_mean_ious": 0.40889, "stage1_s": 0.0, "stage1_m": 0.05461, "stage1_l": 0.22264, "stage1_h": 0.4291, "loss": 0.39434, "grad_norm": 13.60264, "time": 1.73265}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18840, "data_time": 0.0255, "stage0_loss_instance_mil": 0.04732, "stage0_bag_acc": 96.90773, "stage0_mean_ious": 0.47183, "stage0_s": 0.0, "stage0_m": 0.03013, "stage0_l": 0.22107, "stage0_h": 0.50395, "stage1_loss_instance_mil": 0.26572, "stage1_bag_acc": 98.42828, "stage1_neg_loss": 0.12503, "stage1_mean_ious": 0.445, "stage1_s": 0.0, "stage1_m": 0.02987, "stage1_l": 0.23, "stage1_h": 0.4713, "loss": 0.43806, "grad_norm": 22.38982, "time": 1.69729}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18840, "data_time": 0.07388, "stage0_loss_instance_mil": 0.03492, "stage0_bag_acc": 98.01699, "stage0_mean_ious": 0.49639, "stage0_s": 0.0, "stage0_m": 0.05094, "stage0_l": 0.23216, "stage0_h": 0.52637, "stage1_loss_instance_mil": 0.17008, "stage1_bag_acc": 98.45601, "stage1_neg_loss": 0.0627, "stage1_mean_ious": 0.47523, "stage1_s": 0.0, "stage1_m": 0.04275, "stage1_l": 0.24485, "stage1_h": 0.50126, "loss": 0.2677, "grad_norm": 11.63773, "time": 1.76506}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02501, "stage0_loss_instance_mil": 0.03845, "stage0_bag_acc": 97.61048, "stage0_mean_ious": 0.48558, "stage0_s": 0.0, "stage0_m": 0.07045, "stage0_l": 0.25171, "stage0_h": 0.51256, "stage1_loss_instance_mil": 0.16473, "stage1_bag_acc": 98.46596, "stage1_neg_loss": 0.05555, "stage1_mean_ious": 0.46478, "stage1_s": 0.0, "stage1_m": 0.07378, "stage1_l": 0.25681, "stage1_h": 0.48879, "loss": 0.25873, "grad_norm": 9.27271, "time": 1.69868}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02495, "stage0_loss_instance_mil": 0.01363, "stage0_bag_acc": 99.54798, "stage0_mean_ious": 0.45666, "stage0_s": 0.0, "stage0_m": 0.09583, "stage0_l": 0.2827, "stage0_h": 0.49112, "stage1_loss_instance_mil": 0.12779, "stage1_bag_acc": 99.64242, "stage1_neg_loss": 0.05278, "stage1_mean_ious": 0.43864, "stage1_s": 0.0, "stage1_m": 0.09441, "stage1_l": 0.29272, "stage1_h": 0.46938, "loss": 0.19421, "grad_norm": 8.77617, "time": 1.69157}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.252, "bbox_mAP_50": 0.5, "bbox_mAP_75": 0.409, "bbox_mAP_s": 0.296, "bbox_mAP_m": 0.227, "bbox_mAP_l": 0.153, "bbox_mAP_copypaste": "0.252 0.500 0.409 0.296 0.227 0.153"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07558, "stage0_loss_instance_mil": 0.01079, "stage0_bag_acc": 99.76667, "stage0_mean_ious": 0.46375, "stage0_s": 0.0, "stage0_m": 0.05537, "stage0_l": 0.16886, "stage0_h": 0.49888, "stage1_loss_instance_mil": 0.14987, "stage1_bag_acc": 99.54442, "stage1_neg_loss": 0.04728, "stage1_mean_ious": 0.44953, "stage1_s": 0.0, "stage1_m": 0.05803, "stage1_l": 0.17512, "stage1_h": 0.48106, "loss": 0.20794, "grad_norm": 9.36997, "time": 1.75163}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02485, "stage0_loss_instance_mil": 0.01417, "stage0_bag_acc": 99.20847, "stage0_mean_ious": 0.49798, "stage0_s": 0.0, "stage0_m": 0.06094, "stage0_l": 0.25039, "stage0_h": 0.52825, "stage1_loss_instance_mil": 0.10106, "stage1_bag_acc": 99.33018, "stage1_neg_loss": 0.04254, "stage1_mean_ious": 0.47579, "stage1_s": 0.0, "stage1_m": 0.06514, "stage1_l": 0.25293, "stage1_h": 0.502, "loss": 0.15778, "grad_norm": 6.66234, "time": 1.6746}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02497, "stage0_loss_instance_mil": 0.03112, "stage0_bag_acc": 98.44379, "stage0_mean_ious": 0.48334, "stage0_s": 0.0, "stage0_m": 0.03887, "stage0_l": 0.23396, "stage0_h": 0.51824, "stage1_loss_instance_mil": 0.11522, "stage1_bag_acc": 98.12437, "stage1_neg_loss": 0.04909, "stage1_mean_ious": 0.46523, "stage1_s": 0.0, "stage1_m": 0.0401, "stage1_l": 0.2423, "stage1_h": 0.49536, "loss": 0.19542, "grad_norm": 7.97646, "time": 1.70164}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.075, "stage0_loss_instance_mil": 0.02669, "stage0_bag_acc": 98.88987, "stage0_mean_ious": 0.4815, "stage0_s": 0.0, "stage0_m": 0.05116, "stage0_l": 0.21749, "stage0_h": 0.50941, "stage1_loss_instance_mil": 0.10901, "stage1_bag_acc": 98.83799, "stage1_neg_loss": 0.04973, "stage1_mean_ious": 0.46545, "stage1_s": 0.0, "stage1_m": 0.05852, "stage1_l": 0.22724, "stage1_h": 0.49004, "loss": 0.18542, "grad_norm": 9.41612, "time": 1.7304}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02819, "stage0_loss_instance_mil": 0.01092, "stage0_bag_acc": 99.46385, "stage0_mean_ious": 0.46945, "stage0_s": 0.0, "stage0_m": 0.05674, "stage0_l": 0.23273, "stage0_h": 0.50221, "stage1_loss_instance_mil": 0.08236, "stage1_bag_acc": 99.57883, "stage1_neg_loss": 0.03926, "stage1_mean_ious": 0.45104, "stage1_s": 0.0, "stage1_m": 0.06391, "stage1_l": 0.23638, "stage1_h": 0.47952, "loss": 0.13254, "grad_norm": 5.48154, "time": 1.72181}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02614, "stage0_loss_instance_mil": 0.00768, "stage0_bag_acc": 99.74603, "stage0_mean_ious": 0.516, "stage0_s": 0.0, "stage0_m": 0.04009, "stage0_l": 0.24675, "stage0_h": 0.53853, "stage1_loss_instance_mil": 0.07245, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.04006, "stage1_mean_ious": 0.49555, "stage1_s": 0.0, "stage1_m": 0.04484, "stage1_l": 0.2465, "stage1_h": 0.51542, "loss": 0.12019, "grad_norm": 5.62495, "time": 1.71852}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07366, "stage0_loss_instance_mil": 0.00474, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.49962, "stage0_s": 0.0, "stage0_m": 0.05086, "stage0_l": 0.28857, "stage0_h": 0.5374, "stage1_loss_instance_mil": 0.06491, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03178, "stage1_mean_ious": 0.47572, "stage1_s": 0.0, "stage1_m": 0.05356, "stage1_l": 0.27458, "stage1_h": 0.51084, "loss": 0.10143, "grad_norm": 5.16756, "time": 1.74106}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02744, "stage0_loss_instance_mil": 0.01478, "stage0_bag_acc": 99.49104, "stage0_mean_ious": 0.52201, "stage0_s": 0.0, "stage0_m": 0.06996, "stage0_l": 0.26164, "stage0_h": 0.56806, "stage1_loss_instance_mil": 0.06697, "stage1_bag_acc": 99.53311, "stage1_neg_loss": 0.03647, "stage1_mean_ious": 0.49572, "stage1_s": 0.0, "stage1_m": 0.07879, "stage1_l": 0.26834, "stage1_h": 0.53526, "loss": 0.11822, "grad_norm": 6.09181, "time": 1.70047}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.0273, "stage0_loss_instance_mil": 0.00592, "stage0_bag_acc": 99.80909, "stage0_mean_ious": 0.50171, "stage0_s": 0.0, "stage0_m": 0.04435, "stage0_l": 0.2543, "stage0_h": 0.53931, "stage1_loss_instance_mil": 0.08399, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03977, "stage1_mean_ious": 0.48214, "stage1_s": 0.0, "stage1_m": 0.05369, "stage1_l": 0.27599, "stage1_h": 0.51225, "loss": 0.12968, "grad_norm": 6.84387, "time": 1.71944}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.25, "bbox_mAP_50": 0.509, "bbox_mAP_75": 0.407, "bbox_mAP_s": 0.289, "bbox_mAP_m": 0.216, "bbox_mAP_l": 0.141, "bbox_mAP_copypaste": "0.250 0.509 0.407 0.289 0.216 0.141"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07977, "stage0_loss_instance_mil": 0.01336, "stage0_bag_acc": 99.13095, "stage0_mean_ious": 0.53076, "stage0_s": 0.0, "stage0_m": 0.06397, "stage0_l": 0.20478, "stage0_h": 0.57303, "stage1_loss_instance_mil": 0.06107, "stage1_bag_acc": 99.51331, "stage1_neg_loss": 0.02966, "stage1_mean_ious": 0.50947, "stage1_s": 0.0, "stage1_m": 0.07813, "stage1_l": 0.22326, "stage1_h": 0.54546, "loss": 0.10409, "grad_norm": 5.14748, "time": 1.7735}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.03171, "stage0_loss_instance_mil": 0.02108, "stage0_bag_acc": 98.50225, "stage0_mean_ious": 0.51704, "stage0_s": 0.0, "stage0_m": 0.07484, "stage0_l": 0.28582, "stage0_h": 0.55428, "stage1_loss_instance_mil": 0.0645, "stage1_bag_acc": 98.87396, "stage1_neg_loss": 0.03298, "stage1_mean_ious": 0.49187, "stage1_s": 0.0, "stage1_m": 0.08692, "stage1_l": 0.30341, "stage1_h": 0.5213, "loss": 0.11856, "grad_norm": 5.68686, "time": 1.73138}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.03196, "stage0_loss_instance_mil": 0.01149, "stage0_bag_acc": 99.58359, "stage0_mean_ious": 0.54939, "stage0_s": 0.0, "stage0_m": 0.03572, "stage0_l": 0.24088, "stage0_h": 0.58087, "stage1_loss_instance_mil": 0.06732, "stage1_bag_acc": 99.51974, "stage1_neg_loss": 0.03009, "stage1_mean_ious": 0.52588, "stage1_s": 0.0, "stage1_m": 0.04511, "stage1_l": 0.27281, "stage1_h": 0.54835, "loss": 0.10889, "grad_norm": 5.1842, "time": 1.73883}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07901, "stage0_loss_instance_mil": 0.00891, "stage0_bag_acc": 99.47395, "stage0_mean_ious": 0.53951, "stage0_s": 0.0, "stage0_m": 0.05474, "stage0_l": 0.28223, "stage0_h": 0.57296, "stage1_loss_instance_mil": 0.05558, "stage1_bag_acc": 99.47948, "stage1_neg_loss": 0.03098, "stage1_mean_ious": 0.52017, "stage1_s": 0.0, "stage1_m": 0.06093, "stage1_l": 0.28646, "stage1_h": 0.54956, "loss": 0.09546, "grad_norm": 4.69071, "time": 1.79388}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.03253, "stage0_loss_instance_mil": 0.0062, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.56997, "stage0_s": 0.0, "stage0_m": 0.03907, "stage0_l": 0.2146, "stage0_h": 0.61072, "stage1_loss_instance_mil": 0.05563, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.03055, "stage1_mean_ious": 0.54625, "stage1_s": 0.0, "stage1_m": 0.04266, "stage1_l": 0.22445, "stage1_h": 0.58148, "loss": 0.09238, "grad_norm": 4.76259, "time": 1.7447}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.03314, "stage0_loss_instance_mil": 0.00789, "stage0_bag_acc": 99.53607, "stage0_mean_ious": 0.54938, "stage0_s": 0.0, "stage0_m": 0.07368, "stage0_l": 0.25752, "stage0_h": 0.59027, "stage1_loss_instance_mil": 0.05753, "stage1_bag_acc": 99.69048, "stage1_neg_loss": 0.0311, "stage1_mean_ious": 0.52077, "stage1_s": 0.0, "stage1_m": 0.08399, "stage1_l": 0.26936, "stage1_h": 0.55334, "loss": 0.09651, "grad_norm": 5.28365, "time": 1.70778}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07626, "stage0_loss_instance_mil": 0.00312, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.56398, "stage0_s": 0.0, "stage0_m": 0.02008, "stage0_l": 0.32475, "stage0_h": 0.58592, "stage1_loss_instance_mil": 0.04311, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02648, "stage1_mean_ious": 0.5305, "stage1_s": 0.0, "stage1_m": 0.01941, "stage1_l": 0.32197, "stage1_h": 0.54893, "loss": 0.07272, "grad_norm": 3.90451, "time": 1.73466}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.0297, "stage0_loss_instance_mil": 0.00635, "stage0_bag_acc": 99.80556, "stage0_mean_ious": 0.55107, "stage0_s": 0.0, "stage0_m": 0.06053, "stage0_l": 0.27288, "stage0_h": 0.5917, "stage1_loss_instance_mil": 0.03979, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.02373, "stage1_mean_ious": 0.52546, "stage1_s": 0.0, "stage1_m": 0.07714, "stage1_l": 0.27811, "stage1_h": 0.55936, "loss": 0.06988, "grad_norm": 3.37056, "time": 1.70987}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02545, "stage0_loss_instance_mil": 0.00295, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.55481, "stage0_s": 0.0, "stage0_m": 0.04984, "stage0_l": 0.30576, "stage0_h": 0.59584, "stage1_loss_instance_mil": 0.03948, "stage1_bag_acc": 99.80778, "stage1_neg_loss": 0.02213, "stage1_mean_ious": 0.52278, "stage1_s": 0.0, "stage1_m": 0.05166, "stage1_l": 0.31821, "stage1_h": 0.55512, "loss": 0.06456, "grad_norm": 3.20658, "time": 1.68457}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 180, "bbox_mAP": 0.247, "bbox_mAP_50": 0.512, "bbox_mAP_75": 0.407, "bbox_mAP_s": 0.289, "bbox_mAP_m": 0.212, "bbox_mAP_l": 0.125, "bbox_mAP_copypaste": "0.247 0.512 0.407 0.289 0.212 0.125"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07507, "stage0_loss_instance_mil": 0.00462, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.54738, "stage0_s": 0.0, "stage0_m": 0.03048, "stage0_l": 0.28682, "stage0_h": 0.5927, "stage1_loss_instance_mil": 0.04003, "stage1_bag_acc": 99.81304, "stage1_neg_loss": 0.02541, "stage1_mean_ious": 0.52184, "stage1_s": 0.0, "stage1_m": 0.03261, "stage1_l": 0.29068, "stage1_h": 0.56188, "loss": 0.07007, "grad_norm": 3.92132, "time": 1.75009}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.026, "stage0_loss_instance_mil": 0.00588, "stage0_bag_acc": 99.72115, "stage0_mean_ious": 0.57028, "stage0_s": 0.00801, "stage0_m": 0.04407, "stage0_l": 0.26183, "stage0_h": 0.60621, "stage1_loss_instance_mil": 0.03828, "stage1_bag_acc": 99.84615, "stage1_neg_loss": 0.0214, "stage1_mean_ious": 0.53334, "stage1_s": 0.006, "stage1_m": 0.05343, "stage1_l": 0.26471, "stage1_h": 0.56331, "loss": 0.06556, "grad_norm": 3.18534, "time": 1.72544}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02554, "stage0_loss_instance_mil": 0.0016, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.55204, "stage0_s": 0.0, "stage0_m": 0.04614, "stage0_l": 0.27724, "stage0_h": 0.5914, "stage1_loss_instance_mil": 0.03466, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02081, "stage1_mean_ious": 0.52552, "stage1_s": 0.0, "stage1_m": 0.05806, "stage1_l": 0.27896, "stage1_h": 0.55823, "loss": 0.05707, "grad_norm": 3.23107, "time": 1.72686}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07492, "stage0_loss_instance_mil": 0.00094, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.53785, "stage0_s": 0.0, "stage0_m": 0.04768, "stage0_l": 0.23927, "stage0_h": 0.57833, "stage1_loss_instance_mil": 0.03394, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02334, "stage1_mean_ious": 0.50634, "stage1_s": 0.0, "stage1_m": 0.05397, "stage1_l": 0.25625, "stage1_h": 0.53726, "loss": 0.05822, "grad_norm": 3.30287, "time": 1.75712}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02588, "stage0_loss_instance_mil": 0.00109, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.57654, "stage0_s": 0.0, "stage0_m": 0.07211, "stage0_l": 0.34484, "stage0_h": 0.60682, "stage1_loss_instance_mil": 0.03557, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02077, "stage1_mean_ious": 0.55152, "stage1_s": 0.0, "stage1_m": 0.07702, "stage1_l": 0.36108, "stage1_h": 0.57548, "loss": 0.05743, "grad_norm": 3.13968, "time": 1.7488}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02425, "stage0_loss_instance_mil": 0.00539, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.54205, "stage0_s": 0.00801, "stage0_m": 0.06297, "stage0_l": 0.24465, "stage0_h": 0.58581, "stage1_loss_instance_mil": 0.04217, "stage1_bag_acc": 99.80476, "stage1_neg_loss": 0.02321, "stage1_mean_ious": 0.51436, "stage1_s": 0.00596, "stage1_m": 0.08523, "stage1_l": 0.25062, "stage1_h": 0.54965, "loss": 0.07077, "grad_norm": 3.7876, "time": 1.68492}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07438, "stage0_loss_instance_mil": 0.00091, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.5496, "stage0_s": 0.0, "stage0_m": 0.06757, "stage0_l": 0.33536, "stage0_h": 0.58746, "stage1_loss_instance_mil": 0.03543, "stage1_bag_acc": 99.7614, "stage1_neg_loss": 0.01938, "stage1_mean_ious": 0.52626, "stage1_s": 0.0, "stage1_m": 0.08049, "stage1_l": 0.3437, "stage1_h": 0.55888, "loss": 0.05572, "grad_norm": 3.16084, "time": 1.7627}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18840, "data_time": 0.02476, "stage0_loss_instance_mil": 0.00404, "stage0_bag_acc": 99.91667, "stage0_mean_ious": 0.56488, "stage0_s": 0.0, "stage0_m": 0.04863, "stage0_l": 0.2595, "stage0_h": 0.59709, "stage1_loss_instance_mil": 0.03924, "stage1_bag_acc": 99.91667, "stage1_neg_loss": 0.01732, "stage1_mean_ious": 0.53651, "stage1_s": 0.0, "stage1_m": 0.0581, "stage1_l": 0.25953, "stage1_h": 0.56302, "loss": 0.0606, "grad_norm": 3.11558, "time": 1.69458}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18840, "data_time": 0.02503, "stage0_loss_instance_mil": 0.00109, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.5493, "stage0_s": 0.008, "stage0_m": 0.04969, "stage0_l": 0.32811, "stage0_h": 0.5871, "stage1_loss_instance_mil": 0.0373, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02018, "stage1_mean_ious": 0.51837, "stage1_s": 0.00526, "stage1_m": 0.05983, "stage1_l": 0.3317, "stage1_h": 0.54997, "loss": 0.05857, "grad_norm": 3.90006, "time": 1.70344}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 180, "bbox_mAP": 0.25, "bbox_mAP_50": 0.519, "bbox_mAP_75": 0.412, "bbox_mAP_s": 0.297, "bbox_mAP_m": 0.216, "bbox_mAP_l": 0.129, "bbox_mAP_copypaste": "0.250 0.519 0.412 0.297 0.216 0.129"}
