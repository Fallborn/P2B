{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+c820f32", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPNPADNN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=2,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=2,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_val.json',\n        img_prefix='data/coco/images/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='SGD', lr=0.04, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=1,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [3]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00396, "memory": 9555, "data_time": 0.08102, "stage0_loss_instance_mil": 0.69336, "stage0_bag_acc": 16.32537, "stage0_mean_ious": 0.28256, "stage0_s": 0.00117, "stage0_m": 0.01153, "stage0_l": 0.10247, "stage0_h": 0.29191, "stage1_loss_instance_mil": 0.15654, "stage1_bag_acc": 18.92367, "stage1_neg_loss": 0.00515, "stage1_mean_ious": 0.26705, "stage1_s": 0.00109, "stage1_m": 0.0129, "stage1_l": 0.09873, "stage1_h": 0.27626, "loss": 0.85504, "grad_norm": 2.22659, "time": 1.62966}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00795, "memory": 9555, "data_time": 0.0309, "stage0_loss_instance_mil": 0.56919, "stage0_bag_acc": 41.54549, "stage0_mean_ious": 0.40044, "stage0_s": 0.0, "stage0_m": 0.02829, "stage0_l": 0.11124, "stage0_h": 0.41973, "stage1_loss_instance_mil": 0.2022, "stage1_bag_acc": 33.80067, "stage1_neg_loss": 0.02631, "stage1_mean_ious": 0.36685, "stage1_s": 0.0, "stage1_m": 0.02515, "stage1_l": 0.10727, "stage1_h": 0.38478, "loss": 0.7977, "grad_norm": 3.54232, "time": 1.63309}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.01195, "memory": 9555, "data_time": 0.02805, "stage0_loss_instance_mil": 0.52551, "stage0_bag_acc": 50.51281, "stage0_mean_ious": 0.32861, "stage0_s": 0.0, "stage0_m": 0.05289, "stage0_l": 0.18379, "stage0_h": 0.33194, "stage1_loss_instance_mil": 0.24285, "stage1_bag_acc": 44.20519, "stage1_neg_loss": 0.03954, "stage1_mean_ious": 0.32103, "stage1_s": 0.0, "stage1_m": 0.04584, "stage1_l": 0.1829, "stage1_h": 0.32511, "loss": 0.8079, "grad_norm": 5.01276, "time": 1.57378}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.01594, "memory": 9555, "data_time": 0.03024, "stage0_loss_instance_mil": 0.67558, "stage0_bag_acc": 21.64821, "stage0_mean_ious": 0.26139, "stage0_s": 0.0, "stage0_m": 0.01281, "stage0_l": 0.0924, "stage0_h": 0.2685, "stage1_loss_instance_mil": 0.2507, "stage1_bag_acc": 12.89841, "stage1_neg_loss": 0.02612, "stage1_mean_ious": 0.27316, "stage1_s": 0.0, "stage1_m": 0.0146, "stage1_l": 0.10414, "stage1_h": 0.28032, "loss": 0.95241, "grad_norm": 1.77506, "time": 1.64823}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.01994, "memory": 9555, "data_time": 0.02878, "stage0_loss_instance_mil": 0.59144, "stage0_bag_acc": 41.93693, "stage0_mean_ious": 0.28401, "stage0_s": 0.0, "stage0_m": 0.00985, "stage0_l": 0.17304, "stage0_h": 0.29203, "stage1_loss_instance_mil": 0.25564, "stage1_bag_acc": 31.25478, "stage1_neg_loss": 0.01021, "stage1_mean_ious": 0.28577, "stage1_s": 0.0, "stage1_m": 0.01087, "stage1_l": 0.1832, "stage1_h": 0.29394, "loss": 0.85729, "grad_norm": 1.6424, "time": 1.64152}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.02394, "memory": 9555, "data_time": 0.02931, "stage0_loss_instance_mil": 0.50074, "stage0_bag_acc": 55.56726, "stage0_mean_ious": 0.23034, "stage0_s": 0.0, "stage0_m": 0.02434, "stage0_l": 0.10875, "stage0_h": 0.23652, "stage1_loss_instance_mil": 0.2202, "stage1_bag_acc": 50.24938, "stage1_neg_loss": 0.03066, "stage1_mean_ious": 0.2269, "stage1_s": 0.0, "stage1_m": 0.02912, "stage1_l": 0.10873, "stage1_h": 0.2321, "loss": 0.75159, "grad_norm": 2.25212, "time": 1.63032}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.02793, "memory": 9555, "data_time": 0.02999, "stage0_loss_instance_mil": 0.62496, "stage0_bag_acc": 33.66276, "stage0_mean_ious": 0.29644, "stage0_s": 0.0, "stage0_m": 0.01182, "stage0_l": 0.11924, "stage0_h": 0.3094, "stage1_loss_instance_mil": 0.24956, "stage1_bag_acc": 25.70659, "stage1_neg_loss": 0.03318, "stage1_mean_ious": 0.28686, "stage1_s": 0.0, "stage1_m": 0.01324, "stage1_l": 0.13593, "stage1_h": 0.29514, "loss": 0.9077, "grad_norm": 3.23887, "time": 1.63058}
{"mode": "val", "epoch": 1, "iter": 360, "lr": 0.02873, "eval_iter_num": 720, "bbox_mAP": 0.028, "bbox_mAP_50": 0.172, "bbox_mAP_75": 0.027, "bbox_mAP_s": 0.005, "bbox_mAP_m": 0.002, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.028 0.172 0.027 0.005 0.002 0.001"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.03273, "memory": 9555, "data_time": 0.07906, "stage0_loss_instance_mil": 0.57749, "stage0_bag_acc": 45.74453, "stage0_mean_ious": 0.26729, "stage0_s": 0.0, "stage0_m": 0.01033, "stage0_l": 0.21594, "stage0_h": 0.25848, "stage1_loss_instance_mil": 0.19407, "stage1_bag_acc": 47.40009, "stage1_neg_loss": 0.02332, "stage1_mean_ious": 0.24823, "stage1_s": 0.0, "stage1_m": 0.00848, "stage1_l": 0.20496, "stage1_h": 0.23691, "loss": 0.79488, "grad_norm": 1.24891, "time": 1.70647}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.03672, "memory": 9555, "data_time": 0.02873, "stage0_loss_instance_mil": 0.59159, "stage0_bag_acc": 40.50793, "stage0_mean_ious": 0.24141, "stage0_s": 0.0, "stage0_m": 0.0267, "stage0_l": 0.13299, "stage0_h": 0.24005, "stage1_loss_instance_mil": 0.24694, "stage1_bag_acc": 29.63547, "stage1_neg_loss": 0.01689, "stage1_mean_ious": 0.22534, "stage1_s": 0.0, "stage1_m": 0.02072, "stage1_l": 0.12975, "stage1_h": 0.22375, "loss": 0.85541, "grad_norm": 1.43953, "time": 1.62605}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.04, "memory": 9555, "data_time": 0.02787, "stage0_loss_instance_mil": 0.60211, "stage0_bag_acc": 35.73358, "stage0_mean_ious": 0.30453, "stage0_s": 0.0, "stage0_m": 0.03232, "stage0_l": 0.15014, "stage0_h": 0.31163, "stage1_loss_instance_mil": 0.2077, "stage1_bag_acc": 25.70323, "stage1_neg_loss": 0.0142, "stage1_mean_ious": 0.28471, "stage1_s": 0.0, "stage1_m": 0.02958, "stage1_l": 0.15215, "stage1_h": 0.28778, "loss": 0.82401, "grad_norm": 0.91976, "time": 1.62528}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.04, "memory": 9555, "data_time": 0.02558, "stage0_loss_instance_mil": 0.55979, "stage0_bag_acc": 42.70644, "stage0_mean_ious": 0.28665, "stage0_s": 0.0, "stage0_m": 0.01546, "stage0_l": 0.20997, "stage0_h": 0.28905, "stage1_loss_instance_mil": 0.18494, "stage1_bag_acc": 48.76755, "stage1_neg_loss": 0.02713, "stage1_mean_ious": 0.27151, "stage1_s": 0.0, "stage1_m": 0.01933, "stage1_l": 0.22376, "stage1_h": 0.26783, "loss": 0.77187, "grad_norm": 1.36249, "time": 1.5441}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.04, "memory": 9555, "data_time": 0.02875, "stage0_loss_instance_mil": 0.56336, "stage0_bag_acc": 42.49313, "stage0_mean_ious": 0.3083, "stage0_s": 0.0, "stage0_m": 0.02321, "stage0_l": 0.1964, "stage0_h": 0.31213, "stage1_loss_instance_mil": 0.19277, "stage1_bag_acc": 46.18962, "stage1_neg_loss": 0.02898, "stage1_mean_ious": 0.30435, "stage1_s": 0.0, "stage1_m": 0.03011, "stage1_l": 0.21559, "stage1_h": 0.30246, "loss": 0.7851, "grad_norm": 1.30504, "time": 1.61882}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.04, "memory": 9555, "data_time": 0.02894, "stage0_loss_instance_mil": 0.67392, "stage0_bag_acc": 26.54631, "stage0_mean_ious": 0.26626, "stage0_s": 0.0, "stage0_m": 0.03008, "stage0_l": 0.14597, "stage0_h": 0.26299, "stage1_loss_instance_mil": 0.14865, "stage1_bag_acc": 36.67104, "stage1_neg_loss": 0.01188, "stage1_mean_ious": 0.25794, "stage1_s": 0.0, "stage1_m": 0.02855, "stage1_l": 0.13085, "stage1_h": 0.25673, "loss": 0.83444, "grad_norm": 1.01929, "time": 1.65575}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.04, "memory": 9555, "data_time": 0.0272, "stage0_loss_instance_mil": 0.66944, "stage0_bag_acc": 22.85863, "stage0_mean_ious": 0.3514, "stage0_s": 0.0, "stage0_m": 0.01232, "stage0_l": 0.15815, "stage0_h": 0.35738, "stage1_loss_instance_mil": 0.11731, "stage1_bag_acc": 46.67836, "stage1_neg_loss": 0.01358, "stage1_mean_ious": 0.33195, "stage1_s": 0.0, "stage1_m": 0.01385, "stage1_l": 0.14621, "stage1_h": 0.34064, "loss": 0.80033, "grad_norm": 0.49412, "time": 1.63093}
{"mode": "val", "epoch": 2, "iter": 360, "lr": 0.04, "eval_iter_num": 720, "bbox_mAP": 0.005, "bbox_mAP_50": 0.017, "bbox_mAP_75": 0.007, "bbox_mAP_s": 0.003, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.005 0.017 0.007 0.003 0.001 0.000"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.04, "memory": 9555, "data_time": 0.08322, "stage0_loss_instance_mil": 0.58714, "stage0_bag_acc": 39.99752, "stage0_mean_ious": 0.22838, "stage0_s": 0.0, "stage0_m": 0.00277, "stage0_l": 0.14182, "stage0_h": 0.22981, "stage1_loss_instance_mil": 0.14465, "stage1_bag_acc": 52.94801, "stage1_neg_loss": 0.02334, "stage1_mean_ious": 0.21895, "stage1_s": 0.0, "stage1_m": 0.00272, "stage1_l": 0.14459, "stage1_h": 0.22022, "loss": 0.75513, "grad_norm": 1.14638, "time": 1.67926}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.04, "memory": 9555, "data_time": 0.02867, "stage0_loss_instance_mil": 0.5552, "stage0_bag_acc": 42.35405, "stage0_mean_ious": 0.21225, "stage0_s": 0.0, "stage0_m": 0.01229, "stage0_l": 0.12315, "stage0_h": 0.20688, "stage1_loss_instance_mil": 0.17992, "stage1_bag_acc": 46.41104, "stage1_neg_loss": 0.03763, "stage1_mean_ious": 0.19295, "stage1_s": 0.0, "stage1_m": 0.01069, "stage1_l": 0.11433, "stage1_h": 0.18898, "loss": 0.77274, "grad_norm": 1.26142, "time": 1.6286}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.04, "memory": 9555, "data_time": 0.02969, "stage0_loss_instance_mil": 0.59801, "stage0_bag_acc": 36.97111, "stage0_mean_ious": 0.24028, "stage0_s": 0.0, "stage0_m": 0.01665, "stage0_l": 0.1294, "stage0_h": 0.23681, "stage1_loss_instance_mil": 0.14481, "stage1_bag_acc": 38.20262, "stage1_neg_loss": 0.02417, "stage1_mean_ious": 0.22947, "stage1_s": 0.0, "stage1_m": 0.01298, "stage1_l": 0.12596, "stage1_h": 0.22692, "loss": 0.76699, "grad_norm": 0.82904, "time": 1.62996}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.04, "memory": 9555, "data_time": 0.02913, "stage0_loss_instance_mil": 0.51906, "stage0_bag_acc": 50.15356, "stage0_mean_ious": 0.13672, "stage0_s": 0.0, "stage0_m": 0.00636, "stage0_l": 0.14872, "stage0_h": 0.12738, "stage1_loss_instance_mil": 0.17717, "stage1_bag_acc": 49.70527, "stage1_neg_loss": 0.03128, "stage1_mean_ious": 0.12694, "stage1_s": 0.0, "stage1_m": 0.00563, "stage1_l": 0.14692, "stage1_h": 0.11739, "loss": 0.72751, "grad_norm": 1.29546, "time": 1.61791}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.04, "memory": 9555, "data_time": 0.03056, "stage0_loss_instance_mil": 0.49814, "stage0_bag_acc": 47.82887, "stage0_mean_ious": 0.1436, "stage0_s": 0.0, "stage0_m": 0.03018, "stage0_l": 0.13711, "stage0_h": 0.12519, "stage1_loss_instance_mil": 0.18021, "stage1_bag_acc": 53.45017, "stage1_neg_loss": 0.04272, "stage1_mean_ious": 0.12968, "stage1_s": 0.0, "stage1_m": 0.02694, "stage1_l": 0.13323, "stage1_h": 0.11195, "loss": 0.72107, "grad_norm": 1.57191, "time": 1.65342}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.04, "memory": 9555, "data_time": 0.02877, "stage0_loss_instance_mil": 0.48883, "stage0_bag_acc": 54.43728, "stage0_mean_ious": 0.11644, "stage0_s": 0.0015, "stage0_m": 0.03628, "stage0_l": 0.07729, "stage0_h": 0.10378, "stage1_loss_instance_mil": 0.20868, "stage1_bag_acc": 40.36127, "stage1_neg_loss": 0.03129, "stage1_mean_ious": 0.10462, "stage1_s": 0.00172, "stage1_m": 0.0268, "stage1_l": 0.06746, "stage1_h": 0.09486, "loss": 0.7288, "grad_norm": 1.2544, "time": 1.62577}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.04, "memory": 9555, "data_time": 0.02982, "stage0_loss_instance_mil": 0.46771, "stage0_bag_acc": 54.48795, "stage0_mean_ious": 0.10245, "stage0_s": 0.0, "stage0_m": 0.02007, "stage0_l": 0.12613, "stage0_h": 0.08818, "stage1_loss_instance_mil": 0.20905, "stage1_bag_acc": 57.56505, "stage1_neg_loss": 0.03507, "stage1_mean_ious": 0.09053, "stage1_s": 0.0, "stage1_m": 0.01496, "stage1_l": 0.11057, "stage1_h": 0.07831, "loss": 0.71183, "grad_norm": 1.19995, "time": 1.6028}
{"mode": "val", "epoch": 3, "iter": 360, "lr": 0.04, "eval_iter_num": 720, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.04, "memory": 9555, "data_time": 0.08071, "stage0_loss_instance_mil": 0.46202, "stage0_bag_acc": 53.49675, "stage0_mean_ious": 0.09576, "stage0_s": 0.0, "stage0_m": 0.02447, "stage0_l": 0.11622, "stage0_h": 0.08054, "stage1_loss_instance_mil": 0.24303, "stage1_bag_acc": 42.90537, "stage1_neg_loss": 0.03706, "stage1_mean_ious": 0.087, "stage1_s": 0.0, "stage1_m": 0.02432, "stage1_l": 0.10835, "stage1_h": 0.07248, "loss": 0.74211, "grad_norm": 1.16857, "time": 1.67861}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.04, "memory": 9555, "data_time": 0.02867, "stage0_loss_instance_mil": 0.45744, "stage0_bag_acc": 60.30412, "stage0_mean_ious": 0.08595, "stage0_s": 0.0, "stage0_m": 0.01165, "stage0_l": 0.0989, "stage0_h": 0.06987, "stage1_loss_instance_mil": 0.24645, "stage1_bag_acc": 42.31493, "stage1_neg_loss": 0.0242, "stage1_mean_ious": 0.07672, "stage1_s": 0.0, "stage1_m": 0.0113, "stage1_l": 0.08713, "stage1_h": 0.06404, "loss": 0.72809, "grad_norm": 1.15629, "time": 1.62123}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.04, "memory": 9555, "data_time": 0.02692, "stage0_loss_instance_mil": 0.36767, "stage0_bag_acc": 67.55671, "stage0_mean_ious": 0.07878, "stage0_s": 0.0, "stage0_m": 0.0314, "stage0_l": 0.09428, "stage0_h": 0.06455, "stage1_loss_instance_mil": 0.20449, "stage1_bag_acc": 64.24478, "stage1_neg_loss": 0.05414, "stage1_mean_ious": 0.07242, "stage1_s": 0.0, "stage1_m": 0.02859, "stage1_l": 0.08689, "stage1_h": 0.06048, "loss": 0.6263, "grad_norm": 1.42406, "time": 1.58931}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.04, "memory": 9555, "data_time": 0.0265, "stage0_loss_instance_mil": 0.37636, "stage0_bag_acc": 65.77237, "stage0_mean_ious": 0.08837, "stage0_s": 0.0, "stage0_m": 0.01778, "stage0_l": 0.11635, "stage0_h": 0.07006, "stage1_loss_instance_mil": 0.23474, "stage1_bag_acc": 55.36833, "stage1_neg_loss": 0.04921, "stage1_mean_ious": 0.08141, "stage1_s": 0.0, "stage1_m": 0.01203, "stage1_l": 0.10579, "stage1_h": 0.06563, "loss": 0.66031, "grad_norm": 1.24222, "time": 1.57622}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.04, "memory": 9555, "data_time": 0.02587, "stage0_loss_instance_mil": 0.39751, "stage0_bag_acc": 63.23404, "stage0_mean_ious": 0.08093, "stage0_s": 0.0, "stage0_m": 0.03436, "stage0_l": 0.09394, "stage0_h": 0.06557, "stage1_loss_instance_mil": 0.21897, "stage1_bag_acc": 59.76191, "stage1_neg_loss": 0.04143, "stage1_mean_ious": 0.07488, "stage1_s": 0.0, "stage1_m": 0.02843, "stage1_l": 0.08913, "stage1_h": 0.06114, "loss": 0.65791, "grad_norm": 1.18283, "time": 1.58775}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.04, "memory": 9555, "data_time": 0.02796, "stage0_loss_instance_mil": 0.37195, "stage0_bag_acc": 66.73588, "stage0_mean_ious": 0.08073, "stage0_s": 0.0, "stage0_m": 0.02409, "stage0_l": 0.13018, "stage0_h": 0.06361, "stage1_loss_instance_mil": 0.19006, "stage1_bag_acc": 62.09127, "stage1_neg_loss": 0.05246, "stage1_mean_ious": 0.07069, "stage1_s": 0.0, "stage1_m": 0.02183, "stage1_l": 0.10861, "stage1_h": 0.05701, "loss": 0.61447, "grad_norm": 1.22143, "time": 1.63886}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.04, "memory": 9555, "data_time": 0.02658, "stage0_loss_instance_mil": 0.38169, "stage0_bag_acc": 68.70153, "stage0_mean_ious": 0.08796, "stage0_s": 0.0, "stage0_m": 0.04972, "stage0_l": 0.13743, "stage0_h": 0.06304, "stage1_loss_instance_mil": 0.1949, "stage1_bag_acc": 71.67644, "stage1_neg_loss": 0.05185, "stage1_mean_ious": 0.07888, "stage1_s": 0.0, "stage1_m": 0.04023, "stage1_l": 0.11551, "stage1_h": 0.05826, "loss": 0.62844, "grad_norm": 1.39641, "time": 1.56159}
{"mode": "val", "epoch": 4, "iter": 360, "lr": 0.04, "eval_iter_num": 720, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.04, "memory": 9555, "data_time": 0.07891, "stage0_loss_instance_mil": 0.49537, "stage0_bag_acc": 47.70744, "stage0_mean_ious": 0.13061, "stage0_s": 0.0, "stage0_m": 0.0513, "stage0_l": 0.12606, "stage0_h": 0.11313, "stage1_loss_instance_mil": 0.16444, "stage1_bag_acc": 48.82735, "stage1_neg_loss": 0.08755, "stage1_mean_ious": 0.11999, "stage1_s": 0.0, "stage1_m": 0.04473, "stage1_l": 0.11036, "stage1_h": 0.1062, "loss": 0.74735, "grad_norm": 1.68806, "time": 1.6028}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.04, "memory": 9555, "data_time": 0.0279, "stage0_loss_instance_mil": 0.68294, "stage0_bag_acc": 20.62583, "stage0_mean_ious": 0.25197, "stage0_s": 0.0, "stage0_m": 0.02718, "stage0_l": 0.13492, "stage0_h": 0.25127, "stage1_loss_instance_mil": 0.15362, "stage1_bag_acc": 18.8628, "stage1_neg_loss": 0.00744, "stage1_mean_ious": 0.24216, "stage1_s": 0.0, "stage1_m": 0.02768, "stage1_l": 0.13246, "stage1_h": 0.24184, "loss": 0.84399, "grad_norm": 0.42038, "time": 1.64127}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.04, "memory": 9555, "data_time": 0.02791, "stage0_loss_instance_mil": 0.68746, "stage0_bag_acc": 21.54609, "stage0_mean_ious": 0.24179, "stage0_s": 0.0, "stage0_m": 0.00449, "stage0_l": 0.14021, "stage0_h": 0.24299, "stage1_loss_instance_mil": 0.13036, "stage1_bag_acc": 19.4142, "stage1_neg_loss": 0.01283, "stage1_mean_ious": 0.24094, "stage1_s": 0.0, "stage1_m": 0.00443, "stage1_l": 0.14519, "stage1_h": 0.24047, "loss": 0.83064, "grad_norm": 0.34664, "time": 1.56111}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.04, "memory": 9555, "data_time": 0.02833, "stage0_loss_instance_mil": 0.69018, "stage0_bag_acc": 12.82518, "stage0_mean_ious": 0.25657, "stage0_s": 0.0, "stage0_m": 0.00828, "stage0_l": 0.11731, "stage0_h": 0.2592, "stage1_loss_instance_mil": 0.11788, "stage1_bag_acc": 15.63618, "stage1_neg_loss": 0.01411, "stage1_mean_ious": 0.25189, "stage1_s": 0.0, "stage1_m": 0.00793, "stage1_l": 0.12373, "stage1_h": 0.25338, "loss": 0.82217, "grad_norm": 0.30801, "time": 1.61557}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.04, "memory": 9555, "data_time": 0.02896, "stage0_loss_instance_mil": 0.68062, "stage0_bag_acc": 20.36604, "stage0_mean_ious": 0.23781, "stage0_s": 0.0, "stage0_m": 0.03194, "stage0_l": 0.14462, "stage0_h": 0.23795, "stage1_loss_instance_mil": 0.12694, "stage1_bag_acc": 25.15443, "stage1_neg_loss": 0.01263, "stage1_mean_ious": 0.23728, "stage1_s": 0.0, "stage1_m": 0.02721, "stage1_l": 0.14188, "stage1_h": 0.23867, "loss": 0.82018, "grad_norm": 0.26904, "time": 1.6388}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.04, "memory": 9555, "data_time": 0.0293, "stage0_loss_instance_mil": 0.69009, "stage0_bag_acc": 15.60713, "stage0_mean_ious": 0.20883, "stage0_s": 0.0, "stage0_m": 0.03052, "stage0_l": 0.12254, "stage0_h": 0.20455, "stage1_loss_instance_mil": 0.11373, "stage1_bag_acc": 19.62418, "stage1_neg_loss": 0.01594, "stage1_mean_ious": 0.21108, "stage1_s": 0.0, "stage1_m": 0.02729, "stage1_l": 0.12656, "stage1_h": 0.20689, "loss": 0.81975, "grad_norm": 0.25862, "time": 1.60678}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.04, "memory": 9555, "data_time": 0.02859, "stage0_loss_instance_mil": 0.68176, "stage0_bag_acc": 18.84966, "stage0_mean_ious": 0.24553, "stage0_s": 0.0, "stage0_m": 0.02111, "stage0_l": 0.17791, "stage0_h": 0.23881, "stage1_loss_instance_mil": 0.11556, "stage1_bag_acc": 22.59062, "stage1_neg_loss": 0.01594, "stage1_mean_ious": 0.23706, "stage1_s": 0.0, "stage1_m": 0.02232, "stage1_l": 0.17182, "stage1_h": 0.23062, "loss": 0.81326, "grad_norm": 0.24717, "time": 1.61093}
{"mode": "val", "epoch": 5, "iter": 360, "lr": 0.04, "eval_iter_num": 720, "bbox_mAP": 0.039, "bbox_mAP_50": 0.171, "bbox_mAP_75": 0.066, "bbox_mAP_s": 0.008, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.039 0.171 0.066 0.008 0.005 0.001"}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.04, "memory": 9555, "data_time": 0.07887, "stage0_loss_instance_mil": 0.68998, "stage0_bag_acc": 14.59821, "stage0_mean_ious": 0.19524, "stage0_s": 0.0, "stage0_m": 0.03031, "stage0_l": 0.0881, "stage0_h": 0.19043, "stage1_loss_instance_mil": 0.11504, "stage1_bag_acc": 16.38753, "stage1_neg_loss": 0.01549, "stage1_mean_ious": 0.19548, "stage1_s": 0.0, "stage1_m": 0.03225, "stage1_l": 0.0863, "stage1_h": 0.19014, "loss": 0.82051, "grad_norm": 0.26675, "time": 1.65368}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.04, "memory": 9555, "data_time": 0.02742, "stage0_loss_instance_mil": 0.67959, "stage0_bag_acc": 19.7544, "stage0_mean_ious": 0.20904, "stage0_s": 0.0, "stage0_m": 0.02074, "stage0_l": 0.11636, "stage0_h": 0.20357, "stage1_loss_instance_mil": 0.11855, "stage1_bag_acc": 19.50447, "stage1_neg_loss": 0.01755, "stage1_mean_ious": 0.20832, "stage1_s": 0.0, "stage1_m": 0.02194, "stage1_l": 0.11992, "stage1_h": 0.20207, "loss": 0.81569, "grad_norm": 0.25337, "time": 1.60839}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.04, "memory": 9555, "data_time": 0.02842, "stage0_loss_instance_mil": 0.68071, "stage0_bag_acc": 19.38148, "stage0_mean_ious": 0.21092, "stage0_s": 0.0, "stage0_m": 0.01895, "stage0_l": 0.11724, "stage0_h": 0.20942, "stage1_loss_instance_mil": 0.11749, "stage1_bag_acc": 16.35038, "stage1_neg_loss": 0.01537, "stage1_mean_ious": 0.20891, "stage1_s": 0.0, "stage1_m": 0.01955, "stage1_l": 0.11765, "stage1_h": 0.20775, "loss": 0.81357, "grad_norm": 0.2508, "time": 1.60153}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.04, "memory": 9555, "data_time": 0.0286, "stage0_loss_instance_mil": 0.67161, "stage0_bag_acc": 24.27933, "stage0_mean_ious": 0.23145, "stage0_s": 0.0, "stage0_m": 0.02983, "stage0_l": 0.17163, "stage0_h": 0.22936, "stage1_loss_instance_mil": 0.12009, "stage1_bag_acc": 24.27933, "stage1_neg_loss": 0.01547, "stage1_mean_ious": 0.228, "stage1_s": 0.0, "stage1_m": 0.02819, "stage1_l": 0.17362, "stage1_h": 0.22689, "loss": 0.80717, "grad_norm": 0.21733, "time": 1.59804}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.04, "memory": 9555, "data_time": 0.02696, "stage0_loss_instance_mil": 0.67772, "stage0_bag_acc": 17.88593, "stage0_mean_ious": 0.21496, "stage0_s": 0.0, "stage0_m": 0.0248, "stage0_l": 0.14633, "stage0_h": 0.20869, "stage1_loss_instance_mil": 0.11715, "stage1_bag_acc": 17.41927, "stage1_neg_loss": 0.01874, "stage1_mean_ious": 0.2113, "stage1_s": 0.0, "stage1_m": 0.02601, "stage1_l": 0.14555, "stage1_h": 0.20374, "loss": 0.81361, "grad_norm": 0.23122, "time": 1.57355}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.04, "memory": 9555, "data_time": 0.0277, "stage0_loss_instance_mil": 0.68075, "stage0_bag_acc": 17.26861, "stage0_mean_ious": 0.2104, "stage0_s": 0.0, "stage0_m": 0.04128, "stage0_l": 0.14793, "stage0_h": 0.20154, "stage1_loss_instance_mil": 0.11733, "stage1_bag_acc": 18.74907, "stage1_neg_loss": 0.01567, "stage1_mean_ious": 0.20705, "stage1_s": 0.0, "stage1_m": 0.04712, "stage1_l": 0.14301, "stage1_h": 0.19661, "loss": 0.81375, "grad_norm": 0.22027, "time": 1.55338}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 0.04, "memory": 9555, "data_time": 0.02834, "stage0_loss_instance_mil": 0.67072, "stage0_bag_acc": 21.65299, "stage0_mean_ious": 0.2139, "stage0_s": 0.0, "stage0_m": 0.02845, "stage0_l": 0.13779, "stage0_h": 0.20389, "stage1_loss_instance_mil": 0.11997, "stage1_bag_acc": 21.63632, "stage1_neg_loss": 0.01664, "stage1_mean_ious": 0.21106, "stage1_s": 0.0, "stage1_m": 0.02983, "stage1_l": 0.13949, "stage1_h": 0.19918, "loss": 0.80734, "grad_norm": 0.2181, "time": 1.63063}
