{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+e282583", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=8,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [2]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07186, "stage0_loss_instance_mil": 0.70879, "stage0_bag_acc": 20.79408, "stage0_mean_ious": 0.38403, "stage0_s": 0.0, "stage0_m": 0.06637, "stage0_l": 0.30253, "stage0_h": 0.38916, "stage1_loss_instance_mil": 0.17762, "stage1_bag_acc": 12.21027, "stage1_neg_loss": 0.00076, "stage1_mean_ious": 0.38018, "stage1_s": 0.0, "stage1_m": 0.07081, "stage1_l": 0.3122, "stage1_h": 0.38198, "loss": 0.88717, "grad_norm": 3.14576, "time": 1.7653}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02454, "stage0_loss_instance_mil": 0.58911, "stage0_bag_acc": 51.53479, "stage0_mean_ious": 0.37972, "stage0_s": 0.0, "stage0_m": 0.0609, "stage0_l": 0.24222, "stage0_h": 0.3866, "stage1_loss_instance_mil": 0.23963, "stage1_bag_acc": 36.26652, "stage1_neg_loss": 0.00363, "stage1_mean_ious": 0.36556, "stage1_s": 0.0, "stage1_m": 0.06062, "stage1_l": 0.24204, "stage1_h": 0.37157, "loss": 0.83237, "grad_norm": 4.06348, "time": 1.74716}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02447, "stage0_loss_instance_mil": 0.28684, "stage0_bag_acc": 85.02877, "stage0_mean_ious": 0.39605, "stage0_s": 0.0, "stage0_m": 0.03625, "stage0_l": 0.21896, "stage0_h": 0.41459, "stage1_loss_instance_mil": 0.32503, "stage1_bag_acc": 72.66786, "stage1_neg_loss": 0.06421, "stage1_mean_ious": 0.36914, "stage1_s": 0.0, "stage1_m": 0.03067, "stage1_l": 0.20175, "stage1_h": 0.3873, "loss": 0.67608, "grad_norm": 10.76762, "time": 1.733}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18840, "data_time": 0.07375, "stage0_loss_instance_mil": 0.07391, "stage0_bag_acc": 96.31808, "stage0_mean_ious": 0.2954, "stage0_s": 0.0, "stage0_m": 0.02166, "stage0_l": 0.1369, "stage0_h": 0.31014, "stage1_loss_instance_mil": 0.34133, "stage1_bag_acc": 97.84444, "stage1_neg_loss": 0.08728, "stage1_mean_ious": 0.28626, "stage1_s": 0.0, "stage1_m": 0.01752, "stage1_l": 0.11638, "stage1_h": 0.30272, "loss": 0.50252, "grad_norm": 11.22758, "time": 1.78177}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18840, "data_time": 0.02561, "stage0_loss_instance_mil": 0.04608, "stage0_bag_acc": 98.08324, "stage0_mean_ious": 0.27353, "stage0_s": 0.0, "stage0_m": 0.05908, "stage0_l": 0.14139, "stage0_h": 0.28481, "stage1_loss_instance_mil": 0.33442, "stage1_bag_acc": 98.38254, "stage1_neg_loss": 0.09152, "stage1_mean_ious": 0.25506, "stage1_s": 0.0, "stage1_m": 0.05225, "stage1_l": 0.12548, "stage1_h": 0.26777, "loss": 0.47202, "grad_norm": 11.69931, "time": 1.74149}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18840, "data_time": 0.02527, "stage0_loss_instance_mil": 0.04215, "stage0_bag_acc": 97.51201, "stage0_mean_ious": 0.27364, "stage0_s": 0.0, "stage0_m": 0.07591, "stage0_l": 0.1265, "stage0_h": 0.28725, "stage1_loss_instance_mil": 0.34755, "stage1_bag_acc": 98.37293, "stage1_neg_loss": 0.08195, "stage1_mean_ious": 0.25019, "stage1_s": 0.0, "stage1_m": 0.06444, "stage1_l": 0.11362, "stage1_h": 0.26364, "loss": 0.47166, "grad_norm": 11.57071, "time": 1.74055}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18840, "data_time": 0.07322, "stage0_loss_instance_mil": 0.02359, "stage0_bag_acc": 98.81687, "stage0_mean_ious": 0.28607, "stage0_s": 0.0, "stage0_m": 0.06903, "stage0_l": 0.15332, "stage0_h": 0.30191, "stage1_loss_instance_mil": 0.28176, "stage1_bag_acc": 99.43834, "stage1_neg_loss": 0.09637, "stage1_mean_ious": 0.26163, "stage1_s": 0.0, "stage1_m": 0.05068, "stage1_l": 0.14602, "stage1_h": 0.27568, "loss": 0.40173, "grad_norm": 13.4561, "time": 1.7784}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02597, "stage0_loss_instance_mil": 0.05317, "stage0_bag_acc": 97.10822, "stage0_mean_ious": 0.30151, "stage0_s": 0.0, "stage0_m": 0.07199, "stage0_l": 0.18169, "stage0_h": 0.31655, "stage1_loss_instance_mil": 0.31237, "stage1_bag_acc": 97.59105, "stage1_neg_loss": 0.0773, "stage1_mean_ious": 0.27531, "stage1_s": 0.0, "stage1_m": 0.06197, "stage1_l": 0.17214, "stage1_h": 0.28794, "loss": 0.44284, "grad_norm": 12.56226, "time": 1.76232}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.0247, "stage0_loss_instance_mil": 0.05573, "stage0_bag_acc": 96.23745, "stage0_mean_ious": 0.43344, "stage0_s": 0.0, "stage0_m": 0.03293, "stage0_l": 0.14141, "stage0_h": 0.4583, "stage1_loss_instance_mil": 0.27144, "stage1_bag_acc": 97.36723, "stage1_neg_loss": 0.07791, "stage1_mean_ious": 0.40411, "stage1_s": 0.0, "stage1_m": 0.03111, "stage1_l": 0.1412, "stage1_h": 0.4258, "loss": 0.40507, "grad_norm": 13.03237, "time": 1.74846}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.128, "bbox_mAP_50": 0.276, "bbox_mAP_75": 0.2, "bbox_mAP_s": 0.147, "bbox_mAP_m": 0.125, "bbox_mAP_l": 0.093, "bbox_mAP_copypaste": "0.128 0.276 0.200 0.147 0.125 0.093"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07597, "stage0_loss_instance_mil": 0.04287, "stage0_bag_acc": 97.44439, "stage0_mean_ious": 0.50566, "stage0_s": 0.0, "stage0_m": 0.06942, "stage0_l": 0.20735, "stage0_h": 0.53988, "stage1_loss_instance_mil": 0.16914, "stage1_bag_acc": 97.82388, "stage1_neg_loss": 0.06122, "stage1_mean_ious": 0.47352, "stage1_s": 0.0, "stage1_m": 0.06067, "stage1_l": 0.20069, "stage1_h": 0.50524, "loss": 0.27323, "grad_norm": 10.11399, "time": 1.80639}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02658, "stage0_loss_instance_mil": 0.01696, "stage0_bag_acc": 99.2132, "stage0_mean_ious": 0.50156, "stage0_s": 0.0, "stage0_m": 0.04957, "stage0_l": 0.23827, "stage0_h": 0.53727, "stage1_loss_instance_mil": 0.13456, "stage1_bag_acc": 98.34915, "stage1_neg_loss": 0.05773, "stage1_mean_ious": 0.47542, "stage1_s": 0.0, "stage1_m": 0.05398, "stage1_l": 0.24619, "stage1_h": 0.50609, "loss": 0.20926, "grad_norm": 7.53878, "time": 1.76416}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.0264, "stage0_loss_instance_mil": 0.00953, "stage0_bag_acc": 99.64089, "stage0_mean_ious": 0.50571, "stage0_s": 0.0, "stage0_m": 0.04588, "stage0_l": 0.24338, "stage0_h": 0.53232, "stage1_loss_instance_mil": 0.11866, "stage1_bag_acc": 99.53887, "stage1_neg_loss": 0.04721, "stage1_mean_ious": 0.47976, "stage1_s": 0.0, "stage1_m": 0.04907, "stage1_l": 0.24871, "stage1_h": 0.50297, "loss": 0.1754, "grad_norm": 6.02736, "time": 1.76503}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07417, "stage0_loss_instance_mil": 0.02294, "stage0_bag_acc": 98.54053, "stage0_mean_ious": 0.49969, "stage0_s": 0.0, "stage0_m": 0.05316, "stage0_l": 0.22698, "stage0_h": 0.53313, "stage1_loss_instance_mil": 0.09239, "stage1_bag_acc": 99.17804, "stage1_neg_loss": 0.04528, "stage1_mean_ious": 0.47715, "stage1_s": 0.0, "stage1_m": 0.05751, "stage1_l": 0.23424, "stage1_h": 0.50581, "loss": 0.1606, "grad_norm": 5.9009, "time": 1.82431}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02528, "stage0_loss_instance_mil": 0.01004, "stage0_bag_acc": 99.68254, "stage0_mean_ious": 0.51518, "stage0_s": 0.00845, "stage0_m": 0.05724, "stage0_l": 0.25783, "stage0_h": 0.55832, "stage1_loss_instance_mil": 0.0963, "stage1_bag_acc": 99.71673, "stage1_neg_loss": 0.0533, "stage1_mean_ious": 0.4955, "stage1_s": 0.00992, "stage1_m": 0.05963, "stage1_l": 0.26328, "stage1_h": 0.53451, "loss": 0.15964, "grad_norm": 8.10815, "time": 1.714}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02487, "stage0_loss_instance_mil": 0.01189, "stage0_bag_acc": 99.5864, "stage0_mean_ious": 0.54037, "stage0_s": 0.0, "stage0_m": 0.06111, "stage0_l": 0.21844, "stage0_h": 0.57591, "stage1_loss_instance_mil": 0.10661, "stage1_bag_acc": 99.51497, "stage1_neg_loss": 0.04762, "stage1_mean_ious": 0.51901, "stage1_s": 0.0, "stage1_m": 0.06701, "stage1_l": 0.22737, "stage1_h": 0.5501, "loss": 0.16612, "grad_norm": 7.38219, "time": 1.76344}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07698, "stage0_loss_instance_mil": 0.0124, "stage0_bag_acc": 99.13859, "stage0_mean_ious": 0.52314, "stage0_s": 0.0, "stage0_m": 0.04215, "stage0_l": 0.24739, "stage0_h": 0.56831, "stage1_loss_instance_mil": 0.08993, "stage1_bag_acc": 99.48751, "stage1_neg_loss": 0.03914, "stage1_mean_ious": 0.49418, "stage1_s": 0.0, "stage1_m": 0.04117, "stage1_l": 0.25334, "stage1_h": 0.53305, "loss": 0.14147, "grad_norm": 5.7245, "time": 1.76589}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02843, "stage0_loss_instance_mil": 0.02292, "stage0_bag_acc": 98.46537, "stage0_mean_ious": 0.58301, "stage0_s": 0.0, "stage0_m": 0.04364, "stage0_l": 0.22781, "stage0_h": 0.61446, "stage1_loss_instance_mil": 0.07054, "stage1_bag_acc": 98.45175, "stage1_neg_loss": 0.03947, "stage1_mean_ious": 0.55582, "stage1_s": 0.0, "stage1_m": 0.05348, "stage1_l": 0.2291, "stage1_h": 0.58224, "loss": 0.13293, "grad_norm": 6.05929, "time": 1.74894}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02941, "stage0_loss_instance_mil": 0.0109, "stage0_bag_acc": 99.44631, "stage0_mean_ious": 0.5741, "stage0_s": 0.0, "stage0_m": 0.09331, "stage0_l": 0.3147, "stage0_h": 0.61018, "stage1_loss_instance_mil": 0.07681, "stage1_bag_acc": 99.35459, "stage1_neg_loss": 0.0382, "stage1_mean_ious": 0.54597, "stage1_s": 0.0, "stage1_m": 0.1019, "stage1_l": 0.33285, "stage1_h": 0.5742, "loss": 0.12592, "grad_norm": 6.25368, "time": 1.76426}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 180, "bbox_mAP": 0.227, "bbox_mAP_50": 0.505, "bbox_mAP_75": 0.377, "bbox_mAP_s": 0.242, "bbox_mAP_m": 0.18, "bbox_mAP_l": 0.113, "bbox_mAP_copypaste": "0.227 0.505 0.377 0.242 0.180 0.113"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07254, "stage0_loss_instance_mil": 0.00573, "stage0_bag_acc": 99.70053, "stage0_mean_ious": 0.59465, "stage0_s": 0.00839, "stage0_m": 0.08696, "stage0_l": 0.24094, "stage0_h": 0.64064, "stage1_loss_instance_mil": 0.05773, "stage1_bag_acc": 99.79144, "stage1_neg_loss": 0.03006, "stage1_mean_ious": 0.565, "stage1_s": 0.01045, "stage1_m": 0.08771, "stage1_l": 0.24732, "stage1_h": 0.60495, "loss": 0.09352, "grad_norm": 4.25378, "time": 1.82653}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02403, "stage0_loss_instance_mil": 0.00832, "stage0_bag_acc": 99.8114, "stage0_mean_ious": 0.58601, "stage0_s": 0.0, "stage0_m": 0.04155, "stage0_l": 0.3085, "stage0_h": 0.6239, "stage1_loss_instance_mil": 0.04717, "stage1_bag_acc": 99.7314, "stage1_neg_loss": 0.02654, "stage1_mean_ious": 0.55003, "stage1_s": 0.0, "stage1_m": 0.04323, "stage1_l": 0.31268, "stage1_h": 0.58046, "loss": 0.08204, "grad_norm": 3.5319, "time": 1.75361}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02414, "stage0_loss_instance_mil": 0.00635, "stage0_bag_acc": 99.78974, "stage0_mean_ious": 0.58035, "stage0_s": 0.0, "stage0_m": 0.0255, "stage0_l": 0.26388, "stage0_h": 0.61718, "stage1_loss_instance_mil": 0.06273, "stage1_bag_acc": 99.56689, "stage1_neg_loss": 0.02952, "stage1_mean_ious": 0.54356, "stage1_s": 0.0, "stage1_m": 0.02816, "stage1_l": 0.25724, "stage1_h": 0.5752, "loss": 0.0986, "grad_norm": 4.68528, "time": 1.73211}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18840, "data_time": 0.07257, "stage0_loss_instance_mil": 0.00612, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.58555, "stage0_s": 0.0, "stage0_m": 0.08277, "stage0_l": 0.27098, "stage0_h": 0.61975, "stage1_loss_instance_mil": 0.04484, "stage1_bag_acc": 99.80476, "stage1_neg_loss": 0.02347, "stage1_mean_ious": 0.55322, "stage1_s": 0.0, "stage1_m": 0.08385, "stage1_l": 0.28031, "stage1_h": 0.57948, "loss": 0.07442, "grad_norm": 3.17385, "time": 1.80071}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18840, "data_time": 0.02467, "stage0_loss_instance_mil": 0.0016, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.60498, "stage0_s": 0.0, "stage0_m": 0.05535, "stage0_l": 0.26678, "stage0_h": 0.64608, "stage1_loss_instance_mil": 0.03971, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02422, "stage1_mean_ious": 0.56903, "stage1_s": 0.0, "stage1_m": 0.06426, "stage1_l": 0.26964, "stage1_h": 0.60301, "loss": 0.06552, "grad_norm": 3.1162, "time": 1.75151}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18840, "data_time": 0.02509, "stage0_loss_instance_mil": 0.0034, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.58032, "stage0_s": 0.0, "stage0_m": 0.09773, "stage0_l": 0.25602, "stage0_h": 0.61245, "stage1_loss_instance_mil": 0.06485, "stage1_bag_acc": 99.88235, "stage1_neg_loss": 0.03562, "stage1_mean_ious": 0.55044, "stage1_s": 0.0, "stage1_m": 0.09769, "stage1_l": 0.25693, "stage1_h": 0.57902, "loss": 0.10387, "grad_norm": 4.93771, "time": 1.73583}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07447, "stage0_loss_instance_mil": 0.00616, "stage0_bag_acc": 99.91304, "stage0_mean_ious": 0.58382, "stage0_s": 0.0, "stage0_m": 0.0818, "stage0_l": 0.25584, "stage0_h": 0.61821, "stage1_loss_instance_mil": 0.04075, "stage1_bag_acc": 99.73371, "stage1_neg_loss": 0.02347, "stage1_mean_ious": 0.54869, "stage1_s": 0.0, "stage1_m": 0.08333, "stage1_l": 0.26013, "stage1_h": 0.57703, "loss": 0.07037, "grad_norm": 3.3283, "time": 1.80686}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.0245, "stage0_loss_instance_mil": 0.00283, "stage0_bag_acc": 99.78947, "stage0_mean_ious": 0.59026, "stage0_s": 0.0, "stage0_m": 0.05946, "stage0_l": 0.26476, "stage0_h": 0.62827, "stage1_loss_instance_mil": 0.04128, "stage1_bag_acc": 99.78947, "stage1_neg_loss": 0.02224, "stage1_mean_ious": 0.56391, "stage1_s": 0.0, "stage1_m": 0.06518, "stage1_l": 0.26596, "stage1_h": 0.59809, "loss": 0.06634, "grad_norm": 3.19569, "time": 1.77342}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02434, "stage0_loss_instance_mil": 0.00156, "stage0_bag_acc": 99.91304, "stage0_mean_ious": 0.56866, "stage0_s": 0.0, "stage0_m": 0.06518, "stage0_l": 0.26056, "stage0_h": 0.60011, "stage1_loss_instance_mil": 0.04218, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02126, "stage1_mean_ious": 0.53989, "stage1_s": 0.0, "stage1_m": 0.07218, "stage1_l": 0.25716, "stage1_h": 0.56704, "loss": 0.06501, "grad_norm": 3.22819, "time": 1.71617}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 180, "bbox_mAP": 0.227, "bbox_mAP_50": 0.501, "bbox_mAP_75": 0.378, "bbox_mAP_s": 0.248, "bbox_mAP_m": 0.18, "bbox_mAP_l": 0.109, "bbox_mAP_copypaste": "0.227 0.501 0.378 0.248 0.180 0.109"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07352, "stage0_loss_instance_mil": 0.00095, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.59339, "stage0_s": 0.0, "stage0_m": 0.08919, "stage0_l": 0.30834, "stage0_h": 0.63321, "stage1_loss_instance_mil": 0.03701, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02328, "stage1_mean_ious": 0.5613, "stage1_s": 0.0, "stage1_m": 0.09945, "stage1_l": 0.31143, "stage1_h": 0.59493, "loss": 0.06124, "grad_norm": 3.26343, "time": 1.806}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02486, "stage0_loss_instance_mil": 0.0061, "stage0_bag_acc": 99.875, "stage0_mean_ious": 0.58379, "stage0_s": 0.0, "stage0_m": 0.06315, "stage0_l": 0.24847, "stage0_h": 0.62277, "stage1_loss_instance_mil": 0.03625, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.01884, "stage1_mean_ious": 0.55177, "stage1_s": 0.0, "stage1_m": 0.07191, "stage1_l": 0.24628, "stage1_h": 0.58573, "loss": 0.06119, "grad_norm": 2.73987, "time": 1.76438}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02444, "stage0_loss_instance_mil": 0.00092, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.56976, "stage0_s": 0.00842, "stage0_m": 0.06443, "stage0_l": 0.24324, "stage0_h": 0.61572, "stage1_loss_instance_mil": 0.04168, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.02724, "stage1_mean_ious": 0.54026, "stage1_s": 0.00983, "stage1_m": 0.07218, "stage1_l": 0.24143, "stage1_h": 0.57958, "loss": 0.06984, "grad_norm": 3.62987, "time": 1.72254}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18840, "data_time": 0.07519, "stage0_loss_instance_mil": 0.0061, "stage0_bag_acc": 99.76389, "stage0_mean_ious": 0.60039, "stage0_s": 0.0, "stage0_m": 0.10953, "stage0_l": 0.30729, "stage0_h": 0.63765, "stage1_loss_instance_mil": 0.03849, "stage1_bag_acc": 99.76389, "stage1_neg_loss": 0.0263, "stage1_mean_ious": 0.57199, "stage1_s": 0.0, "stage1_m": 0.12013, "stage1_l": 0.32175, "stage1_h": 0.60351, "loss": 0.07088, "grad_norm": 3.34134, "time": 1.79916}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18840, "data_time": 0.02574, "stage0_loss_instance_mil": 0.001, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.57759, "stage0_s": 0.0, "stage0_m": 0.08168, "stage0_l": 0.28699, "stage0_h": 0.61596, "stage1_loss_instance_mil": 0.03433, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02103, "stage1_mean_ious": 0.54682, "stage1_s": 0.0, "stage1_m": 0.08293, "stage1_l": 0.28173, "stage1_h": 0.58004, "loss": 0.05636, "grad_norm": 2.69626, "time": 1.72255}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18840, "data_time": 0.02654, "stage0_loss_instance_mil": 0.00146, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.57425, "stage0_s": 0.0, "stage0_m": 0.04777, "stage0_l": 0.29108, "stage0_h": 0.61421, "stage1_loss_instance_mil": 0.02901, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.0165, "stage1_mean_ious": 0.54293, "stage1_s": 0.0, "stage1_m": 0.05662, "stage1_l": 0.2966, "stage1_h": 0.57493, "loss": 0.04698, "grad_norm": 2.58016, "time": 1.76672}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18840, "data_time": 0.07342, "stage0_loss_instance_mil": 0.0013, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.58932, "stage0_s": 0.0, "stage0_m": 0.06124, "stage0_l": 0.29656, "stage0_h": 0.62709, "stage1_loss_instance_mil": 0.03863, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.01865, "stage1_mean_ious": 0.55446, "stage1_s": 0.0, "stage1_m": 0.0664, "stage1_l": 0.30732, "stage1_h": 0.58496, "loss": 0.05859, "grad_norm": 2.85746, "time": 1.80223}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18840, "data_time": 0.02523, "stage0_loss_instance_mil": 0.00479, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.59303, "stage0_s": 0.0, "stage0_m": 0.05576, "stage0_l": 0.29228, "stage0_h": 0.63099, "stage1_loss_instance_mil": 0.03371, "stage1_bag_acc": 99.9, "stage1_neg_loss": 0.02368, "stage1_mean_ious": 0.56668, "stage1_s": 0.0, "stage1_m": 0.06281, "stage1_l": 0.29737, "stage1_h": 0.59897, "loss": 0.06218, "grad_norm": 3.37189, "time": 1.76771}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18840, "data_time": 0.02559, "stage0_loss_instance_mil": 0.00146, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.57791, "stage0_s": 0.0, "stage0_m": 0.06137, "stage0_l": 0.30304, "stage0_h": 0.61289, "stage1_loss_instance_mil": 0.03298, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.01473, "stage1_mean_ious": 0.55029, "stage1_s": 0.0, "stage1_m": 0.06977, "stage1_l": 0.30816, "stage1_h": 0.579, "loss": 0.04917, "grad_norm": 2.44424, "time": 1.77229}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 180, "bbox_mAP": 0.234, "bbox_mAP_50": 0.509, "bbox_mAP_75": 0.391, "bbox_mAP_s": 0.257, "bbox_mAP_m": 0.189, "bbox_mAP_l": 0.118, "bbox_mAP_copypaste": "0.234 0.509 0.391 0.257 0.189 0.118"}
