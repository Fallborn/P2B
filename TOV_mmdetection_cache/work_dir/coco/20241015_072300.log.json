{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07338, "stage0_loss_instance_mil": 0.71516, "stage0_bag_acc": 19.74898, "stage0_mean_ious": 0.34964, "stage0_s": 0.0, "stage0_m": 0.04997, "stage0_l": 0.18272, "stage0_h": 0.35567, "stage1_loss_instance_mil": 0.16339, "stage1_bag_acc": 13.63265, "stage1_neg_loss": 0.00139, "stage1_mean_ious": 0.33592, "stage1_s": 0.0, "stage1_m": 0.04701, "stage1_l": 0.18884, "stage1_h": 0.34038, "loss": 0.87993, "grad_norm": 3.18307, "time": 1.76054}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02488, "stage0_loss_instance_mil": 0.57161, "stage0_bag_acc": 65.36596, "stage0_mean_ious": 0.37873, "stage0_s": 0.0, "stage0_m": 0.077, "stage0_l": 0.27412, "stage0_h": 0.38895, "stage1_loss_instance_mil": 0.24821, "stage1_bag_acc": 29.46689, "stage1_neg_loss": 0.00669, "stage1_mean_ious": 0.36606, "stage1_s": 0.0, "stage1_m": 0.06958, "stage1_l": 0.26911, "stage1_h": 0.37433, "loss": 0.82651, "grad_norm": 4.76839, "time": 1.68987}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02568, "stage0_loss_instance_mil": 0.2471, "stage0_bag_acc": 90.79066, "stage0_mean_ious": 0.38091, "stage0_s": 0.00901, "stage0_m": 0.03325, "stage0_l": 0.16758, "stage0_h": 0.40273, "stage1_loss_instance_mil": 0.33744, "stage1_bag_acc": 84.12489, "stage1_neg_loss": 0.07228, "stage1_mean_ious": 0.35948, "stage1_s": 0.00747, "stage1_m": 0.02788, "stage1_l": 0.18124, "stage1_h": 0.37744, "loss": 0.65682, "grad_norm": 15.07873, "time": 1.73653}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18833, "data_time": 0.07545, "stage0_loss_instance_mil": 0.08838, "stage0_bag_acc": 95.46237, "stage0_mean_ious": 0.3556, "stage0_s": 0.0, "stage0_m": 0.07114, "stage0_l": 0.17996, "stage0_h": 0.39098, "stage1_loss_instance_mil": 0.35623, "stage1_bag_acc": 96.52438, "stage1_neg_loss": 0.093, "stage1_mean_ious": 0.33103, "stage1_s": 0.0, "stage1_m": 0.05944, "stage1_l": 0.16898, "stage1_h": 0.3639, "loss": 0.5376, "grad_norm": 15.23476, "time": 1.75127}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18833, "data_time": 0.02487, "stage0_loss_instance_mil": 0.05059, "stage0_bag_acc": 97.40296, "stage0_mean_ious": 0.35427, "stage0_s": 0.0, "stage0_m": 0.04591, "stage0_l": 0.17764, "stage0_h": 0.3729, "stage1_loss_instance_mil": 0.31314, "stage1_bag_acc": 98.61111, "stage1_neg_loss": 0.08647, "stage1_mean_ious": 0.32049, "stage1_s": 0.0, "stage1_m": 0.03798, "stage1_l": 0.14837, "stage1_h": 0.33812, "loss": 0.45019, "grad_norm": 13.90079, "time": 1.70703}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18833, "data_time": 0.0259, "stage0_loss_instance_mil": 0.04499, "stage0_bag_acc": 97.00156, "stage0_mean_ious": 0.37949, "stage0_s": 0.0, "stage0_m": 0.01183, "stage0_l": 0.16363, "stage0_h": 0.40119, "stage1_loss_instance_mil": 0.29035, "stage1_bag_acc": 98.86691, "stage1_neg_loss": 0.09371, "stage1_mean_ious": 0.33689, "stage1_s": 0.0, "stage1_m": 0.0086, "stage1_l": 0.15685, "stage1_h": 0.35499, "loss": 0.42905, "grad_norm": 16.30298, "time": 1.72411}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18833, "data_time": 0.07653, "stage0_loss_instance_mil": 0.02728, "stage0_bag_acc": 98.75372, "stage0_mean_ious": 0.33893, "stage0_s": 0.0, "stage0_m": 0.04623, "stage0_l": 0.13172, "stage0_h": 0.35936, "stage1_loss_instance_mil": 0.28911, "stage1_bag_acc": 99.11496, "stage1_neg_loss": 0.0837, "stage1_mean_ious": 0.30915, "stage1_s": 0.0, "stage1_m": 0.03754, "stage1_l": 0.12491, "stage1_h": 0.32807, "loss": 0.40009, "grad_norm": 15.74884, "time": 1.79012}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02516, "stage0_loss_instance_mil": 0.0407, "stage0_bag_acc": 97.28253, "stage0_mean_ious": 0.31509, "stage0_s": 0.0, "stage0_m": 0.05197, "stage0_l": 0.12264, "stage0_h": 0.33824, "stage1_loss_instance_mil": 0.24425, "stage1_bag_acc": 98.41458, "stage1_neg_loss": 0.07835, "stage1_mean_ious": 0.28201, "stage1_s": 0.0, "stage1_m": 0.04218, "stage1_l": 0.10581, "stage1_h": 0.30446, "loss": 0.3633, "grad_norm": 13.54805, "time": 1.73494}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02693, "stage0_loss_instance_mil": 0.03989, "stage0_bag_acc": 97.76686, "stage0_mean_ious": 0.32133, "stage0_s": 0.0, "stage0_m": 0.04465, "stage0_l": 0.13426, "stage0_h": 0.33978, "stage1_loss_instance_mil": 0.25129, "stage1_bag_acc": 99.17079, "stage1_neg_loss": 0.0796, "stage1_mean_ious": 0.28285, "stage1_s": 0.0, "stage1_m": 0.02857, "stage1_l": 0.10987, "stage1_h": 0.30122, "loss": 0.37078, "grad_norm": 14.72729, "time": 1.7296}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.054, "bbox_mAP_50": 0.191, "bbox_mAP_75": 0.093, "bbox_mAP_s": 0.032, "bbox_mAP_m": 0.013, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.054 0.191 0.093 0.032 0.013 0.005"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07951, "stage0_loss_instance_mil": 0.05464, "stage0_bag_acc": 96.08324, "stage0_mean_ious": 0.31094, "stage0_s": 0.0, "stage0_m": 0.04322, "stage0_l": 0.10075, "stage0_h": 0.33953, "stage1_loss_instance_mil": 0.24481, "stage1_bag_acc": 97.56828, "stage1_neg_loss": 0.08509, "stage1_mean_ious": 0.27921, "stage1_s": 0.0, "stage1_m": 0.03298, "stage1_l": 0.08441, "stage1_h": 0.30553, "loss": 0.38454, "grad_norm": 18.96937, "time": 1.81517}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02715, "stage0_loss_instance_mil": 0.01995, "stage0_bag_acc": 99.18197, "stage0_mean_ious": 0.33592, "stage0_s": 0.0, "stage0_m": 0.02296, "stage0_l": 0.11251, "stage0_h": 0.36749, "stage1_loss_instance_mil": 0.21727, "stage1_bag_acc": 99.18339, "stage1_neg_loss": 0.07612, "stage1_mean_ious": 0.2957, "stage1_s": 0.0, "stage1_m": 0.01868, "stage1_l": 0.09532, "stage1_h": 0.32434, "loss": 0.31334, "grad_norm": 12.02384, "time": 1.76696}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02681, "stage0_loss_instance_mil": 0.01821, "stage0_bag_acc": 99.03484, "stage0_mean_ious": 0.3003, "stage0_s": 0.0, "stage0_m": 0.0354, "stage0_l": 0.1087, "stage0_h": 0.32514, "stage1_loss_instance_mil": 0.2101, "stage1_bag_acc": 99.24693, "stage1_neg_loss": 0.06672, "stage1_mean_ious": 0.26954, "stage1_s": 0.0, "stage1_m": 0.02353, "stage1_l": 0.08728, "stage1_h": 0.29475, "loss": 0.29504, "grad_norm": 12.59361, "time": 1.71309}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07735, "stage0_loss_instance_mil": 0.01814, "stage0_bag_acc": 98.79683, "stage0_mean_ious": 0.323, "stage0_s": 0.0, "stage0_m": 0.02914, "stage0_l": 0.10034, "stage0_h": 0.35528, "stage1_loss_instance_mil": 0.16335, "stage1_bag_acc": 98.83283, "stage1_neg_loss": 0.06896, "stage1_mean_ious": 0.28697, "stage1_s": 0.0, "stage1_m": 0.02022, "stage1_l": 0.07946, "stage1_h": 0.31736, "loss": 0.25045, "grad_norm": 10.73852, "time": 1.75696}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02605, "stage0_loss_instance_mil": 0.0124, "stage0_bag_acc": 99.12612, "stage0_mean_ious": 0.28793, "stage0_s": 0.00806, "stage0_m": 0.03286, "stage0_l": 0.10341, "stage0_h": 0.31143, "stage1_loss_instance_mil": 0.18353, "stage1_bag_acc": 99.36245, "stage1_neg_loss": 0.07681, "stage1_mean_ious": 0.25964, "stage1_s": 0.00557, "stage1_m": 0.01995, "stage1_l": 0.08291, "stage1_h": 0.28304, "loss": 0.27274, "grad_norm": 14.51198, "time": 1.73526}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02598, "stage0_loss_instance_mil": 0.017, "stage0_bag_acc": 99.01946, "stage0_mean_ious": 0.34633, "stage0_s": 0.0, "stage0_m": 0.04752, "stage0_l": 0.10676, "stage0_h": 0.37328, "stage1_loss_instance_mil": 0.17234, "stage1_bag_acc": 99.546, "stage1_neg_loss": 0.06193, "stage1_mean_ious": 0.30495, "stage1_s": 0.0, "stage1_m": 0.03627, "stage1_l": 0.07976, "stage1_h": 0.33228, "loss": 0.25126, "grad_norm": 10.67305, "time": 1.74216}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.0767, "stage0_loss_instance_mil": 0.01471, "stage0_bag_acc": 99.34376, "stage0_mean_ious": 0.29662, "stage0_s": 0.0, "stage0_m": 0.04529, "stage0_l": 0.10542, "stage0_h": 0.3258, "stage1_loss_instance_mil": 0.15469, "stage1_bag_acc": 99.6819, "stage1_neg_loss": 0.06285, "stage1_mean_ious": 0.26587, "stage1_s": 0.0, "stage1_m": 0.03178, "stage1_l": 0.08323, "stage1_h": 0.29437, "loss": 0.23225, "grad_norm": 10.57529, "time": 1.76742}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03157, "stage0_loss_instance_mil": 0.00602, "stage0_bag_acc": 99.78711, "stage0_mean_ious": 0.30641, "stage0_s": 0.0, "stage0_m": 0.02702, "stage0_l": 0.08937, "stage0_h": 0.33149, "stage1_loss_instance_mil": 0.13881, "stage1_bag_acc": 99.46312, "stage1_neg_loss": 0.05756, "stage1_mean_ious": 0.27542, "stage1_s": 0.0, "stage1_m": 0.01819, "stage1_l": 0.07982, "stage1_h": 0.29879, "loss": 0.20239, "grad_norm": 7.80137, "time": 1.74303}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.0317, "stage0_loss_instance_mil": 0.01178, "stage0_bag_acc": 99.30459, "stage0_mean_ious": 0.29452, "stage0_s": 0.0, "stage0_m": 0.03447, "stage0_l": 0.09634, "stage0_h": 0.31517, "stage1_loss_instance_mil": 0.15167, "stage1_bag_acc": 99.63924, "stage1_neg_loss": 0.05874, "stage1_mean_ious": 0.26358, "stage1_s": 0.0, "stage1_m": 0.02596, "stage1_l": 0.0778, "stage1_h": 0.28415, "loss": 0.22219, "grad_norm": 10.17791, "time": 1.69903}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.052, "bbox_mAP_50": 0.186, "bbox_mAP_75": 0.095, "bbox_mAP_s": 0.029, "bbox_mAP_m": 0.011, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.052 0.186 0.095 0.029 0.011 0.004"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07405, "stage0_loss_instance_mil": 0.00764, "stage0_bag_acc": 99.69144, "stage0_mean_ious": 0.31198, "stage0_s": 0.00797, "stage0_m": 0.02545, "stage0_l": 0.1054, "stage0_h": 0.33579, "stage1_loss_instance_mil": 0.13183, "stage1_bag_acc": 99.68618, "stage1_neg_loss": 0.07254, "stage1_mean_ious": 0.27078, "stage1_s": 0.00543, "stage1_m": 0.01848, "stage1_l": 0.08125, "stage1_h": 0.29395, "loss": 0.212, "grad_norm": 11.06414, "time": 1.72505}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02765, "stage0_loss_instance_mil": 0.01297, "stage0_bag_acc": 99.3397, "stage0_mean_ious": 0.3048, "stage0_s": 0.0, "stage0_m": 0.05336, "stage0_l": 0.0984, "stage0_h": 0.33577, "stage1_loss_instance_mil": 0.124, "stage1_bag_acc": 99.61855, "stage1_neg_loss": 0.05922, "stage1_mean_ious": 0.2741, "stage1_s": 0.0, "stage1_m": 0.03658, "stage1_l": 0.08155, "stage1_h": 0.3044, "loss": 0.19619, "grad_norm": 9.29761, "time": 1.73582}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02769, "stage0_loss_instance_mil": 0.01708, "stage0_bag_acc": 98.93663, "stage0_mean_ious": 0.32148, "stage0_s": 0.0, "stage0_m": 0.03577, "stage0_l": 0.11935, "stage0_h": 0.35138, "stage1_loss_instance_mil": 0.13102, "stage1_bag_acc": 99.47653, "stage1_neg_loss": 0.05174, "stage1_mean_ious": 0.28641, "stage1_s": 0.0, "stage1_m": 0.02544, "stage1_l": 0.10885, "stage1_h": 0.31371, "loss": 0.19984, "grad_norm": 8.93375, "time": 1.71813}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07688, "stage0_loss_instance_mil": 0.00555, "stage0_bag_acc": 99.79808, "stage0_mean_ious": 0.31515, "stage0_s": 0.0, "stage0_m": 0.03232, "stage0_l": 0.11622, "stage0_h": 0.34477, "stage1_loss_instance_mil": 0.11188, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05297, "stage1_mean_ious": 0.28282, "stage1_s": 0.0, "stage1_m": 0.02403, "stage1_l": 0.09536, "stage1_h": 0.31038, "loss": 0.17039, "grad_norm": 8.18279, "time": 1.77224}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02608, "stage0_loss_instance_mil": 0.00771, "stage0_bag_acc": 99.82, "stage0_mean_ious": 0.30321, "stage0_s": 0.0, "stage0_m": 0.04535, "stage0_l": 0.09226, "stage0_h": 0.32886, "stage1_loss_instance_mil": 0.12802, "stage1_bag_acc": 99.53831, "stage1_neg_loss": 0.05442, "stage1_mean_ious": 0.27104, "stage1_s": 0.0, "stage1_m": 0.03499, "stage1_l": 0.08354, "stage1_h": 0.2948, "loss": 0.19014, "grad_norm": 8.70621, "time": 1.72725}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.0267, "stage0_loss_instance_mil": 0.0048, "stage0_bag_acc": 99.77381, "stage0_mean_ious": 0.30699, "stage0_s": 0.0, "stage0_m": 0.03921, "stage0_l": 0.10817, "stage0_h": 0.33008, "stage1_loss_instance_mil": 0.11031, "stage1_bag_acc": 99.91667, "stage1_neg_loss": 0.05026, "stage1_mean_ious": 0.27757, "stage1_s": 0.0, "stage1_m": 0.02989, "stage1_l": 0.09658, "stage1_h": 0.29884, "loss": 0.16537, "grad_norm": 7.53537, "time": 1.69981}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07283, "stage0_loss_instance_mil": 0.00202, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.3091, "stage0_s": 0.00773, "stage0_m": 0.03211, "stage0_l": 0.09875, "stage0_h": 0.3382, "stage1_loss_instance_mil": 0.09355, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04617, "stage1_mean_ious": 0.2746, "stage1_s": 0.00541, "stage1_m": 0.02308, "stage1_l": 0.08198, "stage1_h": 0.30173, "loss": 0.14174, "grad_norm": 6.57564, "time": 1.73414}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02548, "stage0_loss_instance_mil": 0.00347, "stage0_bag_acc": 99.84615, "stage0_mean_ious": 0.30998, "stage0_s": 0.0, "stage0_m": 0.04875, "stage0_l": 0.09806, "stage0_h": 0.33423, "stage1_loss_instance_mil": 0.0893, "stage1_bag_acc": 99.81781, "stage1_neg_loss": 0.04833, "stage1_mean_ious": 0.27881, "stage1_s": 0.0, "stage1_m": 0.04516, "stage1_l": 0.08354, "stage1_h": 0.30193, "loss": 0.14111, "grad_norm": 6.28485, "time": 1.73696}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.0243, "stage0_loss_instance_mil": 0.00785, "stage0_bag_acc": 99.76974, "stage0_mean_ious": 0.32458, "stage0_s": 0.0, "stage0_m": 0.03587, "stage0_l": 0.0992, "stage0_h": 0.35755, "stage1_loss_instance_mil": 0.09446, "stage1_bag_acc": 99.76389, "stage1_neg_loss": 0.04313, "stage1_mean_ious": 0.2987, "stage1_s": 0.0, "stage1_m": 0.03189, "stage1_l": 0.08225, "stage1_h": 0.32965, "loss": 0.14544, "grad_norm": 5.62285, "time": 1.67392}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.049, "bbox_mAP_50": 0.167, "bbox_mAP_75": 0.088, "bbox_mAP_s": 0.032, "bbox_mAP_m": 0.015, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.049 0.167 0.088 0.032 0.015 0.003"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.0781, "stage0_loss_instance_mil": 0.00172, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.30349, "stage0_s": 0.00795, "stage0_m": 0.04013, "stage0_l": 0.12396, "stage0_h": 0.32925, "stage1_loss_instance_mil": 0.08294, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04868, "stage1_mean_ious": 0.2713, "stage1_s": 0.00549, "stage1_m": 0.03011, "stage1_l": 0.11161, "stage1_h": 0.29504, "loss": 0.13335, "grad_norm": 6.28877, "time": 1.7488}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.03296, "stage0_loss_instance_mil": 0.00798, "stage0_bag_acc": 99.62592, "stage0_mean_ious": 0.34588, "stage0_s": 0.0, "stage0_m": 0.02956, "stage0_l": 0.08962, "stage0_h": 0.37547, "stage1_loss_instance_mil": 0.08524, "stage1_bag_acc": 99.62592, "stage1_neg_loss": 0.03965, "stage1_mean_ious": 0.31057, "stage1_s": 0.0, "stage1_m": 0.02766, "stage1_l": 0.07593, "stage1_h": 0.33633, "loss": 0.13286, "grad_norm": 4.84091, "time": 1.75353}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.0314, "stage0_loss_instance_mil": 0.00599, "stage0_bag_acc": 99.70804, "stage0_mean_ious": 0.30338, "stage0_s": 0.0, "stage0_m": 0.03479, "stage0_l": 0.09518, "stage0_h": 0.32917, "stage1_loss_instance_mil": 0.08462, "stage1_bag_acc": 99.70804, "stage1_neg_loss": 0.04294, "stage1_mean_ious": 0.27603, "stage1_s": 0.0, "stage1_m": 0.03202, "stage1_l": 0.09344, "stage1_h": 0.29901, "loss": 0.13355, "grad_norm": 5.80623, "time": 1.75731}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.0712, "stage0_loss_instance_mil": 0.00168, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.2966, "stage0_s": 0.0, "stage0_m": 0.02203, "stage0_l": 0.10802, "stage0_h": 0.31934, "stage1_loss_instance_mil": 0.07426, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.03871, "stage1_mean_ious": 0.26998, "stage1_s": 0.0, "stage1_m": 0.01782, "stage1_l": 0.09507, "stage1_h": 0.29199, "loss": 0.11464, "grad_norm": 4.75556, "time": 1.75243}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02574, "stage0_loss_instance_mil": 0.00268, "stage0_bag_acc": 99.77976, "stage0_mean_ious": 0.3182, "stage0_s": 0.0, "stage0_m": 0.03827, "stage0_l": 0.10991, "stage0_h": 0.3398, "stage1_loss_instance_mil": 0.08077, "stage1_bag_acc": 99.78409, "stage1_neg_loss": 0.04003, "stage1_mean_ious": 0.28945, "stage1_s": 0.0, "stage1_m": 0.03053, "stage1_l": 0.08979, "stage1_h": 0.31047, "loss": 0.12348, "grad_norm": 5.10222, "time": 1.7353}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.0259, "stage0_loss_instance_mil": 0.00119, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.30974, "stage0_s": 0.0, "stage0_m": 0.0231, "stage0_l": 0.09635, "stage0_h": 0.34193, "stage1_loss_instance_mil": 0.08086, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04288, "stage1_mean_ious": 0.27902, "stage1_s": 0.0, "stage1_m": 0.02316, "stage1_l": 0.07832, "stage1_h": 0.30936, "loss": 0.12492, "grad_norm": 5.81149, "time": 1.72423}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07324, "stage0_loss_instance_mil": 0.00178, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.30372, "stage0_s": 0.0, "stage0_m": 0.03456, "stage0_l": 0.10139, "stage0_h": 0.33578, "stage1_loss_instance_mil": 0.08098, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03778, "stage1_mean_ious": 0.27057, "stage1_s": 0.0, "stage1_m": 0.02961, "stage1_l": 0.09004, "stage1_h": 0.29998, "loss": 0.12054, "grad_norm": 5.29315, "time": 1.73551}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18833, "data_time": 0.02668, "stage0_loss_instance_mil": 0.00657, "stage0_bag_acc": 99.79808, "stage0_mean_ious": 0.31144, "stage0_s": 0.0, "stage0_m": 0.04101, "stage0_l": 0.0901, "stage0_h": 0.34504, "stage1_loss_instance_mil": 0.07756, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.04189, "stage1_mean_ious": 0.28435, "stage1_s": 0.0, "stage1_m": 0.03488, "stage1_l": 0.0786, "stage1_h": 0.31638, "loss": 0.12602, "grad_norm": 5.15593, "time": 1.73751}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18833, "data_time": 0.02532, "stage0_loss_instance_mil": 0.00169, "stage0_bag_acc": 99.91304, "stage0_mean_ious": 0.30282, "stage0_s": 0.0, "stage0_m": 0.03126, "stage0_l": 0.09076, "stage0_h": 0.32707, "stage1_loss_instance_mil": 0.07277, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.0341, "stage1_mean_ious": 0.27343, "stage1_s": 0.0, "stage1_m": 0.02494, "stage1_l": 0.08293, "stage1_h": 0.29588, "loss": 0.10856, "grad_norm": 4.52239, "time": 1.70167}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.051, "bbox_mAP_50": 0.169, "bbox_mAP_75": 0.091, "bbox_mAP_s": 0.033, "bbox_mAP_m": 0.015, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.051 0.169 0.091 0.033 0.015 0.004"}
