{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+c820f32", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=2,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [5]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 17771, "data_time": 0.07543, "stage0_loss_instance_mil": 0.71552, "stage0_bag_acc": 16.78254, "stage0_mean_ious": 0.22678, "stage0_s": 0.0, "stage0_m": 0.02672, "stage0_l": 0.16799, "stage0_h": 0.23446, "stage1_loss_instance_mil": 0.1745, "stage1_bag_acc": 17.75241, "stage1_neg_loss": 0.00101, "stage1_mean_ious": 0.22144, "stage1_s": 0.0, "stage1_m": 0.02578, "stage1_l": 0.17247, "stage1_h": 0.22735, "loss": 0.89103, "grad_norm": 3.37295, "time": 1.72912}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 17771, "data_time": 0.02693, "stage0_loss_instance_mil": 0.58634, "stage0_bag_acc": 48.02028, "stage0_mean_ious": 0.33205, "stage0_s": 0.0, "stage0_m": 0.02559, "stage0_l": 0.19095, "stage0_h": 0.35017, "stage1_loss_instance_mil": 0.2529, "stage1_bag_acc": 15.17823, "stage1_neg_loss": 0.00272, "stage1_mean_ious": 0.32396, "stage1_s": 0.0, "stage1_m": 0.02401, "stage1_l": 0.18141, "stage1_h": 0.34312, "loss": 0.84196, "grad_norm": 3.90788, "time": 1.71215}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 17796, "data_time": 0.02577, "stage0_loss_instance_mil": 0.30945, "stage0_bag_acc": 86.26488, "stage0_mean_ious": 0.32839, "stage0_s": 0.0, "stage0_m": 0.03919, "stage0_l": 0.14452, "stage0_h": 0.34032, "stage1_loss_instance_mil": 0.31918, "stage1_bag_acc": 74.9958, "stage1_neg_loss": 0.05057, "stage1_mean_ious": 0.32155, "stage1_s": 0.0, "stage1_m": 0.03593, "stage1_l": 0.15385, "stage1_h": 0.33214, "loss": 0.6792, "grad_norm": 9.55603, "time": 1.70812}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 17796, "data_time": 0.07452, "stage0_loss_instance_mil": 0.07881, "stage0_bag_acc": 97.08364, "stage0_mean_ious": 0.25256, "stage0_s": 0.0, "stage0_m": 0.06968, "stage0_l": 0.12721, "stage0_h": 0.26163, "stage1_loss_instance_mil": 0.3719, "stage1_bag_acc": 98.1074, "stage1_neg_loss": 0.09171, "stage1_mean_ious": 0.22854, "stage1_s": 0.0, "stage1_m": 0.04977, "stage1_l": 0.10524, "stage1_h": 0.23935, "loss": 0.54242, "grad_norm": 15.29634, "time": 1.77173}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 17797, "data_time": 0.02471, "stage0_loss_instance_mil": 0.05844, "stage0_bag_acc": 97.41055, "stage0_mean_ious": 0.23796, "stage0_s": 0.0, "stage0_m": 0.03806, "stage0_l": 0.13379, "stage0_h": 0.24788, "stage1_loss_instance_mil": 0.35107, "stage1_bag_acc": 97.74011, "stage1_neg_loss": 0.09922, "stage1_mean_ious": 0.21477, "stage1_s": 0.0, "stage1_m": 0.03378, "stage1_l": 0.10966, "stage1_h": 0.22568, "loss": 0.50873, "grad_norm": 14.1838, "time": 1.70809}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 17797, "data_time": 0.02424, "stage0_loss_instance_mil": 0.05941, "stage0_bag_acc": 96.09747, "stage0_mean_ious": 0.20941, "stage0_s": 0.0, "stage0_m": 0.03495, "stage0_l": 0.12473, "stage0_h": 0.21593, "stage1_loss_instance_mil": 0.33748, "stage1_bag_acc": 97.39914, "stage1_neg_loss": 0.0866, "stage1_mean_ious": 0.19036, "stage1_s": 0.0, "stage1_m": 0.02845, "stage1_l": 0.09295, "stage1_h": 0.19935, "loss": 0.48349, "grad_norm": 12.95087, "time": 1.68314}
{"mode": "val", "epoch": 2, "iter": 180, "lr": 4e-05, "eval_iter_num": 90, "bbox_mAP": 0.03, "bbox_mAP_50": 0.107, "bbox_mAP_75": 0.053, "bbox_mAP_s": 0.015, "bbox_mAP_m": 0.006, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.030 0.107 0.053 0.015 0.006 0.002"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 17797, "data_time": 0.07109, "stage0_loss_instance_mil": 0.03283, "stage0_bag_acc": 98.62759, "stage0_mean_ious": 0.28614, "stage0_s": 0.00188, "stage0_m": 0.0388, "stage0_l": 0.12737, "stage0_h": 0.30338, "stage1_loss_instance_mil": 0.29895, "stage1_bag_acc": 98.65502, "stage1_neg_loss": 0.10218, "stage1_mean_ious": 0.24574, "stage1_s": 0.00168, "stage1_m": 0.02746, "stage1_l": 0.10545, "stage1_h": 0.26238, "loss": 0.43396, "grad_norm": 15.53564, "time": 1.70481}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 17797, "data_time": 0.02418, "stage0_loss_instance_mil": 0.037, "stage0_bag_acc": 98.01874, "stage0_mean_ious": 0.2862, "stage0_s": 0.0, "stage0_m": 0.04391, "stage0_l": 0.11398, "stage0_h": 0.30188, "stage1_loss_instance_mil": 0.31397, "stage1_bag_acc": 98.42506, "stage1_neg_loss": 0.0875, "stage1_mean_ious": 0.2499, "stage1_s": 0.0, "stage1_m": 0.0327, "stage1_l": 0.09323, "stage1_h": 0.26586, "loss": 0.43847, "grad_norm": 16.44702, "time": 1.6649}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 17797, "data_time": 0.02419, "stage0_loss_instance_mil": 0.05647, "stage0_bag_acc": 96.4541, "stage0_mean_ious": 0.2639, "stage0_s": 0.0, "stage0_m": 0.02808, "stage0_l": 0.11378, "stage0_h": 0.28224, "stage1_loss_instance_mil": 0.30784, "stage1_bag_acc": 97.56137, "stage1_neg_loss": 0.10239, "stage1_mean_ious": 0.23995, "stage1_s": 0.0, "stage1_m": 0.0235, "stage1_l": 0.09297, "stage1_h": 0.25849, "loss": 0.46671, "grad_norm": 18.99651, "time": 1.66173}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 17797, "data_time": 0.07336, "stage0_loss_instance_mil": 0.0342, "stage0_bag_acc": 98.57836, "stage0_mean_ious": 0.24997, "stage0_s": 0.0, "stage0_m": 0.04518, "stage0_l": 0.11244, "stage0_h": 0.26872, "stage1_loss_instance_mil": 0.3203, "stage1_bag_acc": 98.97985, "stage1_neg_loss": 0.12424, "stage1_mean_ious": 0.23479, "stage1_s": 0.0, "stage1_m": 0.03339, "stage1_l": 0.0921, "stage1_h": 0.25488, "loss": 0.47874, "grad_norm": 26.6886, "time": 1.70735}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 17797, "data_time": 0.02823, "stage0_loss_instance_mil": 0.02977, "stage0_bag_acc": 98.23344, "stage0_mean_ious": 0.23887, "stage0_s": 0.0, "stage0_m": 0.03748, "stage0_l": 0.10708, "stage0_h": 0.25313, "stage1_loss_instance_mil": 0.25977, "stage1_bag_acc": 99.00551, "stage1_neg_loss": 0.07959, "stage1_mean_ious": 0.21103, "stage1_s": 0.0, "stage1_m": 0.0257, "stage1_l": 0.08805, "stage1_h": 0.22616, "loss": 0.36913, "grad_norm": 11.04824, "time": 1.68805}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 17797, "data_time": 0.03019, "stage0_loss_instance_mil": 0.02498, "stage0_bag_acc": 98.57183, "stage0_mean_ious": 0.24054, "stage0_s": 0.0, "stage0_m": 0.02652, "stage0_l": 0.10561, "stage0_h": 0.25585, "stage1_loss_instance_mil": 0.25163, "stage1_bag_acc": 98.99459, "stage1_neg_loss": 0.084, "stage1_mean_ious": 0.21993, "stage1_s": 0.0, "stage1_m": 0.0224, "stage1_l": 0.08517, "stage1_h": 0.23543, "loss": 0.36061, "grad_norm": 14.53046, "time": 1.71374}
{"mode": "val", "epoch": 4, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.016, "bbox_mAP_50": 0.066, "bbox_mAP_75": 0.025, "bbox_mAP_s": 0.006, "bbox_mAP_m": 0.003, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.016 0.066 0.025 0.006 0.003 0.001"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 17797, "data_time": 0.0749, "stage0_loss_instance_mil": 0.01854, "stage0_bag_acc": 98.69909, "stage0_mean_ious": 0.27035, "stage0_s": 0.0, "stage0_m": 0.03246, "stage0_l": 0.12419, "stage0_h": 0.29047, "stage1_loss_instance_mil": 0.24924, "stage1_bag_acc": 99.76389, "stage1_neg_loss": 0.07673, "stage1_mean_ious": 0.24215, "stage1_s": 0.0, "stage1_m": 0.02804, "stage1_l": 0.09969, "stage1_h": 0.26211, "loss": 0.34452, "grad_norm": 10.83453, "time": 1.72706}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 17797, "data_time": 0.02571, "stage0_loss_instance_mil": 0.01165, "stage0_bag_acc": 99.55714, "stage0_mean_ious": 0.22904, "stage0_s": 0.0, "stage0_m": 0.02727, "stage0_l": 0.09584, "stage0_h": 0.24448, "stage1_loss_instance_mil": 0.228, "stage1_bag_acc": 99.54524, "stage1_neg_loss": 0.08293, "stage1_mean_ious": 0.20838, "stage1_s": 0.0, "stage1_m": 0.02056, "stage1_l": 0.07515, "stage1_h": 0.2256, "loss": 0.32258, "grad_norm": 14.06876, "time": 1.72639}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 17797, "data_time": 0.02503, "stage0_loss_instance_mil": 0.02863, "stage0_bag_acc": 98.82273, "stage0_mean_ious": 0.24387, "stage0_s": 0.0, "stage0_m": 0.01954, "stage0_l": 0.09367, "stage0_h": 0.26027, "stage1_loss_instance_mil": 0.21805, "stage1_bag_acc": 98.92221, "stage1_neg_loss": 0.07629, "stage1_mean_ious": 0.21611, "stage1_s": 0.0, "stage1_m": 0.01468, "stage1_l": 0.07081, "stage1_h": 0.23299, "loss": 0.32298, "grad_norm": 12.13286, "time": 1.68366}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 17797, "data_time": 0.07512, "stage0_loss_instance_mil": 0.01272, "stage0_bag_acc": 99.34167, "stage0_mean_ious": 0.22556, "stage0_s": 0.0, "stage0_m": 0.0424, "stage0_l": 0.08331, "stage0_h": 0.24084, "stage1_loss_instance_mil": 0.19063, "stage1_bag_acc": 99.74167, "stage1_neg_loss": 0.06982, "stage1_mean_ious": 0.21079, "stage1_s": 0.0, "stage1_m": 0.02921, "stage1_l": 0.064, "stage1_h": 0.22796, "loss": 0.27318, "grad_norm": 10.18066, "time": 1.7528}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 17797, "data_time": 0.02646, "stage0_loss_instance_mil": 0.02726, "stage0_bag_acc": 98.63283, "stage0_mean_ious": 0.2075, "stage0_s": 0.00054, "stage0_m": 0.04233, "stage0_l": 0.08261, "stage0_h": 0.22024, "stage1_loss_instance_mil": 0.20876, "stage1_bag_acc": 99.11497, "stage1_neg_loss": 0.07006, "stage1_mean_ious": 0.18847, "stage1_s": 0.00128, "stage1_m": 0.03376, "stage1_l": 0.06527, "stage1_h": 0.2022, "loss": 0.30608, "grad_norm": 10.66136, "time": 1.71633}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 17797, "data_time": 0.02507, "stage0_loss_instance_mil": 0.0167, "stage0_bag_acc": 98.71406, "stage0_mean_ious": 0.22573, "stage0_s": 0.0, "stage0_m": 0.02585, "stage0_l": 0.09863, "stage0_h": 0.24296, "stage1_loss_instance_mil": 0.19763, "stage1_bag_acc": 99.29005, "stage1_neg_loss": 0.07785, "stage1_mean_ious": 0.20995, "stage1_s": 0.0, "stage1_m": 0.01692, "stage1_l": 0.08043, "stage1_h": 0.22873, "loss": 0.29218, "grad_norm": 11.98831, "time": 1.69468}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.021, "bbox_mAP_50": 0.076, "bbox_mAP_75": 0.036, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.005, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.021 0.076 0.036 0.010 0.005 0.002"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 17797, "data_time": 0.07446, "stage0_loss_instance_mil": 0.01674, "stage0_bag_acc": 99.4681, "stage0_mean_ious": 0.2133, "stage0_s": 0.0, "stage0_m": 0.03136, "stage0_l": 0.08173, "stage0_h": 0.22615, "stage1_loss_instance_mil": 0.16954, "stage1_bag_acc": 99.50976, "stage1_neg_loss": 0.06362, "stage1_mean_ious": 0.19477, "stage1_s": 0.0, "stage1_m": 0.02146, "stage1_l": 0.06557, "stage1_h": 0.20914, "loss": 0.24991, "grad_norm": 8.56352, "time": 1.76624}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 17797, "data_time": 0.02596, "stage0_loss_instance_mil": 0.01188, "stage0_bag_acc": 99.30307, "stage0_mean_ious": 0.19747, "stage0_s": 0.0, "stage0_m": 0.0225, "stage0_l": 0.09593, "stage0_h": 0.2107, "stage1_loss_instance_mil": 0.15476, "stage1_bag_acc": 99.40765, "stage1_neg_loss": 0.06253, "stage1_mean_ious": 0.18335, "stage1_s": 0.0, "stage1_m": 0.01543, "stage1_l": 0.07517, "stage1_h": 0.19797, "loss": 0.22917, "grad_norm": 7.97177, "time": 1.71612}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 17797, "data_time": 0.02599, "stage0_loss_instance_mil": 0.00846, "stage0_bag_acc": 99.49921, "stage0_mean_ious": 0.21399, "stage0_s": 0.0, "stage0_m": 0.02747, "stage0_l": 0.07925, "stage0_h": 0.22882, "stage1_loss_instance_mil": 0.18297, "stage1_bag_acc": 99.69841, "stage1_neg_loss": 0.06698, "stage1_mean_ious": 0.19836, "stage1_s": 0.0, "stage1_m": 0.01902, "stage1_l": 0.06111, "stage1_h": 0.21451, "loss": 0.25841, "grad_norm": 9.55583, "time": 1.68814}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 17797, "data_time": 0.07568, "stage0_loss_instance_mil": 0.01013, "stage0_bag_acc": 99.59272, "stage0_mean_ious": 0.19662, "stage0_s": 0.0, "stage0_m": 0.04629, "stage0_l": 0.08374, "stage0_h": 0.20764, "stage1_loss_instance_mil": 0.19947, "stage1_bag_acc": 99.51296, "stage1_neg_loss": 0.07027, "stage1_mean_ious": 0.18635, "stage1_s": 0.0, "stage1_m": 0.0295, "stage1_l": 0.06083, "stage1_h": 0.20055, "loss": 0.27986, "grad_norm": 10.59442, "time": 1.75301}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 17797, "data_time": 0.02689, "stage0_loss_instance_mil": 0.03571, "stage0_bag_acc": 97.76239, "stage0_mean_ious": 0.18745, "stage0_s": 0.0, "stage0_m": 0.02705, "stage0_l": 0.09991, "stage0_h": 0.19607, "stage1_loss_instance_mil": 0.19255, "stage1_bag_acc": 98.60595, "stage1_neg_loss": 0.06636, "stage1_mean_ious": 0.17947, "stage1_s": 0.0, "stage1_m": 0.02045, "stage1_l": 0.08945, "stage1_h": 0.18935, "loss": 0.29462, "grad_norm": 11.85331, "time": 1.71794}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 17797, "data_time": 0.02661, "stage0_loss_instance_mil": 0.06614, "stage0_bag_acc": 95.54502, "stage0_mean_ious": 0.17879, "stage0_s": 0.0, "stage0_m": 0.03616, "stage0_l": 0.10555, "stage0_h": 0.18681, "stage1_loss_instance_mil": 0.17211, "stage1_bag_acc": 96.32335, "stage1_neg_loss": 0.06756, "stage1_mean_ious": 0.16717, "stage1_s": 0.0, "stage1_m": 0.02665, "stage1_l": 0.07923, "stage1_h": 0.17822, "loss": 0.30581, "grad_norm": 11.43821, "time": 1.72534}
{"mode": "val", "epoch": 8, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.015, "bbox_mAP_50": 0.063, "bbox_mAP_75": 0.028, "bbox_mAP_s": 0.005, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.015 0.063 0.028 0.005 0.001 0.000"}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 17797, "data_time": 0.07571, "stage0_loss_instance_mil": 0.00727, "stage0_bag_acc": 99.60227, "stage0_mean_ious": 0.20612, "stage0_s": 0.00146, "stage0_m": 0.03355, "stage0_l": 0.09208, "stage0_h": 0.21912, "stage1_loss_instance_mil": 0.1404, "stage1_bag_acc": 99.81818, "stage1_neg_loss": 0.06005, "stage1_mean_ious": 0.19448, "stage1_s": 0.00204, "stage1_m": 0.02243, "stage1_l": 0.07678, "stage1_h": 0.20957, "loss": 0.20773, "grad_norm": 7.27969, "time": 1.75671}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 17797, "data_time": 0.02591, "stage0_loss_instance_mil": 0.00592, "stage0_bag_acc": 99.676, "stage0_mean_ious": 0.17513, "stage0_s": 0.0, "stage0_m": 0.01883, "stage0_l": 0.08787, "stage0_h": 0.18345, "stage1_loss_instance_mil": 0.14817, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05696, "stage1_mean_ious": 0.16052, "stage1_s": 0.0, "stage1_m": 0.01365, "stage1_l": 0.06852, "stage1_h": 0.17072, "loss": 0.21106, "grad_norm": 6.75696, "time": 1.71521}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 17797, "data_time": 0.02698, "stage0_loss_instance_mil": 0.00546, "stage0_bag_acc": 99.7, "stage0_mean_ious": 0.18987, "stage0_s": 0.0, "stage0_m": 0.02662, "stage0_l": 0.10091, "stage0_h": 0.19973, "stage1_loss_instance_mil": 0.14278, "stage1_bag_acc": 99.7, "stage1_neg_loss": 0.05865, "stage1_mean_ious": 0.17874, "stage1_s": 0.0, "stage1_m": 0.01768, "stage1_l": 0.08005, "stage1_h": 0.1915, "loss": 0.20688, "grad_norm": 5.79398, "time": 1.74265}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 17797, "data_time": 0.07542, "stage0_loss_instance_mil": 0.00725, "stage0_bag_acc": 99.58618, "stage0_mean_ious": 0.16903, "stage0_s": 0.0, "stage0_m": 0.01972, "stage0_l": 0.10216, "stage0_h": 0.1769, "stage1_loss_instance_mil": 0.13401, "stage1_bag_acc": 99.79144, "stage1_neg_loss": 0.0601, "stage1_mean_ious": 0.15979, "stage1_s": 0.0, "stage1_m": 0.01318, "stage1_l": 0.08318, "stage1_h": 0.16996, "loss": 0.20135, "grad_norm": 5.50396, "time": 1.76961}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 17797, "data_time": 0.02816, "stage0_loss_instance_mil": 0.00382, "stage0_bag_acc": 99.76974, "stage0_mean_ious": 0.18574, "stage0_s": 0.0, "stage0_m": 0.02422, "stage0_l": 0.07845, "stage0_h": 0.19482, "stage1_loss_instance_mil": 0.1378, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.05456, "stage1_mean_ious": 0.181, "stage1_s": 0.0, "stage1_m": 0.01606, "stage1_l": 0.06157, "stage1_h": 0.19351, "loss": 0.19618, "grad_norm": 5.82283, "time": 1.69843}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 17797, "data_time": 0.02929, "stage0_loss_instance_mil": 0.00385, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.18948, "stage0_s": 0.0, "stage0_m": 0.02598, "stage0_l": 0.07876, "stage0_h": 0.19733, "stage1_loss_instance_mil": 0.14558, "stage1_bag_acc": 99.78711, "stage1_neg_loss": 0.06334, "stage1_mean_ious": 0.17631, "stage1_s": 0.0, "stage1_m": 0.0203, "stage1_l": 0.06284, "stage1_h": 0.18571, "loss": 0.21278, "grad_norm": 6.12617, "time": 1.71414}
{"mode": "val", "epoch": 10, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.014, "bbox_mAP_50": 0.059, "bbox_mAP_75": 0.026, "bbox_mAP_s": 0.004, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.001, "bbox_mAP_copypaste": "0.014 0.059 0.026 0.004 0.001 0.001"}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 17797, "data_time": 0.07584, "stage0_loss_instance_mil": 0.0038, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.18207, "stage0_s": 0.0, "stage0_m": 0.03217, "stage0_l": 0.0929, "stage0_h": 0.19247, "stage1_loss_instance_mil": 0.13431, "stage1_bag_acc": 99.79798, "stage1_neg_loss": 0.05764, "stage1_mean_ious": 0.173, "stage1_s": 0.0, "stage1_m": 0.02486, "stage1_l": 0.07892, "stage1_h": 0.18606, "loss": 0.19575, "grad_norm": 5.80235, "time": 1.72232}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 17797, "data_time": 0.02793, "stage0_loss_instance_mil": 0.00465, "stage0_bag_acc": 99.69424, "stage0_mean_ious": 0.1821, "stage0_s": 0.0, "stage0_m": 0.04397, "stage0_l": 0.11375, "stage0_h": 0.19121, "stage1_loss_instance_mil": 0.13169, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05727, "stage1_mean_ious": 0.17334, "stage1_s": 0.0, "stage1_m": 0.02981, "stage1_l": 0.09112, "stage1_h": 0.18577, "loss": 0.19361, "grad_norm": 5.42694, "time": 1.71431}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 17797, "data_time": 0.02705, "stage0_loss_instance_mil": 0.00477, "stage0_bag_acc": 99.6364, "stage0_mean_ious": 0.18006, "stage0_s": 0.0, "stage0_m": 0.01298, "stage0_l": 0.06893, "stage0_h": 0.18803, "stage1_loss_instance_mil": 0.13882, "stage1_bag_acc": 99.76974, "stage1_neg_loss": 0.05454, "stage1_mean_ious": 0.17414, "stage1_s": 0.0, "stage1_m": 0.01049, "stage1_l": 0.05571, "stage1_h": 0.18366, "loss": 0.19813, "grad_norm": 5.59967, "time": 1.69269}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 17797, "data_time": 0.07503, "stage0_loss_instance_mil": 0.00347, "stage0_bag_acc": 99.7954, "stage0_mean_ious": 0.17967, "stage0_s": 0.00166, "stage0_m": 0.02275, "stage0_l": 0.1052, "stage0_h": 0.1893, "stage1_loss_instance_mil": 0.14301, "stage1_bag_acc": 99.91304, "stage1_neg_loss": 0.05869, "stage1_mean_ious": 0.16989, "stage1_s": 0.00188, "stage1_m": 0.01402, "stage1_l": 0.08517, "stage1_h": 0.18193, "loss": 0.20517, "grad_norm": 6.23547, "time": 1.7463}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 17797, "data_time": 0.0273, "stage0_loss_instance_mil": 0.00374, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.1851, "stage0_s": 0.0, "stage0_m": 0.01426, "stage0_l": 0.09718, "stage0_h": 0.1939, "stage1_loss_instance_mil": 0.1349, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05154, "stage1_mean_ious": 0.17711, "stage1_s": 0.0, "stage1_m": 0.0091, "stage1_l": 0.07999, "stage1_h": 0.18777, "loss": 0.19017, "grad_norm": 5.79318, "time": 1.7392}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 17797, "data_time": 0.02723, "stage0_loss_instance_mil": 0.00851, "stage0_bag_acc": 99.51872, "stage0_mean_ious": 0.17336, "stage0_s": 0.0, "stage0_m": 0.02888, "stage0_l": 0.07903, "stage0_h": 0.18253, "stage1_loss_instance_mil": 0.12715, "stage1_bag_acc": 99.48463, "stage1_neg_loss": 0.05771, "stage1_mean_ious": 0.16597, "stage1_s": 0.0, "stage1_m": 0.02102, "stage1_l": 0.06298, "stage1_h": 0.17746, "loss": 0.19337, "grad_norm": 5.60643, "time": 1.69938}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.012, "bbox_mAP_50": 0.051, "bbox_mAP_75": 0.022, "bbox_mAP_s": 0.003, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.012 0.051 0.022 0.003 0.000 0.000"}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 0.0, "memory": 17797, "data_time": 0.07516, "stage0_loss_instance_mil": 0.00783, "stage0_bag_acc": 99.59803, "stage0_mean_ious": 0.18013, "stage0_s": 0.0, "stage0_m": 0.01882, "stage0_l": 0.09441, "stage0_h": 0.18811, "stage1_loss_instance_mil": 0.13709, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.05344, "stage1_mean_ious": 0.17336, "stage1_s": 0.0, "stage1_m": 0.01371, "stage1_l": 0.07523, "stage1_h": 0.18347, "loss": 0.19836, "grad_norm": 5.80578, "time": 1.75809}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.0, "memory": 17797, "data_time": 0.02695, "stage0_loss_instance_mil": 0.00481, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.16053, "stage0_s": 0.0, "stage0_m": 0.02804, "stage0_l": 0.08034, "stage0_h": 0.16999, "stage1_loss_instance_mil": 0.1288, "stage1_bag_acc": 99.90909, "stage1_neg_loss": 0.05299, "stage1_mean_ious": 0.1522, "stage1_s": 0.0, "stage1_m": 0.0184, "stage1_l": 0.06684, "stage1_h": 0.16396, "loss": 0.1866, "grad_norm": 5.52428, "time": 1.72518}
{"mode": "train", "epoch": 13, "iter": 150, "lr": 0.0, "memory": 17797, "data_time": 0.02834, "stage0_loss_instance_mil": 0.0042, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.17023, "stage0_s": 0.0, "stage0_m": 0.03228, "stage0_l": 0.07174, "stage0_h": 0.17837, "stage1_loss_instance_mil": 0.13145, "stage1_bag_acc": 99.85714, "stage1_neg_loss": 0.0571, "stage1_mean_ious": 0.15979, "stage1_s": 0.0, "stage1_m": 0.02686, "stage1_l": 0.05711, "stage1_h": 0.16992, "loss": 0.19275, "grad_norm": 5.76303, "time": 1.75925}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 0.0, "memory": 17797, "data_time": 0.07821, "stage0_loss_instance_mil": 0.00377, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.17098, "stage0_s": 0.0, "stage0_m": 0.01835, "stage0_l": 0.09087, "stage0_h": 0.18139, "stage1_loss_instance_mil": 0.1308, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.05883, "stage1_mean_ious": 0.16244, "stage1_s": 0.0, "stage1_m": 0.01334, "stage1_l": 0.0719, "stage1_h": 0.17494, "loss": 0.1934, "grad_norm": 5.99172, "time": 1.78056}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.0, "memory": 17797, "data_time": 0.02726, "stage0_loss_instance_mil": 0.00553, "stage0_bag_acc": 99.8114, "stage0_mean_ious": 0.17596, "stage0_s": 0.00177, "stage0_m": 0.03293, "stage0_l": 0.09627, "stage0_h": 0.18326, "stage1_loss_instance_mil": 0.13597, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.05633, "stage1_mean_ious": 0.16733, "stage1_s": 0.00169, "stage1_m": 0.02301, "stage1_l": 0.07423, "stage1_h": 0.17763, "loss": 0.19784, "grad_norm": 5.70693, "time": 1.72542}
{"mode": "train", "epoch": 14, "iter": 150, "lr": 0.0, "memory": 17797, "data_time": 0.02598, "stage0_loss_instance_mil": 0.00265, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.17468, "stage0_s": 0.0, "stage0_m": 0.03007, "stage0_l": 0.08696, "stage0_h": 0.1831, "stage1_loss_instance_mil": 0.12759, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05504, "stage1_mean_ious": 0.1659, "stage1_s": 0.0, "stage1_m": 0.02329, "stage1_l": 0.06897, "stage1_h": 0.17723, "loss": 0.18528, "grad_norm": 6.07241, "time": 1.70986}
