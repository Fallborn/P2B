{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18742, "data_time": 0.0754, "stage0_loss_instance_mil": 0.73626, "stage0_bag_acc": 14.99029, "stage0_mean_ious": 0.31251, "stage0_s": 0.0, "stage0_m": 0.03265, "stage0_l": 0.22673, "stage0_h": 0.31684, "stage1_loss_instance_mil": 0.14941, "stage1_bag_acc": 17.77481, "stage1_neg_loss": 0.00231, "stage1_mean_ious": 0.28899, "stage1_s": 0.0, "stage1_m": 0.031, "stage1_l": 0.20299, "stage1_h": 0.29468, "loss": 0.88798, "grad_norm": 3.07298, "time": 1.78794}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.02709, "stage0_loss_instance_mil": 0.61601, "stage0_bag_acc": 55.18915, "stage0_mean_ious": 0.34862, "stage0_s": 0.0, "stage0_m": 0.0298, "stage0_l": 0.26815, "stage0_h": 0.35759, "stage1_loss_instance_mil": 0.21262, "stage1_bag_acc": 24.50814, "stage1_neg_loss": 0.0055, "stage1_mean_ious": 0.33045, "stage1_s": 0.0, "stage1_m": 0.02745, "stage1_l": 0.25693, "stage1_h": 0.33937, "loss": 0.83414, "grad_norm": 3.51582, "time": 1.79327}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.0272, "stage0_loss_instance_mil": 0.22777, "stage0_bag_acc": 93.61449, "stage0_mean_ious": 0.41258, "stage0_s": 0.0, "stage0_m": 0.02616, "stage0_l": 0.22652, "stage0_h": 0.42464, "stage1_loss_instance_mil": 0.36097, "stage1_bag_acc": 76.66599, "stage1_neg_loss": 0.06796, "stage1_mean_ious": 0.39642, "stage1_s": 0.0, "stage1_m": 0.0251, "stage1_l": 0.21347, "stage1_h": 0.40918, "loss": 0.65669, "grad_norm": 9.89964, "time": 1.74309}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18742, "data_time": 0.07673, "stage0_loss_instance_mil": 0.08784, "stage0_bag_acc": 95.35591, "stage0_mean_ious": 0.35355, "stage0_s": 0.0, "stage0_m": 0.05083, "stage0_l": 0.17405, "stage0_h": 0.37241, "stage1_loss_instance_mil": 0.36787, "stage1_bag_acc": 95.78626, "stage1_neg_loss": 0.0883, "stage1_mean_ious": 0.32811, "stage1_s": 0.0, "stage1_m": 0.03505, "stage1_l": 0.1575, "stage1_h": 0.34746, "loss": 0.54401, "grad_norm": 13.79631, "time": 1.80955}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18742, "data_time": 0.02583, "stage0_loss_instance_mil": 0.05077, "stage0_bag_acc": 97.19167, "stage0_mean_ious": 0.3385, "stage0_s": 0.0, "stage0_m": 0.04725, "stage0_l": 0.15599, "stage0_h": 0.36048, "stage1_loss_instance_mil": 0.3146, "stage1_bag_acc": 98.02288, "stage1_neg_loss": 0.09169, "stage1_mean_ious": 0.30516, "stage1_s": 0.0, "stage1_m": 0.0335, "stage1_l": 0.13252, "stage1_h": 0.32708, "loss": 0.45707, "grad_norm": 12.16056, "time": 1.7169}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18742, "data_time": 0.02651, "stage0_loss_instance_mil": 0.05323, "stage0_bag_acc": 96.62029, "stage0_mean_ious": 0.31144, "stage0_s": 0.0, "stage0_m": 0.04502, "stage0_l": 0.14045, "stage0_h": 0.32602, "stage1_loss_instance_mil": 0.29603, "stage1_bag_acc": 97.3493, "stage1_neg_loss": 0.08755, "stage1_mean_ious": 0.27546, "stage1_s": 0.0, "stage1_m": 0.02815, "stage1_l": 0.1269, "stage1_h": 0.28939, "loss": 0.43682, "grad_norm": 13.01579, "time": 1.74011}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18742, "data_time": 0.0775, "stage0_loss_instance_mil": 0.02967, "stage0_bag_acc": 98.43075, "stage0_mean_ious": 0.27988, "stage0_s": 0.0, "stage0_m": 0.05689, "stage0_l": 0.12484, "stage0_h": 0.30065, "stage1_loss_instance_mil": 0.26358, "stage1_bag_acc": 98.8077, "stage1_neg_loss": 0.0832, "stage1_mean_ious": 0.25128, "stage1_s": 0.0, "stage1_m": 0.03386, "stage1_l": 0.09468, "stage1_h": 0.2732, "loss": 0.37645, "grad_norm": 12.66596, "time": 1.77506}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02683, "stage0_loss_instance_mil": 0.03204, "stage0_bag_acc": 98.3511, "stage0_mean_ious": 0.27996, "stage0_s": 0.00859, "stage0_m": 0.04001, "stage0_l": 0.13402, "stage0_h": 0.29586, "stage1_loss_instance_mil": 0.26631, "stage1_bag_acc": 98.91565, "stage1_neg_loss": 0.08609, "stage1_mean_ious": 0.24753, "stage1_s": 0.00814, "stage1_m": 0.02691, "stage1_l": 0.10278, "stage1_h": 0.2649, "loss": 0.38444, "grad_norm": 14.01305, "time": 1.73916}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.02759, "stage0_loss_instance_mil": 0.03907, "stage0_bag_acc": 97.49658, "stage0_mean_ious": 0.28672, "stage0_s": 0.0, "stage0_m": 0.01908, "stage0_l": 0.15559, "stage0_h": 0.30238, "stage1_loss_instance_mil": 0.29114, "stage1_bag_acc": 98.64926, "stage1_neg_loss": 0.08244, "stage1_mean_ious": 0.25594, "stage1_s": 0.0, "stage1_m": 0.01293, "stage1_l": 0.12857, "stage1_h": 0.27117, "loss": 0.41265, "grad_norm": 14.71951, "time": 1.7431}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.036, "bbox_mAP_50": 0.125, "bbox_mAP_75": 0.065, "bbox_mAP_s": 0.02, "bbox_mAP_m": 0.007, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.036 0.125 0.065 0.020 0.007 0.002"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.07752, "stage0_loss_instance_mil": 0.03958, "stage0_bag_acc": 97.22513, "stage0_mean_ious": 0.3067, "stage0_s": 0.0, "stage0_m": 0.03543, "stage0_l": 0.16133, "stage0_h": 0.32507, "stage1_loss_instance_mil": 0.21707, "stage1_bag_acc": 98.44236, "stage1_neg_loss": 0.073, "stage1_mean_ious": 0.26054, "stage1_s": 0.0, "stage1_m": 0.02317, "stage1_l": 0.12338, "stage1_h": 0.27839, "loss": 0.32965, "grad_norm": 12.27445, "time": 1.81282}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02666, "stage0_loss_instance_mil": 0.01941, "stage0_bag_acc": 98.91039, "stage0_mean_ious": 0.29431, "stage0_s": 0.0, "stage0_m": 0.02883, "stage0_l": 0.14882, "stage0_h": 0.31589, "stage1_loss_instance_mil": 0.21585, "stage1_bag_acc": 99.37317, "stage1_neg_loss": 0.07895, "stage1_mean_ious": 0.2555, "stage1_s": 0.0, "stage1_m": 0.01717, "stage1_l": 0.11259, "stage1_h": 0.27651, "loss": 0.31421, "grad_norm": 12.94919, "time": 1.73884}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.02602, "stage0_loss_instance_mil": 0.02158, "stage0_bag_acc": 99.00236, "stage0_mean_ious": 0.27776, "stage0_s": 0.0, "stage0_m": 0.04299, "stage0_l": 0.08238, "stage0_h": 0.30383, "stage1_loss_instance_mil": 0.21089, "stage1_bag_acc": 98.82876, "stage1_neg_loss": 0.08376, "stage1_mean_ious": 0.24643, "stage1_s": 0.0, "stage1_m": 0.0268, "stage1_l": 0.06518, "stage1_h": 0.27194, "loss": 0.31623, "grad_norm": 13.27561, "time": 1.72144}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.08666, "stage0_loss_instance_mil": 0.0133, "stage0_bag_acc": 99.10743, "stage0_mean_ious": 0.26685, "stage0_s": 0.0, "stage0_m": 0.05131, "stage0_l": 0.09406, "stage0_h": 0.28415, "stage1_loss_instance_mil": 0.18754, "stage1_bag_acc": 99.57049, "stage1_neg_loss": 0.07131, "stage1_mean_ious": 0.23242, "stage1_s": 0.0, "stage1_m": 0.03369, "stage1_l": 0.06872, "stage1_h": 0.25081, "loss": 0.27215, "grad_norm": 11.88965, "time": 1.78923}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.0341, "stage0_loss_instance_mil": 0.01231, "stage0_bag_acc": 99.44196, "stage0_mean_ious": 0.31402, "stage0_s": 0.0, "stage0_m": 0.01752, "stage0_l": 0.16321, "stage0_h": 0.33067, "stage1_loss_instance_mil": 0.16779, "stage1_bag_acc": 99.41617, "stage1_neg_loss": 0.06285, "stage1_mean_ious": 0.2798, "stage1_s": 0.0, "stage1_m": 0.00992, "stage1_l": 0.13524, "stage1_h": 0.29697, "loss": 0.24294, "grad_norm": 9.33419, "time": 1.74162}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.03244, "stage0_loss_instance_mil": 0.01906, "stage0_bag_acc": 98.54583, "stage0_mean_ious": 0.3057, "stage0_s": 0.0, "stage0_m": 0.05633, "stage0_l": 0.12818, "stage0_h": 0.32529, "stage1_loss_instance_mil": 0.19889, "stage1_bag_acc": 98.91759, "stage1_neg_loss": 0.06562, "stage1_mean_ious": 0.27495, "stage1_s": 0.0, "stage1_m": 0.03554, "stage1_l": 0.103, "stage1_h": 0.29563, "loss": 0.28357, "grad_norm": 11.89444, "time": 1.7495}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.08229, "stage0_loss_instance_mil": 0.0142, "stage0_bag_acc": 99.19812, "stage0_mean_ious": 0.27038, "stage0_s": 0.0081, "stage0_m": 0.02735, "stage0_l": 0.11977, "stage0_h": 0.28866, "stage1_loss_instance_mil": 0.13779, "stage1_bag_acc": 99.52838, "stage1_neg_loss": 0.05794, "stage1_mean_ious": 0.2488, "stage1_s": 0.00909, "stage1_m": 0.01765, "stage1_l": 0.09754, "stage1_h": 0.26838, "loss": 0.20992, "grad_norm": 8.34781, "time": 1.77447}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.03191, "stage0_loss_instance_mil": 0.01157, "stage0_bag_acc": 99.09806, "stage0_mean_ious": 0.28356, "stage0_s": 0.0, "stage0_m": 0.03932, "stage0_l": 0.10347, "stage0_h": 0.3039, "stage1_loss_instance_mil": 0.15635, "stage1_bag_acc": 99.34643, "stage1_neg_loss": 0.06419, "stage1_mean_ious": 0.258, "stage1_s": 0.0, "stage1_m": 0.02171, "stage1_l": 0.08553, "stage1_h": 0.27906, "loss": 0.23211, "grad_norm": 10.94965, "time": 1.73071}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.03192, "stage0_loss_instance_mil": 0.00789, "stage0_bag_acc": 99.4949, "stage0_mean_ious": 0.25196, "stage0_s": 0.0, "stage0_m": 0.03368, "stage0_l": 0.13091, "stage0_h": 0.26777, "stage1_loss_instance_mil": 0.1441, "stage1_bag_acc": 99.60839, "stage1_neg_loss": 0.05686, "stage1_mean_ious": 0.23343, "stage1_s": 0.0, "stage1_m": 0.02272, "stage1_l": 0.11201, "stage1_h": 0.25017, "loss": 0.20884, "grad_norm": 8.03301, "time": 1.73115}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.043, "bbox_mAP_50": 0.135, "bbox_mAP_75": 0.081, "bbox_mAP_s": 0.031, "bbox_mAP_m": 0.018, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.043 0.135 0.081 0.031 0.018 0.005"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.07417, "stage0_loss_instance_mil": 0.02096, "stage0_bag_acc": 99.25484, "stage0_mean_ious": 0.26658, "stage0_s": 0.0, "stage0_m": 0.03051, "stage0_l": 0.13154, "stage0_h": 0.28449, "stage1_loss_instance_mil": 0.14564, "stage1_bag_acc": 98.81134, "stage1_neg_loss": 0.05729, "stage1_mean_ious": 0.23789, "stage1_s": 0.0, "stage1_m": 0.01849, "stage1_l": 0.10259, "stage1_h": 0.25724, "loss": 0.22388, "grad_norm": 8.85446, "time": 1.75769}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02801, "stage0_loss_instance_mil": 0.01693, "stage0_bag_acc": 99.12847, "stage0_mean_ious": 0.26934, "stage0_s": 0.00803, "stage0_m": 0.02465, "stage0_l": 0.08869, "stage0_h": 0.28943, "stage1_loss_instance_mil": 0.16156, "stage1_bag_acc": 99.3079, "stage1_neg_loss": 0.08038, "stage1_mean_ious": 0.25266, "stage1_s": 0.00985, "stage1_m": 0.01807, "stage1_l": 0.074, "stage1_h": 0.27281, "loss": 0.25887, "grad_norm": 11.85901, "time": 1.70685}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.02785, "stage0_loss_instance_mil": 0.01025, "stage0_bag_acc": 99.32285, "stage0_mean_ious": 0.25661, "stage0_s": 0.0, "stage0_m": 0.03839, "stage0_l": 0.13237, "stage0_h": 0.274, "stage1_loss_instance_mil": 0.12319, "stage1_bag_acc": 99.3669, "stage1_neg_loss": 0.05252, "stage1_mean_ious": 0.23948, "stage1_s": 0.0, "stage1_m": 0.02546, "stage1_l": 0.11664, "stage1_h": 0.25806, "loss": 0.18597, "grad_norm": 6.97847, "time": 1.6935}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18742, "data_time": 0.07801, "stage0_loss_instance_mil": 0.01006, "stage0_bag_acc": 99.49667, "stage0_mean_ious": 0.27406, "stage0_s": 0.0, "stage0_m": 0.02875, "stage0_l": 0.11372, "stage0_h": 0.29006, "stage1_loss_instance_mil": 0.12021, "stage1_bag_acc": 99.23304, "stage1_neg_loss": 0.05064, "stage1_mean_ious": 0.25725, "stage1_s": 0.0, "stage1_m": 0.01809, "stage1_l": 0.09435, "stage1_h": 0.27531, "loss": 0.18091, "grad_norm": 8.02291, "time": 1.76141}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18742, "data_time": 0.02714, "stage0_loss_instance_mil": 0.01038, "stage0_bag_acc": 99.47203, "stage0_mean_ious": 0.28861, "stage0_s": 0.0, "stage0_m": 0.04617, "stage0_l": 0.10609, "stage0_h": 0.30985, "stage1_loss_instance_mil": 0.11788, "stage1_bag_acc": 99.64727, "stage1_neg_loss": 0.04927, "stage1_mean_ious": 0.26647, "stage1_s": 0.0, "stage1_m": 0.02983, "stage1_l": 0.09207, "stage1_h": 0.28838, "loss": 0.17754, "grad_norm": 7.44754, "time": 1.72481}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18742, "data_time": 0.02566, "stage0_loss_instance_mil": 0.01544, "stage0_bag_acc": 98.96291, "stage0_mean_ious": 0.2575, "stage0_s": 0.0079, "stage0_m": 0.04543, "stage0_l": 0.11618, "stage0_h": 0.28123, "stage1_loss_instance_mil": 0.11183, "stage1_bag_acc": 99.43791, "stage1_neg_loss": 0.05197, "stage1_mean_ious": 0.23388, "stage1_s": 0.00954, "stage1_m": 0.04145, "stage1_l": 0.09106, "stage1_h": 0.25814, "loss": 0.17924, "grad_norm": 7.91802, "time": 1.68932}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.07357, "stage0_loss_instance_mil": 0.00468, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.26379, "stage0_s": 0.0, "stage0_m": 0.04157, "stage0_l": 0.11252, "stage0_h": 0.28483, "stage1_loss_instance_mil": 0.09644, "stage1_bag_acc": 99.92308, "stage1_neg_loss": 0.04636, "stage1_mean_ious": 0.23854, "stage1_s": 0.0, "stage1_m": 0.0288, "stage1_l": 0.09031, "stage1_h": 0.26029, "loss": 0.14748, "grad_norm": 5.74163, "time": 1.71868}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.02837, "stage0_loss_instance_mil": 0.00318, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.29095, "stage0_s": 0.0, "stage0_m": 0.02003, "stage0_l": 0.11537, "stage0_h": 0.31186, "stage1_loss_instance_mil": 0.0936, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04951, "stage1_mean_ious": 0.26503, "stage1_s": 0.0, "stage1_m": 0.01904, "stage1_l": 0.09342, "stage1_h": 0.28513, "loss": 0.14628, "grad_norm": 5.65368, "time": 1.72604}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.02595, "stage0_loss_instance_mil": 0.00685, "stage0_bag_acc": 99.77576, "stage0_mean_ious": 0.30933, "stage0_s": 0.0, "stage0_m": 0.03028, "stage0_l": 0.11824, "stage0_h": 0.32585, "stage1_loss_instance_mil": 0.08896, "stage1_bag_acc": 99.90909, "stage1_neg_loss": 0.04237, "stage1_mean_ious": 0.27654, "stage1_s": 0.0, "stage1_m": 0.02027, "stage1_l": 0.10349, "stage1_h": 0.29233, "loss": 0.13818, "grad_norm": 4.66063, "time": 1.68599}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.04, "bbox_mAP_50": 0.13, "bbox_mAP_75": 0.075, "bbox_mAP_s": 0.025, "bbox_mAP_m": 0.013, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.040 0.130 0.075 0.025 0.013 0.004"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.08034, "stage0_loss_instance_mil": 0.00497, "stage0_bag_acc": 99.84524, "stage0_mean_ious": 0.28358, "stage0_s": 0.0, "stage0_m": 0.01857, "stage0_l": 0.11693, "stage0_h": 0.30565, "stage1_loss_instance_mil": 0.08671, "stage1_bag_acc": 99.92857, "stage1_neg_loss": 0.04533, "stage1_mean_ious": 0.25692, "stage1_s": 0.0, "stage1_m": 0.01391, "stage1_l": 0.0982, "stage1_h": 0.27912, "loss": 0.13701, "grad_norm": 5.4493, "time": 1.79372}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.03105, "stage0_loss_instance_mil": 0.00293, "stage0_bag_acc": 99.91304, "stage0_mean_ious": 0.30532, "stage0_s": 0.0, "stage0_m": 0.04435, "stage0_l": 0.14249, "stage0_h": 0.33031, "stage1_loss_instance_mil": 0.07804, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04312, "stage1_mean_ious": 0.27001, "stage1_s": 0.0, "stage1_m": 0.02955, "stage1_l": 0.12137, "stage1_h": 0.29342, "loss": 0.1241, "grad_norm": 4.77601, "time": 1.69744}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.03445, "stage0_loss_instance_mil": 0.00266, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.28652, "stage0_s": 0.0, "stage0_m": 0.03646, "stage0_l": 0.09205, "stage0_h": 0.30452, "stage1_loss_instance_mil": 0.09371, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.05088, "stage1_mean_ious": 0.26123, "stage1_s": 0.0, "stage1_m": 0.03282, "stage1_l": 0.08177, "stage1_h": 0.27811, "loss": 0.14724, "grad_norm": 5.60335, "time": 1.76135}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18742, "data_time": 0.07787, "stage0_loss_instance_mil": 0.00239, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.29014, "stage0_s": 0.0, "stage0_m": 0.02946, "stage0_l": 0.11068, "stage0_h": 0.31122, "stage1_loss_instance_mil": 0.07539, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.03999, "stage1_mean_ious": 0.25953, "stage1_s": 0.0, "stage1_m": 0.0233, "stage1_l": 0.10021, "stage1_h": 0.27826, "loss": 0.11777, "grad_norm": 4.30471, "time": 1.76589}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18742, "data_time": 0.03176, "stage0_loss_instance_mil": 0.00176, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.28489, "stage0_s": 0.0, "stage0_m": 0.03223, "stage0_l": 0.12609, "stage0_h": 0.30596, "stage1_loss_instance_mil": 0.0891, "stage1_bag_acc": 99.91667, "stage1_neg_loss": 0.04219, "stage1_mean_ious": 0.25605, "stage1_s": 0.0, "stage1_m": 0.0191, "stage1_l": 0.10373, "stage1_h": 0.27697, "loss": 0.13305, "grad_norm": 4.84864, "time": 1.74862}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18742, "data_time": 0.03018, "stage0_loss_instance_mil": 0.00552, "stage0_bag_acc": 99.88889, "stage0_mean_ious": 0.29376, "stage0_s": 0.0, "stage0_m": 0.03363, "stage0_l": 0.14238, "stage0_h": 0.31026, "stage1_loss_instance_mil": 0.07667, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.04403, "stage1_mean_ious": 0.26102, "stage1_s": 0.0, "stage1_m": 0.02816, "stage1_l": 0.12417, "stage1_h": 0.27605, "loss": 0.12621, "grad_norm": 4.87599, "time": 1.76669}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18742, "data_time": 0.08392, "stage0_loss_instance_mil": 0.00225, "stage0_bag_acc": 99.89474, "stage0_mean_ious": 0.30343, "stage0_s": 0.0, "stage0_m": 0.03555, "stage0_l": 0.14667, "stage0_h": 0.32478, "stage1_loss_instance_mil": 0.07565, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04611, "stage1_mean_ious": 0.27239, "stage1_s": 0.0, "stage1_m": 0.02393, "stage1_l": 0.12419, "stage1_h": 0.29349, "loss": 0.12401, "grad_norm": 5.19747, "time": 1.83194}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18742, "data_time": 0.02971, "stage0_loss_instance_mil": 0.00244, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.28457, "stage0_s": 0.0, "stage0_m": 0.0475, "stage0_l": 0.13135, "stage0_h": 0.31239, "stage1_loss_instance_mil": 0.07179, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04225, "stage1_mean_ious": 0.24924, "stage1_s": 0.0, "stage1_m": 0.03126, "stage1_l": 0.11437, "stage1_h": 0.27491, "loss": 0.11648, "grad_norm": 4.72902, "time": 1.74274}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18742, "data_time": 0.02975, "stage0_loss_instance_mil": 0.00659, "stage0_bag_acc": 99.76667, "stage0_mean_ious": 0.30072, "stage0_s": 0.0, "stage0_m": 0.03607, "stage0_l": 0.11656, "stage0_h": 0.32484, "stage1_loss_instance_mil": 0.07798, "stage1_bag_acc": 99.76667, "stage1_neg_loss": 0.03853, "stage1_mean_ious": 0.27272, "stage1_s": 0.0, "stage1_m": 0.0262, "stage1_l": 0.09766, "stage1_h": 0.29617, "loss": 0.1231, "grad_norm": 5.15272, "time": 1.7057}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.041, "bbox_mAP_50": 0.136, "bbox_mAP_75": 0.077, "bbox_mAP_s": 0.026, "bbox_mAP_m": 0.013, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.041 0.136 0.077 0.026 0.013 0.004"}
