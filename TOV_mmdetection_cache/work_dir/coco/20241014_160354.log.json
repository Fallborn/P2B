{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=6,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18686, "data_time": 0.07653, "stage0_loss_instance_mil": 0.7123, "stage0_bag_acc": 28.93441, "stage0_mean_ious": 0.07557, "stage0_s": 0.00281, "stage0_m": 0.01594, "stage0_l": 0.0992, "stage0_h": 0.06924, "stage1_loss_instance_mil": 0.16787, "stage1_bag_acc": 12.79996, "stage1_neg_loss": 0.00217, "stage1_mean_ious": 0.07505, "stage1_s": 0.00286, "stage1_m": 0.01592, "stage1_l": 0.09995, "stage1_h": 0.06863, "loss": 0.88234, "grad_norm": 3.46292, "time": 1.79231}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18703, "data_time": 0.0267, "stage0_loss_instance_mil": 0.56679, "stage0_bag_acc": 60.2218, "stage0_mean_ious": 0.0829, "stage0_s": 0.0, "stage0_m": 0.0259, "stage0_l": 0.12425, "stage0_h": 0.07237, "stage1_loss_instance_mil": 0.25324, "stage1_bag_acc": 24.71043, "stage1_neg_loss": 0.00985, "stage1_mean_ious": 0.08163, "stage1_s": 0.0, "stage1_m": 0.02522, "stage1_l": 0.11934, "stage1_h": 0.07191, "loss": 0.82988, "grad_norm": 4.47753, "time": 1.68614}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18753, "data_time": 0.02705, "stage0_loss_instance_mil": 0.2397, "stage0_bag_acc": 85.3482, "stage0_mean_ious": 0.08971, "stage0_s": 0.0, "stage0_m": 0.03576, "stage0_l": 0.118, "stage0_h": 0.0817, "stage1_loss_instance_mil": 0.39821, "stage1_bag_acc": 73.6546, "stage1_neg_loss": 0.06458, "stage1_mean_ious": 0.09077, "stage1_s": 0.0, "stage1_m": 0.03485, "stage1_l": 0.12081, "stage1_h": 0.08281, "loss": 0.70248, "grad_norm": 10.06795, "time": 1.74249}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18753, "data_time": 0.07479, "stage0_loss_instance_mil": 0.14078, "stage0_bag_acc": 91.78444, "stage0_mean_ious": 0.08803, "stage0_s": 0.0, "stage0_m": 0.04679, "stage0_l": 0.11337, "stage0_h": 0.08039, "stage1_loss_instance_mil": 0.34565, "stage1_bag_acc": 93.37705, "stage1_neg_loss": 0.08037, "stage1_mean_ious": 0.08984, "stage1_s": 0.0, "stage1_m": 0.04231, "stage1_l": 0.11659, "stage1_h": 0.08241, "loss": 0.5668, "grad_norm": 10.2464, "time": 1.75652}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 2e-05, "memory": 18753, "data_time": 0.02755, "stage0_loss_instance_mil": 0.11048, "stage0_bag_acc": 92.77246, "stage0_mean_ious": 0.08791, "stage0_s": 0.0, "stage0_m": 0.05368, "stage0_l": 0.10286, "stage0_h": 0.0795, "stage1_loss_instance_mil": 0.31891, "stage1_bag_acc": 94.4625, "stage1_neg_loss": 0.08234, "stage1_mean_ious": 0.08945, "stage1_s": 0.0, "stage1_m": 0.04836, "stage1_l": 0.1038, "stage1_h": 0.08134, "loss": 0.51172, "grad_norm": 10.83875, "time": 1.71927}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18753, "data_time": 0.02827, "stage0_loss_instance_mil": 0.0917, "stage0_bag_acc": 94.26903, "stage0_mean_ious": 0.09115, "stage0_s": 0.0, "stage0_m": 0.01808, "stage0_l": 0.09773, "stage0_h": 0.08686, "stage1_loss_instance_mil": 0.28472, "stage1_bag_acc": 95.53783, "stage1_neg_loss": 0.07597, "stage1_mean_ious": 0.09101, "stage1_s": 0.0, "stage1_m": 0.01655, "stage1_l": 0.10175, "stage1_h": 0.08641, "loss": 0.45239, "grad_norm": 9.29557, "time": 1.75129}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 3e-05, "memory": 18753, "data_time": 0.07741, "stage0_loss_instance_mil": 0.08492, "stage0_bag_acc": 94.1738, "stage0_mean_ious": 0.09399, "stage0_s": 0.0, "stage0_m": 0.02597, "stage0_l": 0.11555, "stage0_h": 0.08806, "stage1_loss_instance_mil": 0.25512, "stage1_bag_acc": 95.75829, "stage1_neg_loss": 0.07251, "stage1_mean_ious": 0.09444, "stage1_s": 0.0, "stage1_m": 0.02651, "stage1_l": 0.11816, "stage1_h": 0.08819, "loss": 0.41256, "grad_norm": 11.00061, "time": 1.81195}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 4e-05, "memory": 18753, "data_time": 0.02644, "stage0_loss_instance_mil": 0.0737, "stage0_bag_acc": 95.21538, "stage0_mean_ious": 0.09765, "stage0_s": 0.0, "stage0_m": 0.04276, "stage0_l": 0.10001, "stage0_h": 0.09413, "stage1_loss_instance_mil": 0.24479, "stage1_bag_acc": 97.2918, "stage1_neg_loss": 0.08976, "stage1_mean_ious": 0.09814, "stage1_s": 0.0, "stage1_m": 0.04052, "stage1_l": 0.1025, "stage1_h": 0.09449, "loss": 0.40825, "grad_norm": 16.22925, "time": 1.73388}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 4e-05, "memory": 18753, "data_time": 0.02743, "stage0_loss_instance_mil": 0.0603, "stage0_bag_acc": 96.07317, "stage0_mean_ious": 0.09686, "stage0_s": 0.0, "stage0_m": 0.01863, "stage0_l": 0.11287, "stage0_h": 0.0919, "stage1_loss_instance_mil": 0.22314, "stage1_bag_acc": 97.01657, "stage1_neg_loss": 0.06845, "stage1_mean_ious": 0.09747, "stage1_s": 0.0, "stage1_m": 0.01741, "stage1_l": 0.11646, "stage1_h": 0.09216, "loss": 0.35189, "grad_norm": 10.89575, "time": 1.72848}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18753, "data_time": 0.07571, "stage0_loss_instance_mil": 0.04832, "stage0_bag_acc": 96.46998, "stage0_mean_ious": 0.09609, "stage0_s": 0.0, "stage0_m": 0.02424, "stage0_l": 0.10358, "stage0_h": 0.09124, "stage1_loss_instance_mil": 0.19999, "stage1_bag_acc": 98.22256, "stage1_neg_loss": 0.07117, "stage1_mean_ious": 0.09594, "stage1_s": 0.0, "stage1_m": 0.02544, "stage1_l": 0.10846, "stage1_h": 0.09052, "loss": 0.31948, "grad_norm": 11.66854, "time": 1.75771}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18753, "data_time": 0.02722, "stage0_loss_instance_mil": 0.03439, "stage0_bag_acc": 97.86836, "stage0_mean_ious": 0.09997, "stage0_s": 0.0, "stage0_m": 0.02582, "stage0_l": 0.11736, "stage0_h": 0.09539, "stage1_loss_instance_mil": 0.19698, "stage1_bag_acc": 98.72612, "stage1_neg_loss": 0.06755, "stage1_mean_ious": 0.09965, "stage1_s": 0.0, "stage1_m": 0.02407, "stage1_l": 0.11654, "stage1_h": 0.09509, "loss": 0.29892, "grad_norm": 11.80749, "time": 1.72813}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18753, "data_time": 0.02713, "stage0_loss_instance_mil": 0.05455, "stage0_bag_acc": 96.39751, "stage0_mean_ious": 0.09076, "stage0_s": 0.0, "stage0_m": 0.01031, "stage0_l": 0.09515, "stage0_h": 0.08783, "stage1_loss_instance_mil": 0.17586, "stage1_bag_acc": 97.62366, "stage1_neg_loss": 0.05877, "stage1_mean_ious": 0.08963, "stage1_s": 0.0, "stage1_m": 0.00897, "stage1_l": 0.09507, "stage1_h": 0.08685, "loss": 0.28918, "grad_norm": 9.14194, "time": 1.72132}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18753, "data_time": 0.07709, "stage0_loss_instance_mil": 0.05496, "stage0_bag_acc": 95.56991, "stage0_mean_ious": 0.09173, "stage0_s": 0.0, "stage0_m": 0.01356, "stage0_l": 0.08869, "stage0_h": 0.08785, "stage1_loss_instance_mil": 0.16877, "stage1_bag_acc": 97.35457, "stage1_neg_loss": 0.06231, "stage1_mean_ious": 0.09123, "stage1_s": 0.0, "stage1_m": 0.01239, "stage1_l": 0.08893, "stage1_h": 0.08751, "loss": 0.28605, "grad_norm": 10.14229, "time": 1.78268}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18753, "data_time": 0.02796, "stage0_loss_instance_mil": 0.04229, "stage0_bag_acc": 97.22988, "stage0_mean_ious": 0.10075, "stage0_s": 0.00275, "stage0_m": 0.02006, "stage0_l": 0.11132, "stage0_h": 0.09477, "stage1_loss_instance_mil": 0.16174, "stage1_bag_acc": 97.00686, "stage1_neg_loss": 0.05844, "stage1_mean_ious": 0.10256, "stage1_s": 0.00246, "stage1_m": 0.01956, "stage1_l": 0.11662, "stage1_h": 0.09586, "loss": 0.26248, "grad_norm": 9.21268, "time": 1.76131}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18753, "data_time": 0.02769, "stage0_loss_instance_mil": 0.02333, "stage0_bag_acc": 98.55105, "stage0_mean_ious": 0.09954, "stage0_s": 0.0, "stage0_m": 0.02558, "stage0_l": 0.09632, "stage0_h": 0.09616, "stage1_loss_instance_mil": 0.13227, "stage1_bag_acc": 98.99575, "stage1_neg_loss": 0.05241, "stage1_mean_ious": 0.10004, "stage1_s": 0.0, "stage1_m": 0.02521, "stage1_l": 0.10012, "stage1_h": 0.096, "loss": 0.20801, "grad_norm": 6.85993, "time": 1.73155}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18753, "data_time": 0.07477, "stage0_loss_instance_mil": 0.03777, "stage0_bag_acc": 97.37673, "stage0_mean_ious": 0.09293, "stage0_s": 0.0, "stage0_m": 0.02762, "stage0_l": 0.1107, "stage0_h": 0.08646, "stage1_loss_instance_mil": 0.13715, "stage1_bag_acc": 97.71587, "stage1_neg_loss": 0.05551, "stage1_mean_ious": 0.09403, "stage1_s": 0.0, "stage1_m": 0.02783, "stage1_l": 0.11295, "stage1_h": 0.08724, "loss": 0.23043, "grad_norm": 8.80786, "time": 1.78515}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18753, "data_time": 0.02837, "stage0_loss_instance_mil": 0.04335, "stage0_bag_acc": 97.298, "stage0_mean_ious": 0.0978, "stage0_s": 0.0, "stage0_m": 0.03878, "stage0_l": 0.12285, "stage0_h": 0.08836, "stage1_loss_instance_mil": 0.12899, "stage1_bag_acc": 97.87962, "stage1_neg_loss": 0.05003, "stage1_mean_ious": 0.09798, "stage1_s": 0.0, "stage1_m": 0.03825, "stage1_l": 0.12666, "stage1_h": 0.08787, "loss": 0.22236, "grad_norm": 7.78421, "time": 1.72587}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18753, "data_time": 0.02884, "stage0_loss_instance_mil": 0.02959, "stage0_bag_acc": 97.75257, "stage0_mean_ious": 0.0955, "stage0_s": 0.0, "stage0_m": 0.01866, "stage0_l": 0.11643, "stage0_h": 0.08846, "stage1_loss_instance_mil": 0.14001, "stage1_bag_acc": 98.71526, "stage1_neg_loss": 0.05137, "stage1_mean_ious": 0.0974, "stage1_s": 0.0, "stage1_m": 0.02083, "stage1_l": 0.12252, "stage1_h": 0.08949, "loss": 0.22097, "grad_norm": 8.59834, "time": 1.75553}
{"mode": "val", "epoch": 6, "iter": 150, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.071, "bbox_mAP_50": 0.199, "bbox_mAP_75": 0.122, "bbox_mAP_s": 0.069, "bbox_mAP_m": 0.045, "bbox_mAP_l": 0.018, "bbox_mAP_copypaste": "0.071 0.199 0.122 0.069 0.045 0.018"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18753, "data_time": 0.07682, "stage0_loss_instance_mil": 0.02162, "stage0_bag_acc": 98.41249, "stage0_mean_ious": 0.09019, "stage0_s": 0.0, "stage0_m": 0.03233, "stage0_l": 0.10091, "stage0_h": 0.08458, "stage1_loss_instance_mil": 0.11333, "stage1_bag_acc": 98.85006, "stage1_neg_loss": 0.05046, "stage1_mean_ious": 0.09038, "stage1_s": 0.0, "stage1_m": 0.03218, "stage1_l": 0.10337, "stage1_h": 0.08392, "loss": 0.1854, "grad_norm": 6.88123, "time": 1.76291}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18753, "data_time": 0.02631, "stage0_loss_instance_mil": 0.02323, "stage0_bag_acc": 98.07417, "stage0_mean_ious": 0.09132, "stage0_s": 0.0, "stage0_m": 0.03269, "stage0_l": 0.10753, "stage0_h": 0.08518, "stage1_loss_instance_mil": 0.12044, "stage1_bag_acc": 98.3168, "stage1_neg_loss": 0.05181, "stage1_mean_ious": 0.0927, "stage1_s": 0.0, "stage1_m": 0.03168, "stage1_l": 0.10757, "stage1_h": 0.08641, "loss": 0.19548, "grad_norm": 7.44042, "time": 1.69349}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18753, "data_time": 0.02615, "stage0_loss_instance_mil": 0.04234, "stage0_bag_acc": 97.11259, "stage0_mean_ious": 0.09376, "stage0_s": 0.0, "stage0_m": 0.04314, "stage0_l": 0.11225, "stage0_h": 0.08652, "stage1_loss_instance_mil": 0.12433, "stage1_bag_acc": 98.15789, "stage1_neg_loss": 0.04514, "stage1_mean_ious": 0.09287, "stage1_s": 0.0, "stage1_m": 0.04344, "stage1_l": 0.11445, "stage1_h": 0.08456, "loss": 0.21181, "grad_norm": 6.98765, "time": 1.72986}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18758, "data_time": 0.07749, "stage0_loss_instance_mil": 0.01669, "stage0_bag_acc": 98.95196, "stage0_mean_ious": 0.09525, "stage0_s": 0.0, "stage0_m": 0.03311, "stage0_l": 0.10136, "stage0_h": 0.08816, "stage1_loss_instance_mil": 0.10573, "stage1_bag_acc": 99.18614, "stage1_neg_loss": 0.04883, "stage1_mean_ious": 0.09706, "stage1_s": 0.0, "stage1_m": 0.03449, "stage1_l": 0.10376, "stage1_h": 0.08954, "loss": 0.17125, "grad_norm": 5.58342, "time": 1.75546}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18758, "data_time": 0.02683, "stage0_loss_instance_mil": 0.02097, "stage0_bag_acc": 98.56212, "stage0_mean_ious": 0.09104, "stage0_s": 0.0, "stage0_m": 0.02105, "stage0_l": 0.1126, "stage0_h": 0.083, "stage1_loss_instance_mil": 0.11352, "stage1_bag_acc": 98.86173, "stage1_neg_loss": 0.04639, "stage1_mean_ious": 0.09237, "stage1_s": 0.0, "stage1_m": 0.02365, "stage1_l": 0.1202, "stage1_h": 0.08282, "loss": 0.18088, "grad_norm": 6.33743, "time": 1.72747}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18758, "data_time": 0.02711, "stage0_loss_instance_mil": 0.01299, "stage0_bag_acc": 99.4412, "stage0_mean_ious": 0.09936, "stage0_s": 0.0, "stage0_m": 0.03263, "stage0_l": 0.13232, "stage0_h": 0.08998, "stage1_loss_instance_mil": 0.11863, "stage1_bag_acc": 99.23322, "stage1_neg_loss": 0.0506, "stage1_mean_ious": 0.10025, "stage1_s": 0.0, "stage1_m": 0.03553, "stage1_l": 0.13063, "stage1_h": 0.09008, "loss": 0.18222, "grad_norm": 8.32286, "time": 1.70419}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18758, "data_time": 0.07807, "stage0_loss_instance_mil": 0.02036, "stage0_bag_acc": 98.52662, "stage0_mean_ious": 0.09386, "stage0_s": 0.0, "stage0_m": 0.03663, "stage0_l": 0.11553, "stage0_h": 0.08466, "stage1_loss_instance_mil": 0.09056, "stage1_bag_acc": 98.94709, "stage1_neg_loss": 0.04526, "stage1_mean_ious": 0.09469, "stage1_s": 0.0, "stage1_m": 0.03969, "stage1_l": 0.11761, "stage1_h": 0.08463, "loss": 0.15618, "grad_norm": 5.66242, "time": 1.78772}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18758, "data_time": 0.02613, "stage0_loss_instance_mil": 0.00768, "stage0_bag_acc": 99.51805, "stage0_mean_ious": 0.09428, "stage0_s": 0.0, "stage0_m": 0.02423, "stage0_l": 0.10639, "stage0_h": 0.0875, "stage1_loss_instance_mil": 0.08411, "stage1_bag_acc": 99.79524, "stage1_neg_loss": 0.04125, "stage1_mean_ious": 0.09553, "stage1_s": 0.0, "stage1_m": 0.02524, "stage1_l": 0.10867, "stage1_h": 0.08845, "loss": 0.13303, "grad_norm": 4.82545, "time": 1.69062}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18758, "data_time": 0.02748, "stage0_loss_instance_mil": 0.01221, "stage0_bag_acc": 99.17942, "stage0_mean_ious": 0.09842, "stage0_s": 0.0, "stage0_m": 0.02886, "stage0_l": 0.12435, "stage0_h": 0.08971, "stage1_loss_instance_mil": 0.08179, "stage1_bag_acc": 99.54698, "stage1_neg_loss": 0.03926, "stage1_mean_ious": 0.10051, "stage1_s": 0.0, "stage1_m": 0.03028, "stage1_l": 0.13103, "stage1_h": 0.09047, "loss": 0.13327, "grad_norm": 4.23759, "time": 1.73769}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18758, "data_time": 0.07456, "stage0_loss_instance_mil": 0.01152, "stage0_bag_acc": 99.64089, "stage0_mean_ious": 0.09528, "stage0_s": 0.0, "stage0_m": 0.03935, "stage0_l": 0.11809, "stage0_h": 0.08577, "stage1_loss_instance_mil": 0.08171, "stage1_bag_acc": 99.62949, "stage1_neg_loss": 0.03681, "stage1_mean_ious": 0.09696, "stage1_s": 0.0, "stage1_m": 0.04156, "stage1_l": 0.12287, "stage1_h": 0.0866, "loss": 0.13004, "grad_norm": 4.51159, "time": 1.77947}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18758, "data_time": 0.02875, "stage0_loss_instance_mil": 0.00819, "stage0_bag_acc": 99.43301, "stage0_mean_ious": 0.09697, "stage0_s": 0.0, "stage0_m": 0.0572, "stage0_l": 0.11605, "stage0_h": 0.08826, "stage1_loss_instance_mil": 0.08503, "stage1_bag_acc": 99.61996, "stage1_neg_loss": 0.04282, "stage1_mean_ious": 0.0983, "stage1_s": 0.0, "stage1_m": 0.06238, "stage1_l": 0.1238, "stage1_h": 0.08811, "loss": 0.13603, "grad_norm": 4.61941, "time": 1.77791}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18758, "data_time": 0.02698, "stage0_loss_instance_mil": 0.01005, "stage0_bag_acc": 99.50755, "stage0_mean_ious": 0.0928, "stage0_s": 0.0, "stage0_m": 0.02178, "stage0_l": 0.12489, "stage0_h": 0.08443, "stage1_loss_instance_mil": 0.07924, "stage1_bag_acc": 99.42131, "stage1_neg_loss": 0.034, "stage1_mean_ious": 0.09559, "stage1_s": 0.0, "stage1_m": 0.02081, "stage1_l": 0.13177, "stage1_h": 0.08617, "loss": 0.12328, "grad_norm": 4.55176, "time": 1.73145}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18758, "data_time": 0.07936, "stage0_loss_instance_mil": 0.01179, "stage0_bag_acc": 99.25525, "stage0_mean_ious": 0.0942, "stage0_s": 0.0, "stage0_m": 0.05266, "stage0_l": 0.11409, "stage0_h": 0.08563, "stage1_loss_instance_mil": 0.08099, "stage1_bag_acc": 99.65512, "stage1_neg_loss": 0.04005, "stage1_mean_ious": 0.09554, "stage1_s": 0.0, "stage1_m": 0.05466, "stage1_l": 0.11975, "stage1_h": 0.0862, "loss": 0.13283, "grad_norm": 4.50383, "time": 1.81554}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18758, "data_time": 0.02742, "stage0_loss_instance_mil": 0.01468, "stage0_bag_acc": 99.06098, "stage0_mean_ious": 0.09888, "stage0_s": 0.0047, "stage0_m": 0.0503, "stage0_l": 0.12773, "stage0_h": 0.08947, "stage1_loss_instance_mil": 0.0765, "stage1_bag_acc": 99.23767, "stage1_neg_loss": 0.03307, "stage1_mean_ious": 0.09901, "stage1_s": 0.00339, "stage1_m": 0.05243, "stage1_l": 0.13013, "stage1_h": 0.08897, "loss": 0.12425, "grad_norm": 4.4364, "time": 1.74746}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18758, "data_time": 0.02786, "stage0_loss_instance_mil": 0.00826, "stage0_bag_acc": 99.59183, "stage0_mean_ious": 0.09045, "stage0_s": 0.0, "stage0_m": 0.03428, "stage0_l": 0.10719, "stage0_h": 0.08409, "stage1_loss_instance_mil": 0.07594, "stage1_bag_acc": 99.61042, "stage1_neg_loss": 0.03945, "stage1_mean_ious": 0.09113, "stage1_s": 0.0, "stage1_m": 0.03809, "stage1_l": 0.10716, "stage1_h": 0.08448, "loss": 0.12366, "grad_norm": 4.59725, "time": 1.77436}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18758, "data_time": 0.07764, "stage0_loss_instance_mil": 0.00949, "stage0_bag_acc": 99.40342, "stage0_mean_ious": 0.09598, "stage0_s": 0.0, "stage0_m": 0.0278, "stage0_l": 0.12348, "stage0_h": 0.0877, "stage1_loss_instance_mil": 0.08219, "stage1_bag_acc": 99.7381, "stage1_neg_loss": 0.03444, "stage1_mean_ious": 0.09845, "stage1_s": 0.0, "stage1_m": 0.0316, "stage1_l": 0.12717, "stage1_h": 0.08934, "loss": 0.12612, "grad_norm": 4.11539, "time": 1.82579}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18758, "data_time": 0.02619, "stage0_loss_instance_mil": 0.007, "stage0_bag_acc": 99.39709, "stage0_mean_ious": 0.09554, "stage0_s": 0.0, "stage0_m": 0.01332, "stage0_l": 0.12335, "stage0_h": 0.08741, "stage1_loss_instance_mil": 0.07523, "stage1_bag_acc": 99.62807, "stage1_neg_loss": 0.03844, "stage1_mean_ious": 0.09622, "stage1_s": 0.0, "stage1_m": 0.01257, "stage1_l": 0.12712, "stage1_h": 0.0875, "loss": 0.12066, "grad_norm": 4.43568, "time": 1.7134}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18758, "data_time": 0.02682, "stage0_loss_instance_mil": 0.01021, "stage0_bag_acc": 99.19923, "stage0_mean_ious": 0.0938, "stage0_s": 0.0, "stage0_m": 0.03192, "stage0_l": 0.12925, "stage0_h": 0.08515, "stage1_loss_instance_mil": 0.08175, "stage1_bag_acc": 99.47611, "stage1_neg_loss": 0.03596, "stage1_mean_ious": 0.09499, "stage1_s": 0.0, "stage1_m": 0.0366, "stage1_l": 0.13709, "stage1_h": 0.08469, "loss": 0.12792, "grad_norm": 3.94805, "time": 1.72247}
{"mode": "val", "epoch": 12, "iter": 150, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.072, "bbox_mAP_50": 0.215, "bbox_mAP_75": 0.129, "bbox_mAP_s": 0.065, "bbox_mAP_m": 0.035, "bbox_mAP_l": 0.013, "bbox_mAP_copypaste": "0.072 0.215 0.129 0.065 0.035 0.013"}
