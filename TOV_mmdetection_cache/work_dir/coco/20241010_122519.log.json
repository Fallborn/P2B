{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+15637e6", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=2,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/images/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ]))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=1,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [4]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 8669, "data_time": 0.05789, "stage0_loss_instance_mil": 0.52499, "stage0_bag_acc": 48.62394, "stage0_mean_ious": 0.14066, "stage0_s": 0.0, "stage0_m": 0.02065, "stage0_l": 0.09691, "stage0_h": 0.14552, "stage1_loss_instance_mil": 0.30264, "stage1_bag_acc": 34.93856, "stage1_neg_loss": 0.053, "stage1_mean_ious": 0.13843, "stage1_s": 0.0, "stage1_m": 0.01894, "stage1_l": 0.09628, "stage1_h": 0.14266, "loss": 0.88063, "grad_norm": 7.60755, "time": 0.74841}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.01988, "memory": 8669, "data_time": 0.01245, "stage0_loss_instance_mil": 0.334, "stage0_bag_acc": 76.08502, "stage0_mean_ious": 0.1226, "stage0_s": 0.00363, "stage0_m": 0.02352, "stage0_l": 0.10124, "stage0_h": 0.12113, "stage1_loss_instance_mil": 0.33223, "stage1_bag_acc": 57.02146, "stage1_neg_loss": 0.09514, "stage1_mean_ious": 0.12058, "stage1_s": 0.00416, "stage1_m": 0.02373, "stage1_l": 0.10042, "stage1_h": 0.11896, "loss": 0.76136, "grad_norm": 8.56712, "time": 0.69944}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.02987, "memory": 8669, "data_time": 0.01267, "stage0_loss_instance_mil": 0.66607, "stage0_bag_acc": 24.7763, "stage0_mean_ious": 0.10091, "stage0_s": 0.0, "stage0_m": 0.02187, "stage0_l": 0.09985, "stage0_h": 0.09608, "stage1_loss_instance_mil": 0.19163, "stage1_bag_acc": 24.46404, "stage1_neg_loss": 0.00942, "stage1_mean_ious": 0.09931, "stage1_s": 0.0, "stage1_m": 0.02433, "stage1_l": 0.09734, "stage1_h": 0.09457, "loss": 0.86711, "grad_norm": 1.46523, "time": 0.70784}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.03986, "memory": 8669, "data_time": 0.01347, "stage0_loss_instance_mil": 0.67924, "stage0_bag_acc": 20.26204, "stage0_mean_ious": 0.10276, "stage0_s": 0.0, "stage0_m": 0.01472, "stage0_l": 0.09463, "stage0_h": 0.09651, "stage1_loss_instance_mil": 0.16697, "stage1_bag_acc": 24.23405, "stage1_neg_loss": 0.00551, "stage1_mean_ious": 0.0975, "stage1_s": 0.0, "stage1_m": 0.01437, "stage1_l": 0.0959, "stage1_h": 0.09139, "loss": 0.85171, "grad_norm": 0.84806, "time": 0.71507}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.04985, "memory": 8669, "data_time": 0.01452, "stage0_loss_instance_mil": 0.63152, "stage0_bag_acc": 30.68784, "stage0_mean_ious": 0.10971, "stage0_s": 0.0, "stage0_m": 0.03066, "stage0_l": 0.08087, "stage0_h": 0.11111, "stage1_loss_instance_mil": 0.15966, "stage1_bag_acc": 27.92542, "stage1_neg_loss": 0.01497, "stage1_mean_ious": 0.10864, "stage1_s": 0.0, "stage1_m": 0.0339, "stage1_l": 0.08344, "stage1_h": 0.10943, "loss": 0.80615, "grad_norm": 0.7945, "time": 0.75155}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.05984, "memory": 8669, "data_time": 0.01336, "stage0_loss_instance_mil": 0.6003, "stage0_bag_acc": 31.94277, "stage0_mean_ious": 0.09521, "stage0_s": 0.00366, "stage0_m": 0.02679, "stage0_l": 0.07135, "stage0_h": 0.09673, "stage1_loss_instance_mil": 0.1559, "stage1_bag_acc": 46.19883, "stage1_neg_loss": 0.1685, "stage1_mean_ious": 0.09496, "stage1_s": 0.00199, "stage1_m": 0.02809, "stage1_l": 0.06615, "stage1_h": 0.0971, "loss": 0.9247, "grad_norm": 4.859, "time": 0.70827}
{"mode": "val", "epoch": 1, "iter": 300, "lr": 0.05984, "eval_iter_num": 599, "bbox_mAP": 0.104, "bbox_mAP_50": 0.34, "bbox_mAP_75": 0.164, "bbox_mAP_s": 0.078, "bbox_mAP_m": 0.05, "bbox_mAP_l": 0.014, "bbox_mAP_copypaste": "0.104 0.340 0.164 0.078 0.050 0.014"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.06983, "memory": 8669, "data_time": 0.05847, "stage0_loss_instance_mil": 0.65607, "stage0_bag_acc": 24.84241, "stage0_mean_ious": 0.11057, "stage0_s": 0.0, "stage0_m": 0.01367, "stage0_l": 0.08469, "stage0_h": 0.10739, "stage1_loss_instance_mil": 0.14905, "stage1_bag_acc": 20.11727, "stage1_neg_loss": 0.01077, "stage1_mean_ious": 0.11113, "stage1_s": 0.0, "stage1_m": 0.01289, "stage1_l": 0.08504, "stage1_h": 0.10767, "loss": 0.8159, "grad_norm": 0.68497, "time": 0.77444}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.07982, "memory": 8669, "data_time": 0.01309, "stage0_loss_instance_mil": 0.63669, "stage0_bag_acc": 28.03613, "stage0_mean_ious": 0.11291, "stage0_s": 0.0, "stage0_m": 0.03043, "stage0_l": 0.10196, "stage0_h": 0.11013, "stage1_loss_instance_mil": 0.14217, "stage1_bag_acc": 35.96122, "stage1_neg_loss": 0.01542, "stage1_mean_ious": 0.11291, "stage1_s": 0.0, "stage1_m": 0.03264, "stage1_l": 0.09969, "stage1_h": 0.11133, "loss": 0.79428, "grad_norm": 0.49664, "time": 0.72425}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.08981, "memory": 8669, "data_time": 0.01387, "stage0_loss_instance_mil": 0.62478, "stage0_bag_acc": 26.56972, "stage0_mean_ious": 0.11293, "stage0_s": 0.0, "stage0_m": 0.02539, "stage0_l": 0.09074, "stage0_h": 0.1085, "stage1_loss_instance_mil": 0.14161, "stage1_bag_acc": 37.29742, "stage1_neg_loss": 0.01832, "stage1_mean_ious": 0.11439, "stage1_s": 0.0, "stage1_m": 0.02896, "stage1_l": 0.09664, "stage1_h": 0.10713, "loss": 0.7847, "grad_norm": 0.51616, "time": 0.7277}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0998, "memory": 8669, "data_time": 0.01312, "stage0_loss_instance_mil": 0.64051, "stage0_bag_acc": 20.09507, "stage0_mean_ious": 0.11428, "stage0_s": 0.0, "stage0_m": 0.02983, "stage0_l": 0.09061, "stage0_h": 0.11393, "stage1_loss_instance_mil": 0.13195, "stage1_bag_acc": 33.29946, "stage1_neg_loss": 0.01906, "stage1_mean_ious": 0.11341, "stage1_s": 0.0, "stage1_m": 0.03017, "stage1_l": 0.08954, "stage1_h": 0.1132, "loss": 0.79152, "grad_norm": 0.52617, "time": 0.72712}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.1, "memory": 8669, "data_time": 0.01397, "stage0_loss_instance_mil": 0.62417, "stage0_bag_acc": 26.45532, "stage0_mean_ious": 0.12496, "stage0_s": 0.0, "stage0_m": 0.01971, "stage0_l": 0.07066, "stage0_h": 0.13105, "stage1_loss_instance_mil": 0.12935, "stage1_bag_acc": 47.78579, "stage1_neg_loss": 0.02067, "stage1_mean_ious": 0.12045, "stage1_s": 0.0, "stage1_m": 0.01984, "stage1_l": 0.06997, "stage1_h": 0.1249, "loss": 0.7742, "grad_norm": 0.35096, "time": 0.70961}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.1, "memory": 8669, "data_time": 0.01226, "stage0_loss_instance_mil": 0.64508, "stage0_bag_acc": 20.6961, "stage0_mean_ious": 0.10823, "stage0_s": 0.0, "stage0_m": 0.0242, "stage0_l": 0.09315, "stage0_h": 0.1097, "stage1_loss_instance_mil": 0.1294, "stage1_bag_acc": 27.6018, "stage1_neg_loss": 0.01944, "stage1_mean_ious": 0.10737, "stage1_s": 0.0, "stage1_m": 0.02426, "stage1_l": 0.09005, "stage1_h": 0.10985, "loss": 0.79391, "grad_norm": 0.43063, "time": 0.68125}
{"mode": "val", "epoch": 2, "iter": 300, "lr": 0.1, "eval_iter_num": 599, "bbox_mAP": 0.089, "bbox_mAP_50": 0.205, "bbox_mAP_75": 0.165, "bbox_mAP_s": 0.111, "bbox_mAP_m": 0.069, "bbox_mAP_l": 0.018, "bbox_mAP_copypaste": "0.089 0.205 0.165 0.111 0.069 0.018"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.1, "memory": 8669, "data_time": 0.05929, "stage0_loss_instance_mil": 0.6355, "stage0_bag_acc": 27.7304, "stage0_mean_ious": 0.10908, "stage0_s": 0.0, "stage0_m": 0.01272, "stage0_l": 0.09939, "stage0_h": 0.1087, "stage1_loss_instance_mil": 0.13308, "stage1_bag_acc": 24.55361, "stage1_neg_loss": 0.02259, "stage1_mean_ious": 0.10338, "stage1_s": 0.0, "stage1_m": 0.01203, "stage1_l": 0.09318, "stage1_h": 0.10304, "loss": 0.79116, "grad_norm": 0.36971, "time": 0.76962}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.1, "memory": 8682, "data_time": 0.01367, "stage0_loss_instance_mil": 0.63038, "stage0_bag_acc": 28.2739, "stage0_mean_ious": 0.13116, "stage0_s": 0.0, "stage0_m": 0.01375, "stage0_l": 0.09651, "stage0_h": 0.13434, "stage1_loss_instance_mil": 0.12884, "stage1_bag_acc": 31.4477, "stage1_neg_loss": 0.02428, "stage1_mean_ious": 0.12655, "stage1_s": 0.0, "stage1_m": 0.01196, "stage1_l": 0.09222, "stage1_h": 0.12949, "loss": 0.7835, "grad_norm": 0.32195, "time": 0.74096}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.1, "memory": 8682, "data_time": 0.01216, "stage0_loss_instance_mil": 0.63659, "stage0_bag_acc": 25.51506, "stage0_mean_ious": 0.11885, "stage0_s": 0.0, "stage0_m": 0.01926, "stage0_l": 0.07953, "stage0_h": 0.1253, "stage1_loss_instance_mil": 0.13144, "stage1_bag_acc": 31.9475, "stage1_neg_loss": 0.02449, "stage1_mean_ious": 0.11697, "stage1_s": 0.0, "stage1_m": 0.01697, "stage1_l": 0.07496, "stage1_h": 0.12465, "loss": 0.79252, "grad_norm": 0.36618, "time": 0.66461}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.1, "memory": 8682, "data_time": 0.01252, "stage0_loss_instance_mil": 0.63461, "stage0_bag_acc": 19.63496, "stage0_mean_ious": 0.13788, "stage0_s": 0.00401, "stage0_m": 0.01182, "stage0_l": 0.11522, "stage0_h": 0.14159, "stage1_loss_instance_mil": 0.12163, "stage1_bag_acc": 31.46929, "stage1_neg_loss": 0.02303, "stage1_mean_ious": 0.13867, "stage1_s": 0.00274, "stage1_m": 0.01254, "stage1_l": 0.10592, "stage1_h": 0.14494, "loss": 0.77928, "grad_norm": 0.35572, "time": 0.71251}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.1, "memory": 8682, "data_time": 0.01279, "stage0_loss_instance_mil": 0.63403, "stage0_bag_acc": 20.90158, "stage0_mean_ious": 0.12983, "stage0_s": 0.00052, "stage0_m": 0.02276, "stage0_l": 0.0961, "stage0_h": 0.13081, "stage1_loss_instance_mil": 0.12661, "stage1_bag_acc": 36.25679, "stage1_neg_loss": 0.02441, "stage1_mean_ious": 0.13088, "stage1_s": 0.00012, "stage1_m": 0.02092, "stage1_l": 0.09212, "stage1_h": 0.13293, "loss": 0.78505, "grad_norm": 0.33393, "time": 0.71483}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.1, "memory": 8682, "data_time": 0.0129, "stage0_loss_instance_mil": 0.62599, "stage0_bag_acc": 19.13765, "stage0_mean_ious": 0.11455, "stage0_s": 0.0, "stage0_m": 0.04668, "stage0_l": 0.10576, "stage0_h": 0.1095, "stage1_loss_instance_mil": 0.12697, "stage1_bag_acc": 41.31884, "stage1_neg_loss": 0.02246, "stage1_mean_ious": 0.10942, "stage1_s": 0.0, "stage1_m": 0.04344, "stage1_l": 0.10213, "stage1_h": 0.10386, "loss": 0.77542, "grad_norm": 0.32491, "time": 0.70356}
{"mode": "val", "epoch": 3, "iter": 300, "lr": 0.1, "eval_iter_num": 599, "bbox_mAP": 0.363, "bbox_mAP_50": 0.748, "bbox_mAP_75": 0.638, "bbox_mAP_s": 0.495, "bbox_mAP_m": 0.372, "bbox_mAP_l": 0.116, "bbox_mAP_copypaste": "0.363 0.748 0.638 0.495 0.372 0.116"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.1, "memory": 8682, "data_time": 0.059, "stage0_loss_instance_mil": 0.64056, "stage0_bag_acc": 19.92269, "stage0_mean_ious": 0.11399, "stage0_s": 0.0, "stage0_m": 0.01904, "stage0_l": 0.11453, "stage0_h": 0.10523, "stage1_loss_instance_mil": 0.12164, "stage1_bag_acc": 31.76018, "stage1_neg_loss": 0.02382, "stage1_mean_ious": 0.10703, "stage1_s": 0.0, "stage1_m": 0.01823, "stage1_l": 0.11156, "stage1_h": 0.09839, "loss": 0.78601, "grad_norm": 0.3064, "time": 0.75198}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.1, "memory": 8682, "data_time": 0.01183, "stage0_loss_instance_mil": 0.61509, "stage0_bag_acc": 19.89005, "stage0_mean_ious": 0.11657, "stage0_s": 0.0, "stage0_m": 0.02732, "stage0_l": 0.11767, "stage0_h": 0.10778, "stage1_loss_instance_mil": 0.12484, "stage1_bag_acc": 37.9232, "stage1_neg_loss": 0.02223, "stage1_mean_ious": 0.10666, "stage1_s": 0.0, "stage1_m": 0.02752, "stage1_l": 0.11441, "stage1_h": 0.09619, "loss": 0.76216, "grad_norm": 0.34589, "time": 0.70341}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.1, "memory": 8682, "data_time": 0.01296, "stage0_loss_instance_mil": 0.61913, "stage0_bag_acc": 28.05077, "stage0_mean_ious": 0.11163, "stage0_s": 0.0, "stage0_m": 0.03005, "stage0_l": 0.10202, "stage0_h": 0.10952, "stage1_loss_instance_mil": 0.13036, "stage1_bag_acc": 36.43154, "stage1_neg_loss": 0.02827, "stage1_mean_ious": 0.10607, "stage1_s": 0.0, "stage1_m": 0.02749, "stage1_l": 0.10028, "stage1_h": 0.10278, "loss": 0.77776, "grad_norm": 0.72459, "time": 0.70646}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.1, "memory": 8682, "data_time": 0.01318, "stage0_loss_instance_mil": 0.62848, "stage0_bag_acc": 26.11644, "stage0_mean_ious": 0.14668, "stage0_s": 0.0, "stage0_m": 0.01763, "stage0_l": 0.12535, "stage0_h": 0.14645, "stage1_loss_instance_mil": 0.12755, "stage1_bag_acc": 38.72624, "stage1_neg_loss": 0.02568, "stage1_mean_ious": 0.14093, "stage1_s": 0.0, "stage1_m": 0.01958, "stage1_l": 0.12581, "stage1_h": 0.13962, "loss": 0.78171, "grad_norm": 0.41116, "time": 0.70602}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.1, "memory": 8682, "data_time": 0.01364, "stage0_loss_instance_mil": 0.62455, "stage0_bag_acc": 24.70398, "stage0_mean_ious": 0.14672, "stage0_s": 0.0, "stage0_m": 0.02141, "stage0_l": 0.11915, "stage0_h": 0.14453, "stage1_loss_instance_mil": 0.12434, "stage1_bag_acc": 32.43839, "stage1_neg_loss": 0.02366, "stage1_mean_ious": 0.14063, "stage1_s": 0.0, "stage1_m": 0.02364, "stage1_l": 0.1181, "stage1_h": 0.13586, "loss": 0.77254, "grad_norm": 0.35581, "time": 0.72227}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.1, "memory": 8682, "data_time": 0.01331, "stage0_loss_instance_mil": 0.63795, "stage0_bag_acc": 21.15975, "stage0_mean_ious": 0.15728, "stage0_s": 0.0, "stage0_m": 0.02613, "stage0_l": 0.11699, "stage0_h": 0.16012, "stage1_loss_instance_mil": 0.11913, "stage1_bag_acc": 35.59066, "stage1_neg_loss": 0.02204, "stage1_mean_ious": 0.14849, "stage1_s": 0.0, "stage1_m": 0.02468, "stage1_l": 0.11612, "stage1_h": 0.14901, "loss": 0.77912, "grad_norm": 0.44783, "time": 0.71309}
{"mode": "val", "epoch": 4, "iter": 300, "lr": 0.1, "eval_iter_num": 599, "bbox_mAP": 0.0, "bbox_mAP_50": 0.004, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.004 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.1, "memory": 8682, "data_time": 0.0561, "stage0_loss_instance_mil": 0.63428, "stage0_bag_acc": 26.19797, "stage0_mean_ious": 0.16631, "stage0_s": 0.0, "stage0_m": 0.02803, "stage0_l": 0.09207, "stage0_h": 0.18105, "stage1_loss_instance_mil": 0.11824, "stage1_bag_acc": 30.08712, "stage1_neg_loss": 0.02252, "stage1_mean_ious": 0.1642, "stage1_s": 0.0, "stage1_m": 0.02954, "stage1_l": 0.08933, "stage1_h": 0.17895, "loss": 0.77504, "grad_norm": 0.50939, "time": 0.71905}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.1, "memory": 8682, "data_time": 0.01373, "stage0_loss_instance_mil": 0.61399, "stage0_bag_acc": 31.65897, "stage0_mean_ious": 0.16015, "stage0_s": 0.0, "stage0_m": 0.01872, "stage0_l": 0.09809, "stage0_h": 0.16704, "stage1_loss_instance_mil": 0.12283, "stage1_bag_acc": 36.42902, "stage1_neg_loss": 0.02938, "stage1_mean_ious": 0.15715, "stage1_s": 0.0, "stage1_m": 0.01694, "stage1_l": 0.10174, "stage1_h": 0.16288, "loss": 0.7662, "grad_norm": 0.58258, "time": 0.73269}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.1, "memory": 8682, "data_time": 0.01258, "stage0_loss_instance_mil": 0.58877, "stage0_bag_acc": 35.42296, "stage0_mean_ious": 0.1655, "stage0_s": 0.0, "stage0_m": 0.0227, "stage0_l": 0.10009, "stage0_h": 0.17402, "stage1_loss_instance_mil": 0.15118, "stage1_bag_acc": 31.92597, "stage1_neg_loss": 0.03158, "stage1_mean_ious": 0.16252, "stage1_s": 0.0, "stage1_m": 0.02327, "stage1_l": 0.10276, "stage1_h": 0.16978, "loss": 0.77153, "grad_norm": 0.67584, "time": 0.71731}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.1, "memory": 8682, "data_time": 0.01196, "stage0_loss_instance_mil": 0.56614, "stage0_bag_acc": 33.26356, "stage0_mean_ious": 0.15734, "stage0_s": 0.0, "stage0_m": 0.02384, "stage0_l": 0.09555, "stage0_h": 0.16622, "stage1_loss_instance_mil": 0.20241, "stage1_bag_acc": 19.87074, "stage1_neg_loss": 0.03625, "stage1_mean_ious": 0.15837, "stage1_s": 0.0, "stage1_m": 0.0235, "stage1_l": 0.09558, "stage1_h": 0.16796, "loss": 0.80481, "grad_norm": 0.72926, "time": 0.72142}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.1, "memory": 8682, "data_time": 0.01326, "stage0_loss_instance_mil": 0.61714, "stage0_bag_acc": 31.904, "stage0_mean_ious": 0.13995, "stage0_s": 0.0, "stage0_m": 0.02832, "stage0_l": 0.0914, "stage0_h": 0.15351, "stage1_loss_instance_mil": 0.12994, "stage1_bag_acc": 29.27827, "stage1_neg_loss": 0.0314, "stage1_mean_ious": 0.13683, "stage1_s": 0.0, "stage1_m": 0.02617, "stage1_l": 0.09013, "stage1_h": 0.14984, "loss": 0.77848, "grad_norm": 0.52935, "time": 0.71241}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.1, "memory": 8682, "data_time": 0.01373, "stage0_loss_instance_mil": 0.56169, "stage0_bag_acc": 38.9571, "stage0_mean_ious": 0.15484, "stage0_s": 0.0, "stage0_m": 0.02415, "stage0_l": 0.1039, "stage0_h": 0.16139, "stage1_loss_instance_mil": 0.16497, "stage1_bag_acc": 39.37688, "stage1_neg_loss": 0.03159, "stage1_mean_ious": 0.15195, "stage1_s": 0.0, "stage1_m": 0.02107, "stage1_l": 0.10045, "stage1_h": 0.15892, "loss": 0.75826, "grad_norm": 0.80867, "time": 0.73084}
{"mode": "val", "epoch": 5, "iter": 300, "lr": 0.1, "eval_iter_num": 599, "bbox_mAP": 0.0, "bbox_mAP_50": 0.001, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.001 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.1, "memory": 8682, "data_time": 0.05805, "stage0_loss_instance_mil": 0.53906, "stage0_bag_acc": 43.21595, "stage0_mean_ious": 0.09771, "stage0_s": 0.0, "stage0_m": 0.01749, "stage0_l": 0.09305, "stage0_h": 0.09288, "stage1_loss_instance_mil": 0.21505, "stage1_bag_acc": 32.42415, "stage1_neg_loss": 0.03535, "stage1_mean_ious": 0.09532, "stage1_s": 0.0, "stage1_m": 0.01785, "stage1_l": 0.09538, "stage1_h": 0.08955, "loss": 0.78947, "grad_norm": 0.85873, "time": 0.73892}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.1, "memory": 8682, "data_time": 0.01279, "stage0_loss_instance_mil": 0.53189, "stage0_bag_acc": 50.73624, "stage0_mean_ious": 0.08874, "stage0_s": 0.0031, "stage0_m": 0.04207, "stage0_l": 0.08981, "stage0_h": 0.0819, "stage1_loss_instance_mil": 0.17855, "stage1_bag_acc": 53.40425, "stage1_neg_loss": 0.04206, "stage1_mean_ious": 0.08497, "stage1_s": 0.00269, "stage1_m": 0.04191, "stage1_l": 0.08909, "stage1_h": 0.07783, "loss": 0.7525, "grad_norm": 1.12958, "time": 0.71509}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.1, "memory": 8682, "data_time": 0.01369, "stage0_loss_instance_mil": 0.62313, "stage0_bag_acc": 32.24069, "stage0_mean_ious": 0.0678, "stage0_s": 0.0, "stage0_m": 0.02264, "stage0_l": 0.0688, "stage0_h": 0.06062, "stage1_loss_instance_mil": 0.14061, "stage1_bag_acc": 34.01855, "stage1_neg_loss": 0.02945, "stage1_mean_ious": 0.06638, "stage1_s": 0.0, "stage1_m": 0.02019, "stage1_l": 0.0659, "stage1_h": 0.06026, "loss": 0.79319, "grad_norm": 0.89476, "time": 0.73611}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.1, "memory": 8682, "data_time": 0.01352, "stage0_loss_instance_mil": 0.59614, "stage0_bag_acc": 29.8246, "stage0_mean_ious": 0.08896, "stage0_s": 0.0, "stage0_m": 0.01782, "stage0_l": 0.08187, "stage0_h": 0.08827, "stage1_loss_instance_mil": 0.14632, "stage1_bag_acc": 37.12687, "stage1_neg_loss": 0.03632, "stage1_mean_ious": 0.08658, "stage1_s": 0.0, "stage1_m": 0.01694, "stage1_l": 0.08052, "stage1_h": 0.08562, "loss": 0.77878, "grad_norm": 0.62446, "time": 0.72717}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.1, "memory": 8682, "data_time": 0.01321, "stage0_loss_instance_mil": 0.599, "stage0_bag_acc": 34.05943, "stage0_mean_ious": 0.07111, "stage0_s": 0.00269, "stage0_m": 0.03158, "stage0_l": 0.05182, "stage0_h": 0.07054, "stage1_loss_instance_mil": 0.14495, "stage1_bag_acc": 34.33599, "stage1_neg_loss": 0.02428, "stage1_mean_ious": 0.06932, "stage1_s": 0.00272, "stage1_m": 0.03241, "stage1_l": 0.04988, "stage1_h": 0.06882, "loss": 0.76824, "grad_norm": 0.56992, "time": 0.68816}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.1, "memory": 8682, "data_time": 0.0133, "stage0_loss_instance_mil": 0.63055, "stage0_bag_acc": 33.34424, "stage0_mean_ious": 0.09002, "stage0_s": 0.0, "stage0_m": 0.02361, "stage0_l": 0.06707, "stage0_h": 0.089, "stage1_loss_instance_mil": 0.14531, "stage1_bag_acc": 28.55843, "stage1_neg_loss": 0.03459, "stage1_mean_ious": 0.08741, "stage1_s": 0.0, "stage1_m": 0.02031, "stage1_l": 0.0681, "stage1_h": 0.08624, "loss": 0.81045, "grad_norm": 0.8939, "time": 0.68501}
