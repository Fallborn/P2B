{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bdcbe92", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=6,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18726, "data_time": 0.07525, "stage0_loss_instance_mil": 0.73194, "stage0_bag_acc": 20.96316, "stage0_mean_ious": 0.11103, "stage0_s": 0.0, "stage0_m": 0.02579, "stage0_l": 0.142, "stage0_h": 0.10463, "stage1_loss_instance_mil": 0.16212, "stage1_bag_acc": 19.85786, "stage1_neg_loss": 0.00147, "stage1_mean_ious": 0.11057, "stage1_s": 0.0, "stage1_m": 0.02496, "stage1_l": 0.14203, "stage1_h": 0.10407, "loss": 0.89552, "grad_norm": 3.74575, "time": 1.80845}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18726, "data_time": 0.02739, "stage0_loss_instance_mil": 0.62199, "stage0_bag_acc": 39.63356, "stage0_mean_ious": 0.11554, "stage0_s": 0.0, "stage0_m": 0.02419, "stage0_l": 0.12717, "stage0_h": 0.11183, "stage1_loss_instance_mil": 0.22028, "stage1_bag_acc": 20.55046, "stage1_neg_loss": 0.00408, "stage1_mean_ious": 0.1149, "stage1_s": 0.0, "stage1_m": 0.02147, "stage1_l": 0.12717, "stage1_h": 0.11139, "loss": 0.84635, "grad_norm": 3.5666, "time": 1.75536}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18726, "data_time": 0.02718, "stage0_loss_instance_mil": 0.31321, "stage0_bag_acc": 82.33294, "stage0_mean_ious": 0.12572, "stage0_s": 0.0, "stage0_m": 0.00981, "stage0_l": 0.13743, "stage0_h": 0.12117, "stage1_loss_instance_mil": 0.35281, "stage1_bag_acc": 73.9223, "stage1_neg_loss": 0.05279, "stage1_mean_ious": 0.12685, "stage1_s": 0.0, "stage1_m": 0.01179, "stage1_l": 0.14573, "stage1_h": 0.12026, "loss": 0.7188, "grad_norm": 7.77259, "time": 1.74386}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18726, "data_time": 0.0777, "stage0_loss_instance_mil": 0.14713, "stage0_bag_acc": 91.50032, "stage0_mean_ious": 0.12768, "stage0_s": 0.0, "stage0_m": 0.02081, "stage0_l": 0.14799, "stage0_h": 0.12374, "stage1_loss_instance_mil": 0.3464, "stage1_bag_acc": 94.15965, "stage1_neg_loss": 0.07881, "stage1_mean_ious": 0.12695, "stage1_s": 0.0, "stage1_m": 0.01946, "stage1_l": 0.14855, "stage1_h": 0.12296, "loss": 0.57234, "grad_norm": 9.86496, "time": 1.80538}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 2e-05, "memory": 18741, "data_time": 0.02534, "stage0_loss_instance_mil": 0.08603, "stage0_bag_acc": 95.60929, "stage0_mean_ious": 0.13157, "stage0_s": 0.0, "stage0_m": 0.03008, "stage0_l": 0.12835, "stage0_h": 0.12829, "stage1_loss_instance_mil": 0.32998, "stage1_bag_acc": 96.09376, "stage1_neg_loss": 0.08861, "stage1_mean_ious": 0.12954, "stage1_s": 0.0, "stage1_m": 0.03419, "stage1_l": 0.12597, "stage1_h": 0.12605, "loss": 0.50462, "grad_norm": 13.39857, "time": 1.71005}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18741, "data_time": 0.02811, "stage0_loss_instance_mil": 0.10012, "stage0_bag_acc": 93.06966, "stage0_mean_ious": 0.1408, "stage0_s": 0.0, "stage0_m": 0.02172, "stage0_l": 0.14244, "stage0_h": 0.13902, "stage1_loss_instance_mil": 0.28274, "stage1_bag_acc": 94.90993, "stage1_neg_loss": 0.08349, "stage1_mean_ious": 0.14128, "stage1_s": 0.0, "stage1_m": 0.02283, "stage1_l": 0.14468, "stage1_h": 0.13926, "loss": 0.46634, "grad_norm": 13.9534, "time": 1.76529}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 3e-05, "memory": 18741, "data_time": 0.07608, "stage0_loss_instance_mil": 0.05952, "stage0_bag_acc": 95.92347, "stage0_mean_ious": 0.14275, "stage0_s": 0.0, "stage0_m": 0.03772, "stage0_l": 0.12695, "stage0_h": 0.14065, "stage1_loss_instance_mil": 0.25414, "stage1_bag_acc": 96.99935, "stage1_neg_loss": 0.06901, "stage1_mean_ious": 0.14228, "stage1_s": 0.0, "stage1_m": 0.03477, "stage1_l": 0.13027, "stage1_h": 0.13987, "loss": 0.38267, "grad_norm": 10.48098, "time": 1.81303}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 4e-05, "memory": 18746, "data_time": 0.02684, "stage0_loss_instance_mil": 0.0938, "stage0_bag_acc": 93.5412, "stage0_mean_ious": 0.13217, "stage0_s": 0.0, "stage0_m": 0.03417, "stage0_l": 0.11519, "stage0_h": 0.13353, "stage1_loss_instance_mil": 0.21891, "stage1_bag_acc": 94.74528, "stage1_neg_loss": 0.07819, "stage1_mean_ious": 0.13099, "stage1_s": 0.0, "stage1_m": 0.03213, "stage1_l": 0.11128, "stage1_h": 0.13245, "loss": 0.3909, "grad_norm": 14.48914, "time": 1.72396}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 4e-05, "memory": 18746, "data_time": 0.02743, "stage0_loss_instance_mil": 0.06336, "stage0_bag_acc": 96.20386, "stage0_mean_ious": 0.13687, "stage0_s": 0.0, "stage0_m": 0.0384, "stage0_l": 0.12898, "stage0_h": 0.13608, "stage1_loss_instance_mil": 0.18442, "stage1_bag_acc": 96.66492, "stage1_neg_loss": 0.0645, "stage1_mean_ious": 0.13396, "stage1_s": 0.0, "stage1_m": 0.03542, "stage1_l": 0.12845, "stage1_h": 0.13283, "loss": 0.31228, "grad_norm": 10.91124, "time": 1.75099}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18746, "data_time": 0.07675, "stage0_loss_instance_mil": 0.04525, "stage0_bag_acc": 96.83166, "stage0_mean_ious": 0.13842, "stage0_s": 9e-05, "stage0_m": 0.02638, "stage0_l": 0.11697, "stage0_h": 0.13925, "stage1_loss_instance_mil": 0.17377, "stage1_bag_acc": 97.74176, "stage1_neg_loss": 0.06815, "stage1_mean_ious": 0.13627, "stage1_s": 0.0, "stage1_m": 0.0263, "stage1_l": 0.11494, "stage1_h": 0.13711, "loss": 0.28717, "grad_norm": 11.7385, "time": 1.7786}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18746, "data_time": 0.02671, "stage0_loss_instance_mil": 0.06077, "stage0_bag_acc": 96.39759, "stage0_mean_ious": 0.13492, "stage0_s": 0.0, "stage0_m": 0.02269, "stage0_l": 0.14234, "stage0_h": 0.13336, "stage1_loss_instance_mil": 0.19156, "stage1_bag_acc": 95.75684, "stage1_neg_loss": 0.05538, "stage1_mean_ious": 0.1323, "stage1_s": 0.0, "stage1_m": 0.02187, "stage1_l": 0.14021, "stage1_h": 0.13094, "loss": 0.30771, "grad_norm": 9.51943, "time": 1.74121}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18746, "data_time": 0.02632, "stage0_loss_instance_mil": 0.09135, "stage0_bag_acc": 93.51991, "stage0_mean_ious": 0.12868, "stage0_s": 0.0, "stage0_m": 0.0321, "stage0_l": 0.10612, "stage0_h": 0.13013, "stage1_loss_instance_mil": 0.15815, "stage1_bag_acc": 95.394, "stage1_neg_loss": 0.05016, "stage1_mean_ious": 0.12796, "stage1_s": 0.0, "stage1_m": 0.03158, "stage1_l": 0.10636, "stage1_h": 0.12936, "loss": 0.29966, "grad_norm": 9.3431, "time": 1.73272}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18746, "data_time": 0.0739, "stage0_loss_instance_mil": 0.05123, "stage0_bag_acc": 96.26624, "stage0_mean_ious": 0.14035, "stage0_s": 0.0, "stage0_m": 0.03893, "stage0_l": 0.1445, "stage0_h": 0.13616, "stage1_loss_instance_mil": 0.14058, "stage1_bag_acc": 97.20595, "stage1_neg_loss": 0.0532, "stage1_mean_ious": 0.14034, "stage1_s": 0.0, "stage1_m": 0.03806, "stage1_l": 0.14704, "stage1_h": 0.13559, "loss": 0.24501, "grad_norm": 7.71676, "time": 1.75584}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18746, "data_time": 0.02703, "stage0_loss_instance_mil": 0.03457, "stage0_bag_acc": 98.16091, "stage0_mean_ious": 0.13309, "stage0_s": 0.0, "stage0_m": 0.04924, "stage0_l": 0.12314, "stage0_h": 0.13188, "stage1_loss_instance_mil": 0.13845, "stage1_bag_acc": 98.60339, "stage1_neg_loss": 0.05166, "stage1_mean_ious": 0.13306, "stage1_s": 0.0, "stage1_m": 0.04542, "stage1_l": 0.121, "stage1_h": 0.13207, "loss": 0.22468, "grad_norm": 7.44738, "time": 1.76326}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18746, "data_time": 0.02788, "stage0_loss_instance_mil": 0.03325, "stage0_bag_acc": 97.70133, "stage0_mean_ious": 0.13073, "stage0_s": 0.0, "stage0_m": 0.01484, "stage0_l": 0.13689, "stage0_h": 0.12938, "stage1_loss_instance_mil": 0.13211, "stage1_bag_acc": 98.63902, "stage1_neg_loss": 0.05196, "stage1_mean_ious": 0.12829, "stage1_s": 0.0, "stage1_m": 0.01467, "stage1_l": 0.13125, "stage1_h": 0.12699, "loss": 0.21732, "grad_norm": 7.50725, "time": 1.74805}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18746, "data_time": 0.07777, "stage0_loss_instance_mil": 0.02593, "stage0_bag_acc": 98.53934, "stage0_mean_ious": 0.13417, "stage0_s": 9e-05, "stage0_m": 0.02406, "stage0_l": 0.11978, "stage0_h": 0.1357, "stage1_loss_instance_mil": 0.12075, "stage1_bag_acc": 98.52806, "stage1_neg_loss": 0.04776, "stage1_mean_ious": 0.13288, "stage1_s": 7e-05, "stage1_m": 0.022, "stage1_l": 0.12175, "stage1_h": 0.13428, "loss": 0.19444, "grad_norm": 7.05261, "time": 1.8289}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18766, "data_time": 0.02629, "stage0_loss_instance_mil": 0.03036, "stage0_bag_acc": 98.46788, "stage0_mean_ious": 0.13236, "stage0_s": 0.0, "stage0_m": 0.02055, "stage0_l": 0.11457, "stage0_h": 0.13124, "stage1_loss_instance_mil": 0.11403, "stage1_bag_acc": 98.60007, "stage1_neg_loss": 0.04709, "stage1_mean_ious": 0.12942, "stage1_s": 0.0, "stage1_m": 0.01853, "stage1_l": 0.11407, "stage1_h": 0.1282, "loss": 0.19147, "grad_norm": 6.71592, "time": 1.73404}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18766, "data_time": 0.02643, "stage0_loss_instance_mil": 0.03133, "stage0_bag_acc": 97.9849, "stage0_mean_ious": 0.13738, "stage0_s": 0.0, "stage0_m": 0.02847, "stage0_l": 0.13973, "stage0_h": 0.13283, "stage1_loss_instance_mil": 0.11965, "stage1_bag_acc": 97.62333, "stage1_neg_loss": 0.04664, "stage1_mean_ious": 0.13609, "stage1_s": 0.0, "stage1_m": 0.02756, "stage1_l": 0.13933, "stage1_h": 0.13145, "loss": 0.19763, "grad_norm": 5.91793, "time": 1.71459}
{"mode": "val", "epoch": 6, "iter": 150, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.036, "bbox_mAP_50": 0.104, "bbox_mAP_75": 0.058, "bbox_mAP_s": 0.035, "bbox_mAP_m": 0.024, "bbox_mAP_l": 0.012, "bbox_mAP_copypaste": "0.036 0.104 0.058 0.035 0.024 0.012"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18766, "data_time": 0.07749, "stage0_loss_instance_mil": 0.02616, "stage0_bag_acc": 97.75553, "stage0_mean_ious": 0.1227, "stage0_s": 0.0, "stage0_m": 0.03256, "stage0_l": 0.11836, "stage0_h": 0.12278, "stage1_loss_instance_mil": 0.12071, "stage1_bag_acc": 98.95136, "stage1_neg_loss": 0.04847, "stage1_mean_ious": 0.11981, "stage1_s": 0.0, "stage1_m": 0.03041, "stage1_l": 0.11931, "stage1_h": 0.11897, "loss": 0.19534, "grad_norm": 6.23508, "time": 1.79978}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18766, "data_time": 0.02843, "stage0_loss_instance_mil": 0.03453, "stage0_bag_acc": 97.60218, "stage0_mean_ious": 0.13378, "stage0_s": 0.0, "stage0_m": 0.03004, "stage0_l": 0.12517, "stage0_h": 0.13306, "stage1_loss_instance_mil": 0.11688, "stage1_bag_acc": 98.31859, "stage1_neg_loss": 0.04999, "stage1_mean_ious": 0.13094, "stage1_s": 0.0, "stage1_m": 0.02909, "stage1_l": 0.12082, "stage1_h": 0.13036, "loss": 0.2014, "grad_norm": 6.58303, "time": 1.74874}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18766, "data_time": 0.02704, "stage0_loss_instance_mil": 0.01801, "stage0_bag_acc": 98.7501, "stage0_mean_ious": 0.1379, "stage0_s": 0.00011, "stage0_m": 0.03907, "stage0_l": 0.15641, "stage0_h": 0.13229, "stage1_loss_instance_mil": 0.12608, "stage1_bag_acc": 99.33406, "stage1_neg_loss": 0.054, "stage1_mean_ious": 0.13653, "stage1_s": 4e-05, "stage1_m": 0.03673, "stage1_l": 0.15607, "stage1_h": 0.13085, "loss": 0.19809, "grad_norm": 8.5166, "time": 1.7383}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18766, "data_time": 0.07495, "stage0_loss_instance_mil": 0.02273, "stage0_bag_acc": 98.48695, "stage0_mean_ious": 0.13846, "stage0_s": 0.0, "stage0_m": 0.02927, "stage0_l": 0.14119, "stage0_h": 0.13404, "stage1_loss_instance_mil": 0.10631, "stage1_bag_acc": 98.72307, "stage1_neg_loss": 0.04708, "stage1_mean_ious": 0.13809, "stage1_s": 0.0, "stage1_m": 0.02789, "stage1_l": 0.14071, "stage1_h": 0.13382, "loss": 0.17612, "grad_norm": 6.26107, "time": 1.79728}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18766, "data_time": 0.02682, "stage0_loss_instance_mil": 0.03075, "stage0_bag_acc": 97.88437, "stage0_mean_ious": 0.12952, "stage0_s": 0.0, "stage0_m": 0.02188, "stage0_l": 0.13622, "stage0_h": 0.1262, "stage1_loss_instance_mil": 0.10165, "stage1_bag_acc": 98.12539, "stage1_neg_loss": 0.04486, "stage1_mean_ious": 0.12923, "stage1_s": 0.0, "stage1_m": 0.02063, "stage1_l": 0.13448, "stage1_h": 0.12607, "loss": 0.17726, "grad_norm": 8.04944, "time": 1.74744}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18766, "data_time": 0.02829, "stage0_loss_instance_mil": 0.02375, "stage0_bag_acc": 98.11535, "stage0_mean_ious": 0.13376, "stage0_s": 0.0, "stage0_m": 0.03369, "stage0_l": 0.11932, "stage0_h": 0.13242, "stage1_loss_instance_mil": 0.12374, "stage1_bag_acc": 98.93593, "stage1_neg_loss": 0.04755, "stage1_mean_ious": 0.13156, "stage1_s": 0.0, "stage1_m": 0.03474, "stage1_l": 0.12194, "stage1_h": 0.12942, "loss": 0.19504, "grad_norm": 7.41051, "time": 1.7615}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18766, "data_time": 0.0751, "stage0_loss_instance_mil": 0.01389, "stage0_bag_acc": 99.39524, "stage0_mean_ious": 0.13255, "stage0_s": 0.0, "stage0_m": 0.02989, "stage0_l": 0.13203, "stage0_h": 0.12992, "stage1_loss_instance_mil": 0.09522, "stage1_bag_acc": 99.29069, "stage1_neg_loss": 0.04809, "stage1_mean_ious": 0.13309, "stage1_s": 0.0, "stage1_m": 0.03189, "stage1_l": 0.12984, "stage1_h": 0.13073, "loss": 0.15719, "grad_norm": 5.54996, "time": 1.81315}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18766, "data_time": 0.02854, "stage0_loss_instance_mil": 0.01315, "stage0_bag_acc": 99.25521, "stage0_mean_ious": 0.1385, "stage0_s": 0.0, "stage0_m": 0.03771, "stage0_l": 0.13069, "stage0_h": 0.13495, "stage1_loss_instance_mil": 0.09366, "stage1_bag_acc": 99.5188, "stage1_neg_loss": 0.04392, "stage1_mean_ious": 0.13639, "stage1_s": 0.0, "stage1_m": 0.03794, "stage1_l": 0.13062, "stage1_h": 0.13207, "loss": 0.15073, "grad_norm": 4.69857, "time": 1.78696}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18766, "data_time": 0.02842, "stage0_loss_instance_mil": 0.01307, "stage0_bag_acc": 99.14452, "stage0_mean_ious": 0.12989, "stage0_s": 0.00012, "stage0_m": 0.03996, "stage0_l": 0.13389, "stage0_h": 0.12484, "stage1_loss_instance_mil": 0.08138, "stage1_bag_acc": 99.50077, "stage1_neg_loss": 0.04155, "stage1_mean_ious": 0.12779, "stage1_s": 7e-05, "stage1_m": 0.03601, "stage1_l": 0.1367, "stage1_h": 0.12234, "loss": 0.136, "grad_norm": 4.64272, "time": 1.76721}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18766, "data_time": 0.07652, "stage0_loss_instance_mil": 0.00873, "stage0_bag_acc": 99.30244, "stage0_mean_ious": 0.13824, "stage0_s": 0.0, "stage0_m": 0.03642, "stage0_l": 0.15701, "stage0_h": 0.13339, "stage1_loss_instance_mil": 0.07944, "stage1_bag_acc": 99.36048, "stage1_neg_loss": 0.0404, "stage1_mean_ious": 0.13796, "stage1_s": 0.0, "stage1_m": 0.03618, "stage1_l": 0.15662, "stage1_h": 0.13309, "loss": 0.12857, "grad_norm": 4.28189, "time": 1.80084}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18766, "data_time": 0.02805, "stage0_loss_instance_mil": 0.01546, "stage0_bag_acc": 99.1706, "stage0_mean_ious": 0.13257, "stage0_s": 0.0, "stage0_m": 0.03081, "stage0_l": 0.14994, "stage0_h": 0.1266, "stage1_loss_instance_mil": 0.09023, "stage1_bag_acc": 99.51856, "stage1_neg_loss": 0.0371, "stage1_mean_ious": 0.13323, "stage1_s": 0.0, "stage1_m": 0.03434, "stage1_l": 0.1516, "stage1_h": 0.12675, "loss": 0.14279, "grad_norm": 3.85554, "time": 1.78419}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18766, "data_time": 0.02682, "stage0_loss_instance_mil": 0.01404, "stage0_bag_acc": 98.97117, "stage0_mean_ious": 0.12884, "stage0_s": 0.0, "stage0_m": 0.03603, "stage0_l": 0.11285, "stage0_h": 0.12777, "stage1_loss_instance_mil": 0.08116, "stage1_bag_acc": 99.19529, "stage1_neg_loss": 0.0443, "stage1_mean_ious": 0.1278, "stage1_s": 0.0, "stage1_m": 0.03877, "stage1_l": 0.11503, "stage1_h": 0.12606, "loss": 0.13951, "grad_norm": 5.06383, "time": 1.72676}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18766, "data_time": 0.07938, "stage0_loss_instance_mil": 0.00733, "stage0_bag_acc": 99.58618, "stage0_mean_ious": 0.13067, "stage0_s": 0.0, "stage0_m": 0.02494, "stage0_l": 0.1289, "stage0_h": 0.12794, "stage1_loss_instance_mil": 0.07894, "stage1_bag_acc": 99.69474, "stage1_neg_loss": 0.03507, "stage1_mean_ious": 0.1291, "stage1_s": 0.0, "stage1_m": 0.02491, "stage1_l": 0.13017, "stage1_h": 0.12607, "loss": 0.12134, "grad_norm": 4.23338, "time": 1.81846}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18766, "data_time": 0.02685, "stage0_loss_instance_mil": 0.00983, "stage0_bag_acc": 99.33205, "stage0_mean_ious": 0.14133, "stage0_s": 0.0, "stage0_m": 0.03606, "stage0_l": 0.13264, "stage0_h": 0.13847, "stage1_loss_instance_mil": 0.08434, "stage1_bag_acc": 99.78804, "stage1_neg_loss": 0.03978, "stage1_mean_ious": 0.13952, "stage1_s": 0.0, "stage1_m": 0.03301, "stage1_l": 0.13033, "stage1_h": 0.13699, "loss": 0.13395, "grad_norm": 4.28788, "time": 1.72511}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18766, "data_time": 0.02689, "stage0_loss_instance_mil": 0.01655, "stage0_bag_acc": 99.0705, "stage0_mean_ious": 0.12912, "stage0_s": 0.0, "stage0_m": 0.02677, "stage0_l": 0.12242, "stage0_h": 0.12607, "stage1_loss_instance_mil": 0.08748, "stage1_bag_acc": 99.00429, "stage1_neg_loss": 0.03875, "stage1_mean_ious": 0.12871, "stage1_s": 0.0, "stage1_m": 0.02696, "stage1_l": 0.12556, "stage1_h": 0.12595, "loss": 0.14278, "grad_norm": 4.51813, "time": 1.75063}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18766, "data_time": 0.07811, "stage0_loss_instance_mil": 0.00673, "stage0_bag_acc": 99.61272, "stage0_mean_ious": 0.13167, "stage0_s": 0.0, "stage0_m": 0.02998, "stage0_l": 0.11668, "stage0_h": 0.13037, "stage1_loss_instance_mil": 0.07878, "stage1_bag_acc": 99.7614, "stage1_neg_loss": 0.0398, "stage1_mean_ious": 0.13105, "stage1_s": 0.0, "stage1_m": 0.03277, "stage1_l": 0.11738, "stage1_h": 0.12929, "loss": 0.12531, "grad_norm": 4.47757, "time": 1.79366}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18766, "data_time": 0.02831, "stage0_loss_instance_mil": 0.01298, "stage0_bag_acc": 99.04061, "stage0_mean_ious": 0.13725, "stage0_s": 0.0, "stage0_m": 0.02543, "stage0_l": 0.12647, "stage0_h": 0.13527, "stage1_loss_instance_mil": 0.07806, "stage1_bag_acc": 98.92751, "stage1_neg_loss": 0.03766, "stage1_mean_ious": 0.13341, "stage1_s": 0.0, "stage1_m": 0.03107, "stage1_l": 0.12115, "stage1_h": 0.13134, "loss": 0.1287, "grad_norm": 3.65222, "time": 1.75438}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18766, "data_time": 0.02799, "stage0_loss_instance_mil": 0.01061, "stage0_bag_acc": 99.35827, "stage0_mean_ious": 0.12727, "stage0_s": 0.0, "stage0_m": 0.04434, "stage0_l": 0.12261, "stage0_h": 0.12249, "stage1_loss_instance_mil": 0.07645, "stage1_bag_acc": 99.79144, "stage1_neg_loss": 0.03923, "stage1_mean_ious": 0.12547, "stage1_s": 0.0, "stage1_m": 0.04356, "stage1_l": 0.11878, "stage1_h": 0.12085, "loss": 0.1263, "grad_norm": 4.38004, "time": 1.73191}
{"mode": "val", "epoch": 12, "iter": 150, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.031, "bbox_mAP_50": 0.097, "bbox_mAP_75": 0.05, "bbox_mAP_s": 0.027, "bbox_mAP_m": 0.015, "bbox_mAP_l": 0.007, "bbox_mAP_copypaste": "0.031 0.097 0.050 0.027 0.015 0.007"}
