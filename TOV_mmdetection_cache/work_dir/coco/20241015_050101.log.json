{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07831, "stage0_loss_instance_mil": 0.70311, "stage0_bag_acc": 27.69266, "stage0_mean_ious": 0.3318, "stage0_s": 0.0, "stage0_m": 0.05536, "stage0_l": 0.25776, "stage0_h": 0.33797, "stage1_loss_instance_mil": 0.16434, "stage1_bag_acc": 15.55232, "stage1_neg_loss": 0.00571, "stage1_mean_ious": 0.33176, "stage1_s": 0.0, "stage1_m": 0.06153, "stage1_l": 0.28151, "stage1_h": 0.33314, "loss": 0.87316, "grad_norm": 3.2235, "time": 1.79799}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02876, "stage0_loss_instance_mil": 0.56221, "stage0_bag_acc": 61.33629, "stage0_mean_ious": 0.3855, "stage0_s": 0.0, "stage0_m": 0.07679, "stage0_l": 0.25707, "stage0_h": 0.39481, "stage1_loss_instance_mil": 0.22672, "stage1_bag_acc": 39.25854, "stage1_neg_loss": 0.01278, "stage1_mean_ious": 0.38469, "stage1_s": 0.0, "stage1_m": 0.0859, "stage1_l": 0.27553, "stage1_h": 0.39149, "loss": 0.80171, "grad_norm": 4.38757, "time": 1.74443}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02955, "stage0_loss_instance_mil": 0.27217, "stage0_bag_acc": 85.33333, "stage0_mean_ious": 0.43293, "stage0_s": 0.0, "stage0_m": 0.03697, "stage0_l": 0.24323, "stage0_h": 0.44896, "stage1_loss_instance_mil": 0.3014, "stage1_bag_acc": 84.27586, "stage1_neg_loss": 0.06932, "stage1_mean_ious": 0.39631, "stage1_s": 0.0, "stage1_m": 0.02852, "stage1_l": 0.22221, "stage1_h": 0.41302, "loss": 0.64289, "grad_norm": 8.52779, "time": 1.76098}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18833, "data_time": 0.08094, "stage0_loss_instance_mil": 0.08096, "stage0_bag_acc": 95.20685, "stage0_mean_ious": 0.39008, "stage0_s": 0.0, "stage0_m": 0.05765, "stage0_l": 0.16396, "stage0_h": 0.41665, "stage1_loss_instance_mil": 0.31676, "stage1_bag_acc": 96.10335, "stage1_neg_loss": 0.08815, "stage1_mean_ious": 0.35891, "stage1_s": 0.0, "stage1_m": 0.0506, "stage1_l": 0.14574, "stage1_h": 0.38303, "loss": 0.48587, "grad_norm": 11.3721, "time": 1.84144}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18833, "data_time": 0.02996, "stage0_loss_instance_mil": 0.06164, "stage0_bag_acc": 96.35826, "stage0_mean_ious": 0.38282, "stage0_s": 0.00858, "stage0_m": 0.03165, "stage0_l": 0.17028, "stage0_h": 0.40594, "stage1_loss_instance_mil": 0.30994, "stage1_bag_acc": 97.8127, "stage1_neg_loss": 0.09009, "stage1_mean_ious": 0.34744, "stage1_s": 0.0068, "stage1_m": 0.03246, "stage1_l": 0.14809, "stage1_h": 0.37048, "loss": 0.46167, "grad_norm": 13.44986, "time": 1.74727}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18833, "data_time": 0.0295, "stage0_loss_instance_mil": 0.05553, "stage0_bag_acc": 96.6074, "stage0_mean_ious": 0.39222, "stage0_s": 0.0, "stage0_m": 0.03208, "stage0_l": 0.16432, "stage0_h": 0.42186, "stage1_loss_instance_mil": 0.30584, "stage1_bag_acc": 97.66993, "stage1_neg_loss": 0.08145, "stage1_mean_ious": 0.35613, "stage1_s": 0.0, "stage1_m": 0.01829, "stage1_l": 0.14243, "stage1_h": 0.38561, "loss": 0.44282, "grad_norm": 13.59679, "time": 1.74202}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18833, "data_time": 0.08451, "stage0_loss_instance_mil": 0.03573, "stage0_bag_acc": 97.64778, "stage0_mean_ious": 0.36283, "stage0_s": 0.0, "stage0_m": 0.04235, "stage0_l": 0.13537, "stage0_h": 0.39337, "stage1_loss_instance_mil": 0.2787, "stage1_bag_acc": 98.31439, "stage1_neg_loss": 0.08929, "stage1_mean_ious": 0.32624, "stage1_s": 0.0, "stage1_m": 0.02949, "stage1_l": 0.11297, "stage1_h": 0.35599, "loss": 0.40373, "grad_norm": 14.74497, "time": 1.80934}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.03034, "stage0_loss_instance_mil": 0.03181, "stage0_bag_acc": 98.69712, "stage0_mean_ious": 0.36697, "stage0_s": 0.0087, "stage0_m": 0.04414, "stage0_l": 0.11357, "stage0_h": 0.39714, "stage1_loss_instance_mil": 0.2613, "stage1_bag_acc": 99.06905, "stage1_neg_loss": 0.09099, "stage1_mean_ious": 0.32973, "stage1_s": 0.0074, "stage1_m": 0.03016, "stage1_l": 0.10044, "stage1_h": 0.35619, "loss": 0.3841, "grad_norm": 15.71693, "time": 1.76479}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02706, "stage0_loss_instance_mil": 0.082, "stage0_bag_acc": 94.89938, "stage0_mean_ious": 0.33761, "stage0_s": 0.0, "stage0_m": 0.02761, "stage0_l": 0.13532, "stage0_h": 0.3602, "stage1_loss_instance_mil": 0.25443, "stage1_bag_acc": 96.71379, "stage1_neg_loss": 0.07608, "stage1_mean_ious": 0.30559, "stage1_s": 0.0, "stage1_m": 0.02005, "stage1_l": 0.1099, "stage1_h": 0.32808, "loss": 0.41251, "grad_norm": 13.99446, "time": 1.74135}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.036, "bbox_mAP_50": 0.135, "bbox_mAP_75": 0.06, "bbox_mAP_s": 0.018, "bbox_mAP_m": 0.007, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.036 0.135 0.060 0.018 0.007 0.004"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07432, "stage0_loss_instance_mil": 0.03686, "stage0_bag_acc": 97.74987, "stage0_mean_ious": 0.33057, "stage0_s": 0.0, "stage0_m": 0.04739, "stage0_l": 0.10316, "stage0_h": 0.35815, "stage1_loss_instance_mil": 0.24654, "stage1_bag_acc": 98.15127, "stage1_neg_loss": 0.08268, "stage1_mean_ious": 0.28807, "stage1_s": 0.0, "stage1_m": 0.03126, "stage1_l": 0.09184, "stage1_h": 0.31351, "loss": 0.36608, "grad_norm": 12.8758, "time": 1.79502}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02391, "stage0_loss_instance_mil": 0.02272, "stage0_bag_acc": 98.80436, "stage0_mean_ious": 0.32002, "stage0_s": 0.00829, "stage0_m": 0.0299, "stage0_l": 0.10273, "stage0_h": 0.34223, "stage1_loss_instance_mil": 0.24764, "stage1_bag_acc": 98.90029, "stage1_neg_loss": 0.07904, "stage1_mean_ious": 0.28026, "stage1_s": 0.00714, "stage1_m": 0.02106, "stage1_l": 0.08385, "stage1_h": 0.3019, "loss": 0.34939, "grad_norm": 12.07631, "time": 1.71263}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.0252, "stage0_loss_instance_mil": 0.02755, "stage0_bag_acc": 98.04137, "stage0_mean_ious": 0.24966, "stage0_s": 0.0, "stage0_m": 0.02542, "stage0_l": 0.11342, "stage0_h": 0.26525, "stage1_loss_instance_mil": 0.24466, "stage1_bag_acc": 98.0592, "stage1_neg_loss": 0.07986, "stage1_mean_ious": 0.21962, "stage1_s": 0.0, "stage1_m": 0.01604, "stage1_l": 0.09553, "stage1_h": 0.23529, "loss": 0.35207, "grad_norm": 11.61217, "time": 1.73463}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.0765, "stage0_loss_instance_mil": 0.01055, "stage0_bag_acc": 99.62402, "stage0_mean_ious": 0.24733, "stage0_s": 0.0, "stage0_m": 0.03307, "stage0_l": 0.09201, "stage0_h": 0.26439, "stage1_loss_instance_mil": 0.23426, "stage1_bag_acc": 99.67976, "stage1_neg_loss": 0.07308, "stage1_mean_ious": 0.22537, "stage1_s": 0.0, "stage1_m": 0.02216, "stage1_l": 0.07306, "stage1_h": 0.24311, "loss": 0.31789, "grad_norm": 9.55755, "time": 1.77448}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02654, "stage0_loss_instance_mil": 0.02305, "stage0_bag_acc": 98.56113, "stage0_mean_ious": 0.15962, "stage0_s": 0.0, "stage0_m": 0.03917, "stage0_l": 0.08699, "stage0_h": 0.16619, "stage1_loss_instance_mil": 0.23202, "stage1_bag_acc": 99.2002, "stage1_neg_loss": 0.07088, "stage1_mean_ious": 0.14402, "stage1_s": 0.0, "stage1_m": 0.02484, "stage1_l": 0.06531, "stage1_h": 0.15177, "loss": 0.32595, "grad_norm": 8.1941, "time": 1.76582}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02478, "stage0_loss_instance_mil": 0.01752, "stage0_bag_acc": 99.35577, "stage0_mean_ious": 0.13955, "stage0_s": 0.0, "stage0_m": 0.04274, "stage0_l": 0.09446, "stage0_h": 0.14328, "stage1_loss_instance_mil": 0.22335, "stage1_bag_acc": 99.25241, "stage1_neg_loss": 0.07831, "stage1_mean_ious": 0.12712, "stage1_s": 0.0, "stage1_m": 0.02812, "stage1_l": 0.06872, "stage1_h": 0.13392, "loss": 0.31917, "grad_norm": 9.28484, "time": 1.73502}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07299, "stage0_loss_instance_mil": 0.01636, "stage0_bag_acc": 99.47511, "stage0_mean_ious": 0.14638, "stage0_s": 0.00783, "stage0_m": 0.04151, "stage0_l": 0.10241, "stage0_h": 0.15053, "stage1_loss_instance_mil": 0.20851, "stage1_bag_acc": 99.46004, "stage1_neg_loss": 0.06813, "stage1_mean_ious": 0.13384, "stage1_s": 0.0066, "stage1_m": 0.02866, "stage1_l": 0.07685, "stage1_h": 0.14153, "loss": 0.293, "grad_norm": 8.89195, "time": 1.80598}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.0258, "stage0_loss_instance_mil": 0.01758, "stage0_bag_acc": 99.25741, "stage0_mean_ious": 0.11372, "stage0_s": 0.0, "stage0_m": 0.03451, "stage0_l": 0.09251, "stage0_h": 0.11285, "stage1_loss_instance_mil": 0.23005, "stage1_bag_acc": 99.48839, "stage1_neg_loss": 0.07677, "stage1_mean_ious": 0.10713, "stage1_s": 0.0, "stage1_m": 0.02021, "stage1_l": 0.0751, "stage1_h": 0.1087, "loss": 0.3244, "grad_norm": 10.31058, "time": 1.68949}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02547, "stage0_loss_instance_mil": 0.01194, "stage0_bag_acc": 99.29589, "stage0_mean_ious": 0.12065, "stage0_s": 0.0, "stage0_m": 0.03363, "stage0_l": 0.08626, "stage0_h": 0.12014, "stage1_loss_instance_mil": 0.21291, "stage1_bag_acc": 99.70859, "stage1_neg_loss": 0.06823, "stage1_mean_ious": 0.10805, "stage1_s": 0.0, "stage1_m": 0.02165, "stage1_l": 0.06857, "stage1_h": 0.10989, "loss": 0.29308, "grad_norm": 9.13071, "time": 1.71784}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.0, "bbox_mAP_50": 0.002, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.002 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07594, "stage0_loss_instance_mil": 0.01277, "stage0_bag_acc": 99.40156, "stage0_mean_ious": 0.10843, "stage0_s": 0.0, "stage0_m": 0.02123, "stage0_l": 0.08135, "stage0_h": 0.10919, "stage1_loss_instance_mil": 0.18852, "stage1_bag_acc": 99.74902, "stage1_neg_loss": 0.06287, "stage1_mean_ious": 0.10138, "stage1_s": 0.0, "stage1_m": 0.01372, "stage1_l": 0.06404, "stage1_h": 0.10447, "loss": 0.26416, "grad_norm": 8.5362, "time": 1.78709}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02634, "stage0_loss_instance_mil": 0.00874, "stage0_bag_acc": 99.52807, "stage0_mean_ious": 0.10312, "stage0_s": 0.0, "stage0_m": 0.02625, "stage0_l": 0.0885, "stage0_h": 0.10171, "stage1_loss_instance_mil": 0.19479, "stage1_bag_acc": 99.21111, "stage1_neg_loss": 0.07186, "stage1_mean_ious": 0.09689, "stage1_s": 0.0, "stage1_m": 0.02268, "stage1_l": 0.07268, "stage1_h": 0.09757, "loss": 0.27538, "grad_norm": 11.71109, "time": 1.70588}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02717, "stage0_loss_instance_mil": 0.01298, "stage0_bag_acc": 99.58333, "stage0_mean_ious": 0.09432, "stage0_s": 0.0, "stage0_m": 0.03825, "stage0_l": 0.09846, "stage0_h": 0.09184, "stage1_loss_instance_mil": 0.16282, "stage1_bag_acc": 99.68333, "stage1_neg_loss": 0.06499, "stage1_mean_ious": 0.08733, "stage1_s": 0.0, "stage1_m": 0.02575, "stage1_l": 0.07926, "stage1_h": 0.08723, "loss": 0.24079, "grad_norm": 7.0971, "time": 1.77683}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07438, "stage0_loss_instance_mil": 0.00844, "stage0_bag_acc": 99.67744, "stage0_mean_ious": 0.08015, "stage0_s": 0.0, "stage0_m": 0.05101, "stage0_l": 0.07202, "stage0_h": 0.07506, "stage1_loss_instance_mil": 0.14543, "stage1_bag_acc": 99.60645, "stage1_neg_loss": 0.06158, "stage1_mean_ious": 0.07488, "stage1_s": 0.0, "stage1_m": 0.03576, "stage1_l": 0.05811, "stage1_h": 0.07312, "loss": 0.21544, "grad_norm": 6.72629, "time": 1.79205}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02409, "stage0_loss_instance_mil": 0.01691, "stage0_bag_acc": 98.70364, "stage0_mean_ious": 0.09627, "stage0_s": 0.0, "stage0_m": 0.03787, "stage0_l": 0.08035, "stage0_h": 0.09431, "stage1_loss_instance_mil": 0.14801, "stage1_bag_acc": 99.17747, "stage1_neg_loss": 0.05966, "stage1_mean_ious": 0.09112, "stage1_s": 0.0, "stage1_m": 0.02853, "stage1_l": 0.06559, "stage1_h": 0.09136, "loss": 0.22457, "grad_norm": 7.80818, "time": 1.71203}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02479, "stage0_loss_instance_mil": 0.00515, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.09021, "stage0_s": 0.0, "stage0_m": 0.01262, "stage0_l": 0.08613, "stage0_h": 0.08759, "stage1_loss_instance_mil": 0.13548, "stage1_bag_acc": 99.65171, "stage1_neg_loss": 0.06056, "stage1_mean_ious": 0.08689, "stage1_s": 0.0, "stage1_m": 0.01109, "stage1_l": 0.07935, "stage1_h": 0.08481, "loss": 0.20118, "grad_norm": 6.2195, "time": 1.74533}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07415, "stage0_loss_instance_mil": 0.00815, "stage0_bag_acc": 99.57106, "stage0_mean_ious": 0.08453, "stage0_s": 0.00778, "stage0_m": 0.03327, "stage0_l": 0.08066, "stage0_h": 0.08052, "stage1_loss_instance_mil": 0.11336, "stage1_bag_acc": 99.68137, "stage1_neg_loss": 0.0455, "stage1_mean_ious": 0.08008, "stage1_s": 0.00637, "stage1_m": 0.0254, "stage1_l": 0.06727, "stage1_h": 0.07874, "loss": 0.16701, "grad_norm": 5.16769, "time": 1.79206}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02468, "stage0_loss_instance_mil": 0.00279, "stage0_bag_acc": 99.92, "stage0_mean_ious": 0.0816, "stage0_s": 0.0, "stage0_m": 0.03807, "stage0_l": 0.07541, "stage0_h": 0.0777, "stage1_loss_instance_mil": 0.11908, "stage1_bag_acc": 99.76615, "stage1_neg_loss": 0.05192, "stage1_mean_ious": 0.07776, "stage1_s": 0.0, "stage1_m": 0.02855, "stage1_l": 0.06384, "stage1_h": 0.07609, "loss": 0.17379, "grad_norm": 5.16404, "time": 1.69267}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02635, "stage0_loss_instance_mil": 0.00254, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.09107, "stage0_s": 0.0, "stage0_m": 0.0438, "stage0_l": 0.07786, "stage0_h": 0.08765, "stage1_loss_instance_mil": 0.11078, "stage1_bag_acc": 99.83333, "stage1_neg_loss": 0.05519, "stage1_mean_ious": 0.08674, "stage1_s": 0.0, "stage1_m": 0.03683, "stage1_l": 0.07195, "stage1_h": 0.08551, "loss": 0.16851, "grad_norm": 4.93091, "time": 1.76475}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07693, "stage0_loss_instance_mil": 0.00446, "stage0_bag_acc": 99.66304, "stage0_mean_ious": 0.09433, "stage0_s": 0.0, "stage0_m": 0.03761, "stage0_l": 0.09145, "stage0_h": 0.09207, "stage1_loss_instance_mil": 0.10746, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.05033, "stage1_mean_ious": 0.08759, "stage1_s": 0.0, "stage1_m": 0.03023, "stage1_l": 0.07105, "stage1_h": 0.08786, "loss": 0.16225, "grad_norm": 5.10829, "time": 1.79446}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02576, "stage0_loss_instance_mil": 0.00562, "stage0_bag_acc": 99.90909, "stage0_mean_ious": 0.08917, "stage0_s": 0.0, "stage0_m": 0.02817, "stage0_l": 0.10397, "stage0_h": 0.08433, "stage1_loss_instance_mil": 0.10775, "stage1_bag_acc": 99.80383, "stage1_neg_loss": 0.05139, "stage1_mean_ious": 0.08517, "stage1_s": 0.0, "stage1_m": 0.02268, "stage1_l": 0.09029, "stage1_h": 0.08189, "loss": 0.16476, "grad_norm": 4.88561, "time": 1.72383}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02564, "stage0_loss_instance_mil": 0.00281, "stage0_bag_acc": 99.82476, "stage0_mean_ious": 0.0869, "stage0_s": 0.0, "stage0_m": 0.03853, "stage0_l": 0.06821, "stage0_h": 0.08359, "stage1_loss_instance_mil": 0.10412, "stage1_bag_acc": 99.82476, "stage1_neg_loss": 0.05338, "stage1_mean_ious": 0.08271, "stage1_s": 0.0, "stage1_m": 0.03077, "stage1_l": 0.05846, "stage1_h": 0.0814, "loss": 0.16031, "grad_norm": 5.29528, "time": 1.73746}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07518, "stage0_loss_instance_mil": 0.00404, "stage0_bag_acc": 99.67971, "stage0_mean_ious": 0.09178, "stage0_s": 0.0, "stage0_m": 0.03288, "stage0_l": 0.0826, "stage0_h": 0.08871, "stage1_loss_instance_mil": 0.10546, "stage1_bag_acc": 99.67971, "stage1_neg_loss": 0.05258, "stage1_mean_ious": 0.08564, "stage1_s": 0.0, "stage1_m": 0.0287, "stage1_l": 0.07429, "stage1_h": 0.08389, "loss": 0.16208, "grad_norm": 5.18138, "time": 1.75072}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02622, "stage0_loss_instance_mil": 0.00246, "stage0_bag_acc": 99.86667, "stage0_mean_ious": 0.09537, "stage0_s": 0.0, "stage0_m": 0.0318, "stage0_l": 0.08376, "stage0_h": 0.09301, "stage1_loss_instance_mil": 0.10438, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.05116, "stage1_mean_ious": 0.08876, "stage1_s": 0.0, "stage1_m": 0.0223, "stage1_l": 0.06959, "stage1_h": 0.08861, "loss": 0.15801, "grad_norm": 5.02692, "time": 1.75011}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02674, "stage0_loss_instance_mil": 0.00591, "stage0_bag_acc": 99.9, "stage0_mean_ious": 0.08953, "stage0_s": 0.0078, "stage0_m": 0.04138, "stage0_l": 0.07908, "stage0_h": 0.08625, "stage1_loss_instance_mil": 0.09953, "stage1_bag_acc": 99.79474, "stage1_neg_loss": 0.04667, "stage1_mean_ious": 0.08281, "stage1_s": 0.00634, "stage1_m": 0.0328, "stage1_l": 0.0731, "stage1_h": 0.08039, "loss": 0.1521, "grad_norm": 4.33296, "time": 1.71962}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07344, "stage0_loss_instance_mil": 0.0056, "stage0_bag_acc": 99.90476, "stage0_mean_ious": 0.09121, "stage0_s": 0.0, "stage0_m": 0.03147, "stage0_l": 0.08027, "stage0_h": 0.08821, "stage1_loss_instance_mil": 0.10215, "stage1_bag_acc": 99.90476, "stage1_neg_loss": 0.0458, "stage1_mean_ious": 0.08633, "stage1_s": 0.0, "stage1_m": 0.02289, "stage1_l": 0.06949, "stage1_h": 0.08575, "loss": 0.15355, "grad_norm": 4.27939, "time": 1.75025}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18833, "data_time": 0.02439, "stage0_loss_instance_mil": 0.00316, "stage0_bag_acc": 99.80556, "stage0_mean_ious": 0.08437, "stage0_s": 0.0, "stage0_m": 0.0426, "stage0_l": 0.07844, "stage0_h": 0.08155, "stage1_loss_instance_mil": 0.10068, "stage1_bag_acc": 99.88889, "stage1_neg_loss": 0.052, "stage1_mean_ious": 0.08036, "stage1_s": 0.0, "stage1_m": 0.03268, "stage1_l": 0.07489, "stage1_h": 0.07857, "loss": 0.15584, "grad_norm": 4.61203, "time": 1.66703}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18833, "data_time": 0.02464, "stage0_loss_instance_mil": 0.00175, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.08582, "stage0_s": 0.0, "stage0_m": 0.03292, "stage0_l": 0.0807, "stage0_h": 0.08318, "stage1_loss_instance_mil": 0.09327, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.04767, "stage1_mean_ious": 0.08229, "stage1_s": 0.0, "stage1_m": 0.02812, "stage1_l": 0.0695, "stage1_h": 0.08097, "loss": 0.14268, "grad_norm": 4.3393, "time": 1.69362}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.000 0.000 0.000 0.000 0.000 0.000"}
