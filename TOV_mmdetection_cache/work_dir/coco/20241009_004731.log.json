{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+e1fb402", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=2,\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/images/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ]))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=18)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=1,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 8643, "data_time": 0.05734, "stage0_loss_instance_mil": 0.60233, "stage0_bag_acc": 39.75603, "stage0_mean_ious": 0.41559, "stage0_s": 0.0, "stage0_m": 0.01653, "stage0_l": 0.16747, "stage0_h": 0.43486, "stage1_loss_instance_mil": 0.2689, "stage1_bag_acc": 25.88674, "stage1_neg_loss": 0.03998, "stage1_mean_ious": 0.39328, "stage1_s": 0.0, "stage1_m": 0.01884, "stage1_l": 0.16648, "stage1_h": 0.40859, "loss": 0.91121, "grad_norm": 6.85113, "time": 0.66412}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.01988, "memory": 8643, "data_time": 0.01231, "stage0_loss_instance_mil": 0.61689, "stage0_bag_acc": 35.35628, "stage0_mean_ious": 0.35307, "stage0_s": 0.0, "stage0_m": 0.03222, "stage0_l": 0.1894, "stage0_h": 0.35192, "stage1_loss_instance_mil": 0.21587, "stage1_bag_acc": 29.36699, "stage1_neg_loss": 0.11416, "stage1_mean_ious": 0.34004, "stage1_s": 0.0, "stage1_m": 0.02976, "stage1_l": 0.19929, "stage1_h": 0.33583, "loss": 0.94692, "grad_norm": 7.188, "time": 0.5901}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.02987, "memory": 8643, "data_time": 0.01246, "stage0_loss_instance_mil": 0.69821, "stage0_bag_acc": 20.24432, "stage0_mean_ious": 0.32512, "stage0_s": 0.0, "stage0_m": 0.03394, "stage0_l": 0.1641, "stage0_h": 0.32808, "stage1_loss_instance_mil": 0.1603, "stage1_bag_acc": 25.5104, "stage1_neg_loss": 0.01159, "stage1_mean_ious": 0.31181, "stage1_s": 0.0, "stage1_m": 0.0245, "stage1_l": 0.1551, "stage1_h": 0.31683, "loss": 0.8701, "grad_norm": 1.36957, "time": 0.60184}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.03986, "memory": 8643, "data_time": 0.01323, "stage0_loss_instance_mil": 0.66059, "stage0_bag_acc": 23.72938, "stage0_mean_ious": 0.18449, "stage0_s": 0.0, "stage0_m": 0.00483, "stage0_l": 0.10469, "stage0_h": 0.17719, "stage1_loss_instance_mil": 0.16413, "stage1_bag_acc": 30.92453, "stage1_neg_loss": 0.01746, "stage1_mean_ious": 0.17895, "stage1_s": 0.0, "stage1_m": 0.00593, "stage1_l": 0.10693, "stage1_h": 0.17104, "loss": 0.84217, "grad_norm": 1.42631, "time": 0.59203}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.04985, "memory": 8643, "data_time": 0.0113, "stage0_loss_instance_mil": 0.68725, "stage0_bag_acc": 25.34787, "stage0_mean_ious": 0.29879, "stage0_s": 0.0, "stage0_m": 0.02373, "stage0_l": 0.16905, "stage0_h": 0.29771, "stage1_loss_instance_mil": 0.17556, "stage1_bag_acc": 23.64414, "stage1_neg_loss": 0.00821, "stage1_mean_ious": 0.27905, "stage1_s": 0.0, "stage1_m": 0.0217, "stage1_l": 0.16883, "stage1_h": 0.27651, "loss": 0.87101, "grad_norm": 1.11696, "time": 0.5673}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.05984, "memory": 8655, "data_time": 0.01217, "stage0_loss_instance_mil": 0.67925, "stage0_bag_acc": 23.00653, "stage0_mean_ious": 0.30618, "stage0_s": 0.0, "stage0_m": 0.03759, "stage0_l": 0.16084, "stage0_h": 0.30726, "stage1_loss_instance_mil": 0.14377, "stage1_bag_acc": 32.29057, "stage1_neg_loss": 0.00972, "stage1_mean_ious": 0.30095, "stage1_s": 0.0, "stage1_m": 0.04057, "stage1_l": 0.14593, "stage1_h": 0.30377, "loss": 0.83275, "grad_norm": 0.59328, "time": 0.60427}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.06983, "memory": 8655, "data_time": 0.01246, "stage0_loss_instance_mil": 0.678, "stage0_bag_acc": 19.01496, "stage0_mean_ious": 0.3199, "stage0_s": 0.0, "stage0_m": 0.03268, "stage0_l": 0.16371, "stage0_h": 0.32514, "stage1_loss_instance_mil": 0.1321, "stage1_bag_acc": 30.58017, "stage1_neg_loss": 0.00995, "stage1_mean_ious": 0.29923, "stage1_s": 0.0, "stage1_m": 0.02644, "stage1_l": 0.14959, "stage1_h": 0.30249, "loss": 0.82005, "grad_norm": 0.52912, "time": 0.5857}
{"mode": "val", "epoch": 1, "iter": 360, "lr": 0.07183, "eval_iter_num": 720, "bbox_mAP": 0.001, "bbox_mAP_50": 0.006, "bbox_mAP_75": 0.001, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.001 0.006 0.001 0.001 0.001 0.000"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.08182, "memory": 8655, "data_time": 0.05484, "stage0_loss_instance_mil": 0.66453, "stage0_bag_acc": 31.18676, "stage0_mean_ious": 0.30945, "stage0_s": 0.0, "stage0_m": 0.02212, "stage0_l": 0.19737, "stage0_h": 0.30674, "stage1_loss_instance_mil": 0.13763, "stage1_bag_acc": 36.15548, "stage1_neg_loss": 0.01668, "stage1_mean_ious": 0.28368, "stage1_s": 0.0, "stage1_m": 0.02202, "stage1_l": 0.18921, "stage1_h": 0.27841, "loss": 0.81885, "grad_norm": 0.85843, "time": 0.60304}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.09181, "memory": 8655, "data_time": 0.01246, "stage0_loss_instance_mil": 0.68664, "stage0_bag_acc": 17.05225, "stage0_mean_ious": 0.30186, "stage0_s": 0.0, "stage0_m": 0.01118, "stage0_l": 0.18572, "stage0_h": 0.31015, "stage1_loss_instance_mil": 0.11706, "stage1_bag_acc": 27.32423, "stage1_neg_loss": 0.0124, "stage1_mean_ious": 0.28943, "stage1_s": 0.0, "stage1_m": 0.01024, "stage1_l": 0.17664, "stage1_h": 0.30041, "loss": 0.8161, "grad_norm": 0.42053, "time": 0.60697}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.1, "memory": 8655, "data_time": 0.01302, "stage0_loss_instance_mil": 0.68713, "stage0_bag_acc": 14.59747, "stage0_mean_ious": 0.35722, "stage0_s": 0.0, "stage0_m": 0.00839, "stage0_l": 0.15723, "stage0_h": 0.35962, "stage1_loss_instance_mil": 0.11162, "stage1_bag_acc": 29.17036, "stage1_neg_loss": 0.01321, "stage1_mean_ious": 0.34848, "stage1_s": 0.0, "stage1_m": 0.00758, "stage1_l": 0.15018, "stage1_h": 0.35278, "loss": 0.81196, "grad_norm": 0.32059, "time": 0.59862}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.1, "memory": 8655, "data_time": 0.01311, "stage0_loss_instance_mil": 0.68737, "stage0_bag_acc": 18.42974, "stage0_mean_ious": 0.29225, "stage0_s": 0.0, "stage0_m": 0.04543, "stage0_l": 0.16438, "stage0_h": 0.29137, "stage1_loss_instance_mil": 0.10813, "stage1_bag_acc": 25.24122, "stage1_neg_loss": 0.01681, "stage1_mean_ious": 0.27787, "stage1_s": 0.0, "stage1_m": 0.0383, "stage1_l": 0.1571, "stage1_h": 0.27799, "loss": 0.81232, "grad_norm": 0.3105, "time": 0.62008}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.1, "memory": 8655, "data_time": 0.01294, "stage0_loss_instance_mil": 0.653, "stage0_bag_acc": 28.91777, "stage0_mean_ious": 0.27201, "stage0_s": 0.0, "stage0_m": 0.02516, "stage0_l": 0.14911, "stage0_h": 0.26786, "stage1_loss_instance_mil": 0.12635, "stage1_bag_acc": 39.40602, "stage1_neg_loss": 0.02439, "stage1_mean_ious": 0.25444, "stage1_s": 0.0, "stage1_m": 0.02304, "stage1_l": 0.12935, "stage1_h": 0.25288, "loss": 0.80374, "grad_norm": 0.51964, "time": 0.58939}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.1, "memory": 8655, "data_time": 0.01252, "stage0_loss_instance_mil": 0.67802, "stage0_bag_acc": 26.75468, "stage0_mean_ious": 0.16496, "stage0_s": 0.0, "stage0_m": 0.02736, "stage0_l": 0.21536, "stage0_h": 0.13895, "stage1_loss_instance_mil": 0.10922, "stage1_bag_acc": 24.40014, "stage1_neg_loss": 0.0195, "stage1_mean_ious": 0.15175, "stage1_s": 0.0, "stage1_m": 0.02598, "stage1_l": 0.20057, "stage1_h": 0.12723, "loss": 0.80674, "grad_norm": 0.60838, "time": 0.60288}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.1, "memory": 8655, "data_time": 0.01341, "stage0_loss_instance_mil": 0.67884, "stage0_bag_acc": 14.79699, "stage0_mean_ious": 0.13493, "stage0_s": 0.01671, "stage0_m": 0.01951, "stage0_l": 0.14425, "stage0_h": 0.11702, "stage1_loss_instance_mil": 0.09749, "stage1_bag_acc": 20.46922, "stage1_neg_loss": 0.01646, "stage1_mean_ious": 0.12621, "stage1_s": 0.00984, "stage1_m": 0.02359, "stage1_l": 0.1341, "stage1_h": 0.11, "loss": 0.79279, "grad_norm": 0.20928, "time": 0.62949}
{"mode": "val", "epoch": 2, "iter": 360, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.063, "bbox_mAP_50": 0.25, "bbox_mAP_75": 0.102, "bbox_mAP_s": 0.034, "bbox_mAP_m": 0.014, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.063 0.250 0.102 0.034 0.014 0.004"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.1, "memory": 8655, "data_time": 0.05715, "stage0_loss_instance_mil": 0.66453, "stage0_bag_acc": 26.82415, "stage0_mean_ious": 0.13173, "stage0_s": 0.0, "stage0_m": 0.07038, "stage0_l": 0.20259, "stage0_h": 0.09644, "stage1_loss_instance_mil": 0.09507, "stage1_bag_acc": 23.09664, "stage1_neg_loss": 0.01926, "stage1_mean_ious": 0.11936, "stage1_s": 0.0, "stage1_m": 0.06234, "stage1_l": 0.19607, "stage1_h": 0.0859, "loss": 0.77886, "grad_norm": 0.31352, "time": 0.64353}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.1, "memory": 8655, "data_time": 0.01254, "stage0_loss_instance_mil": 0.64797, "stage0_bag_acc": 26.95876, "stage0_mean_ious": 0.12241, "stage0_s": 0.0, "stage0_m": 0.0096, "stage0_l": 0.18072, "stage0_h": 0.10078, "stage1_loss_instance_mil": 0.10323, "stage1_bag_acc": 32.4317, "stage1_neg_loss": 0.02621, "stage1_mean_ious": 0.10827, "stage1_s": 0.0, "stage1_m": 0.00919, "stage1_l": 0.1562, "stage1_h": 0.08948, "loss": 0.77741, "grad_norm": 0.64583, "time": 0.60466}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.1, "memory": 8655, "data_time": 0.01395, "stage0_loss_instance_mil": 0.67383, "stage0_bag_acc": 24.78938, "stage0_mean_ious": 0.10203, "stage0_s": 0.0, "stage0_m": 0.0252, "stage0_l": 0.14302, "stage0_h": 0.08098, "stage1_loss_instance_mil": 0.09227, "stage1_bag_acc": 24.06169, "stage1_neg_loss": 0.02211, "stage1_mean_ious": 0.094, "stage1_s": 0.0, "stage1_m": 0.02328, "stage1_l": 0.14023, "stage1_h": 0.07254, "loss": 0.78822, "grad_norm": 0.46372, "time": 0.62251}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.1, "memory": 8655, "data_time": 0.01351, "stage0_loss_instance_mil": 0.65593, "stage0_bag_acc": 25.70527, "stage0_mean_ious": 0.10395, "stage0_s": 0.0, "stage0_m": 0.03387, "stage0_l": 0.1417, "stage0_h": 0.08403, "stage1_loss_instance_mil": 0.09535, "stage1_bag_acc": 26.46245, "stage1_neg_loss": 0.0221, "stage1_mean_ious": 0.09607, "stage1_s": 0.0, "stage1_m": 0.02905, "stage1_l": 0.1277, "stage1_h": 0.07875, "loss": 0.77338, "grad_norm": 0.31717, "time": 0.61497}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.1, "memory": 8655, "data_time": 0.01345, "stage0_loss_instance_mil": 0.65821, "stage0_bag_acc": 26.45166, "stage0_mean_ious": 0.10681, "stage0_s": 0.0, "stage0_m": 0.01266, "stage0_l": 0.16993, "stage0_h": 0.07631, "stage1_loss_instance_mil": 0.1054, "stage1_bag_acc": 23.15058, "stage1_neg_loss": 0.01929, "stage1_mean_ious": 0.09732, "stage1_s": 0.0, "stage1_m": 0.01334, "stage1_l": 0.15916, "stage1_h": 0.06846, "loss": 0.78291, "grad_norm": 0.60858, "time": 0.59732}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.1, "memory": 8655, "data_time": 0.01325, "stage0_loss_instance_mil": 0.66237, "stage0_bag_acc": 26.71219, "stage0_mean_ious": 0.1422, "stage0_s": 0.0, "stage0_m": 0.03528, "stage0_l": 0.21986, "stage0_h": 0.11126, "stage1_loss_instance_mil": 0.09049, "stage1_bag_acc": 27.41627, "stage1_neg_loss": 0.02525, "stage1_mean_ious": 0.12829, "stage1_s": 0.0, "stage1_m": 0.0336, "stage1_l": 0.20723, "stage1_h": 0.0985, "loss": 0.77811, "grad_norm": 0.33648, "time": 0.60561}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.1, "memory": 8657, "data_time": 0.01355, "stage0_loss_instance_mil": 0.64126, "stage0_bag_acc": 31.75876, "stage0_mean_ious": 0.26794, "stage0_s": 0.0, "stage0_m": 0.03436, "stage0_l": 0.16893, "stage0_h": 0.26503, "stage1_loss_instance_mil": 0.10311, "stage1_bag_acc": 31.26038, "stage1_neg_loss": 0.02727, "stage1_mean_ious": 0.2366, "stage1_s": 0.0, "stage1_m": 0.0314, "stage1_l": 0.17344, "stage1_h": 0.22862, "loss": 0.77164, "grad_norm": 0.88751, "time": 0.61784}
{"mode": "val", "epoch": 3, "iter": 360, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.037, "bbox_mAP_50": 0.152, "bbox_mAP_75": 0.057, "bbox_mAP_s": 0.017, "bbox_mAP_m": 0.009, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.037 0.152 0.057 0.017 0.009 0.002"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.1, "memory": 8662, "data_time": 0.05794, "stage0_loss_instance_mil": 0.67166, "stage0_bag_acc": 27.23456, "stage0_mean_ious": 0.11172, "stage0_s": 0.0, "stage0_m": 0.01949, "stage0_l": 0.22466, "stage0_h": 0.07547, "stage1_loss_instance_mil": 0.09663, "stage1_bag_acc": 24.31216, "stage1_neg_loss": 0.01966, "stage1_mean_ious": 0.10218, "stage1_s": 0.0, "stage1_m": 0.01707, "stage1_l": 0.2093, "stage1_h": 0.0687, "loss": 0.78796, "grad_norm": 0.46732, "time": 0.63058}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.1, "memory": 8662, "data_time": 0.0127, "stage0_loss_instance_mil": 0.66208, "stage0_bag_acc": 24.14365, "stage0_mean_ious": 0.10168, "stage0_s": 0.0, "stage0_m": 0.03727, "stage0_l": 0.11755, "stage0_h": 0.08491, "stage1_loss_instance_mil": 0.08902, "stage1_bag_acc": 27.12035, "stage1_neg_loss": 0.02521, "stage1_mean_ious": 0.09144, "stage1_s": 0.0, "stage1_m": 0.03524, "stage1_l": 0.10285, "stage1_h": 0.07723, "loss": 0.77631, "grad_norm": 0.43064, "time": 0.60422}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.1, "memory": 8662, "data_time": 0.01224, "stage0_loss_instance_mil": 0.64587, "stage0_bag_acc": 29.67544, "stage0_mean_ious": 0.10338, "stage0_s": 0.0, "stage0_m": 0.03965, "stage0_l": 0.1575, "stage0_h": 0.07662, "stage1_loss_instance_mil": 0.09372, "stage1_bag_acc": 32.2756, "stage1_neg_loss": 0.02332, "stage1_mean_ious": 0.09544, "stage1_s": 0.0, "stage1_m": 0.0336, "stage1_l": 0.15375, "stage1_h": 0.07016, "loss": 0.76292, "grad_norm": 0.4157, "time": 0.61016}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.1, "memory": 8662, "data_time": 0.01334, "stage0_loss_instance_mil": 0.64081, "stage0_bag_acc": 24.92214, "stage0_mean_ious": 0.10138, "stage0_s": 0.0, "stage0_m": 0.03494, "stage0_l": 0.16087, "stage0_h": 0.07235, "stage1_loss_instance_mil": 0.09862, "stage1_bag_acc": 25.67534, "stage1_neg_loss": 0.02857, "stage1_mean_ious": 0.09543, "stage1_s": 0.0, "stage1_m": 0.02889, "stage1_l": 0.15526, "stage1_h": 0.0683, "loss": 0.768, "grad_norm": 0.64644, "time": 0.63214}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.1, "memory": 8662, "data_time": 0.0139, "stage0_loss_instance_mil": 0.67725, "stage0_bag_acc": 25.9927, "stage0_mean_ious": 0.13037, "stage0_s": 0.0, "stage0_m": 0.0177, "stage0_l": 0.17854, "stage0_h": 0.10885, "stage1_loss_instance_mil": 0.10001, "stage1_bag_acc": 20.60617, "stage1_neg_loss": 0.02989, "stage1_mean_ious": 0.12194, "stage1_s": 0.0, "stage1_m": 0.01543, "stage1_l": 0.15531, "stage1_h": 0.10321, "loss": 0.80715, "grad_norm": 0.65744, "time": 0.6241}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.1, "memory": 8662, "data_time": 0.01403, "stage0_loss_instance_mil": 0.66265, "stage0_bag_acc": 26.79654, "stage0_mean_ious": 0.12431, "stage0_s": 0.0, "stage0_m": 0.02156, "stage0_l": 0.16961, "stage0_h": 0.0942, "stage1_loss_instance_mil": 0.10231, "stage1_bag_acc": 30.81558, "stage1_neg_loss": 0.01986, "stage1_mean_ious": 0.11546, "stage1_s": 0.0, "stage1_m": 0.02123, "stage1_l": 0.14216, "stage1_h": 0.0897, "loss": 0.78482, "grad_norm": 0.62985, "time": 0.64307}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.1, "memory": 8662, "data_time": 0.01304, "stage0_loss_instance_mil": 0.66939, "stage0_bag_acc": 25.70582, "stage0_mean_ious": 0.10093, "stage0_s": 0.0, "stage0_m": 0.04369, "stage0_l": 0.16574, "stage0_h": 0.07391, "stage1_loss_instance_mil": 0.09958, "stage1_bag_acc": 22.99503, "stage1_neg_loss": 0.02502, "stage1_mean_ious": 0.09112, "stage1_s": 0.0, "stage1_m": 0.03954, "stage1_l": 0.14798, "stage1_h": 0.06658, "loss": 0.79398, "grad_norm": 0.67394, "time": 0.61521}
{"mode": "val", "epoch": 4, "iter": 360, "lr": 0.1, "eval_iter_num": 720, "bbox_mAP": 0.048, "bbox_mAP_50": 0.181, "bbox_mAP_75": 0.08, "bbox_mAP_s": 0.03, "bbox_mAP_m": 0.016, "bbox_mAP_l": 0.004, "bbox_mAP_copypaste": "0.048 0.181 0.080 0.030 0.016 0.004"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.1, "memory": 8662, "data_time": 0.06017, "stage0_loss_instance_mil": 0.68458, "stage0_bag_acc": 17.2697, "stage0_mean_ious": 0.08613, "stage0_s": 0.0, "stage0_m": 0.01898, "stage0_l": 0.12633, "stage0_h": 0.06483, "stage1_loss_instance_mil": 0.08431, "stage1_bag_acc": 13.79697, "stage1_neg_loss": 0.01956, "stage1_mean_ious": 0.08085, "stage1_s": 0.0, "stage1_m": 0.01924, "stage1_l": 0.122, "stage1_h": 0.05966, "loss": 0.78845, "grad_norm": 0.29852, "time": 0.65543}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.1, "memory": 8662, "data_time": 0.01567, "stage0_loss_instance_mil": 0.68047, "stage0_bag_acc": 20.67662, "stage0_mean_ious": 0.09878, "stage0_s": 0.0, "stage0_m": 0.04084, "stage0_l": 0.19348, "stage0_h": 0.0695, "stage1_loss_instance_mil": 0.08619, "stage1_bag_acc": 16.95749, "stage1_neg_loss": 0.01895, "stage1_mean_ious": 0.09031, "stage1_s": 0.0, "stage1_m": 0.04012, "stage1_l": 0.16735, "stage1_h": 0.06393, "loss": 0.78561, "grad_norm": 0.31231, "time": 0.63133}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.1, "memory": 8662, "data_time": 0.01289, "stage0_loss_instance_mil": 0.66433, "stage0_bag_acc": 22.65991, "stage0_mean_ious": 0.08924, "stage0_s": 0.0, "stage0_m": 0.03065, "stage0_l": 0.17823, "stage0_h": 0.06478, "stage1_loss_instance_mil": 0.09373, "stage1_bag_acc": 29.43121, "stage1_neg_loss": 0.02171, "stage1_mean_ious": 0.08384, "stage1_s": 0.0, "stage1_m": 0.02759, "stage1_l": 0.16134, "stage1_h": 0.06154, "loss": 0.77977, "grad_norm": 0.50752, "time": 0.59391}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.1, "memory": 8662, "data_time": 0.01489, "stage0_loss_instance_mil": 0.66039, "stage0_bag_acc": 25.89394, "stage0_mean_ious": 0.15701, "stage0_s": 0.0, "stage0_m": 0.0222, "stage0_l": 0.20089, "stage0_h": 0.14357, "stage1_loss_instance_mil": 0.09374, "stage1_bag_acc": 25.65447, "stage1_neg_loss": 0.03524, "stage1_mean_ious": 0.13922, "stage1_s": 0.0, "stage1_m": 0.02287, "stage1_l": 0.19651, "stage1_h": 0.12148, "loss": 0.78937, "grad_norm": 0.36018, "time": 0.59481}
