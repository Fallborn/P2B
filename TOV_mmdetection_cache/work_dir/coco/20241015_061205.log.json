{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-12.0\nNVCC: Build cuda_12.0.r12.0/compiler.31968024_0\nGCC: gcc (Ubuntu 11.4.0-2ubuntu1~18.04) 11.4.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.8.1\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.13.0+bc04488", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '../TOV_mmdetection_cache/work_dir/coco/pre_trained/P2B.pth'\nresume_from = None\nworkflow = [('train', 1)]\nnorm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\ndebug = False\nnum_stages = 2\nmodel = dict(\n    type='P2BNet',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_input',\n        num_outs=4,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),\n    roi_head=dict(\n        type='P2BHead',\n        num_stages=2,\n        top_k=7,\n        with_atten=False,\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCInstanceMILHead',\n            num_stages=2,\n            with_loss_pseudo=False,\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=6,\n            num_ref_fcs=0,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=True,\n            loss_type='MIL',\n            loss_mil1=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='binary_cross_entropy'),\n            loss_mil2=dict(\n                type='MILLoss',\n                binary_ins=False,\n                loss_weight=0.25,\n                loss_type='gfocal_loss'))),\n    train_cfg=dict(\n        base_proposal=dict(\n            base_scales=[4, 8, 16, 32, 64, 128],\n            base_ratios=[\n                0.3333333333333333, 0.5, 0.6666666666666666, 1.0, 1.5, 2.0, 3.0\n            ],\n            shake_ratio=None,\n            cut_mode='symmetry',\n            gen_num_neg=0),\n        fine_proposal=dict(\n            gen_proposal_mode='fix_gen',\n            cut_mode=None,\n            shake_ratio=[0.1],\n            base_ratios=[1, 1.2, 1.3, 0.8, 0.7],\n            iou_thr=0.3,\n            gen_num_neg=3500),\n        rcnn=None),\n    test_cfg=dict(rpn=None, rcnn=None))\ndataset_type = 'CocoFmtDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                   (2000, 1000), (2000, 1200)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_true_bboxes'\n        ])\n]\ntest_scale = 1200\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2000, 1200),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_anns_id', 'gt_true_bboxes'\n                ])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    shuffle=None,\n    train=dict(\n        type='CocoFmtDataset',\n        ann_file='data/coco/annotations_qc_pt/instances_train2017_coarse.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(2000, 480), (2000, 576), (2000, 688), (2000, 864),\n                           (2000, 1000), (2000, 1200)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_true_bboxes'\n                ])\n        ]),\n    val=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False),\n    test=dict(\n        samples_per_gpu=16,\n        type='CocoFmtDataset',\n        ann_file=\n        '/home/lxz/P2BNet/TOV_mmdetection/data/coco/annotations/instances_train.json',\n        img_prefix='data/coco/images/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2000, 1200),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_anns_id', 'gt_true_bboxes'\n                        ])\n                ])\n        ],\n        test_mode=False))\ncheck = dict(stop_while_nan=False)\noptimizer = dict(\n    type='AdamW',\n    lr=5e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\nwork_dir = '../TOV_mmdetection_cache/work_dir/coco/'\nevaluation = dict(\n    interval=3,\n    metric='bbox',\n    save_result_file=\n    '../TOV_mmdetection_cache/work_dir/coco/_1200_latest_result.json',\n    do_first_eval=False,\n    do_final_eval=True)\ngpu_ids = [0]\n", "seed": null, "exp_name": "P2BNet_r50_fpn_1x_coco_ms.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.07062, "stage0_loss_instance_mil": 0.72398, "stage0_bag_acc": 19.2339, "stage0_mean_ious": 0.44013, "stage0_s": 0.0, "stage0_m": 0.02244, "stage0_l": 0.28482, "stage0_h": 0.45945, "stage1_loss_instance_mil": 0.15693, "stage1_bag_acc": 13.06655, "stage1_neg_loss": 0.00472, "stage1_mean_ious": 0.42718, "stage1_s": 0.0, "stage1_m": 0.02342, "stage1_l": 0.27679, "stage1_h": 0.44657, "loss": 0.88563, "grad_norm": 3.35854, "time": 1.73796}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02563, "stage0_loss_instance_mil": 0.61588, "stage0_bag_acc": 45.78636, "stage0_mean_ious": 0.51012, "stage0_s": 0.0, "stage0_m": 0.1054, "stage0_l": 0.31021, "stage0_h": 0.53023, "stage1_loss_instance_mil": 0.21535, "stage1_bag_acc": 21.47486, "stage1_neg_loss": 0.00486, "stage1_mean_ious": 0.47995, "stage1_s": 0.0, "stage1_m": 0.09443, "stage1_l": 0.30268, "stage1_h": 0.49838, "loss": 0.83609, "grad_norm": 3.55608, "time": 1.71273}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02559, "stage0_loss_instance_mil": 0.27105, "stage0_bag_acc": 89.91031, "stage0_mean_ious": 0.50251, "stage0_s": 0.0, "stage0_m": 0.05285, "stage0_l": 0.2398, "stage0_h": 0.5253, "stage1_loss_instance_mil": 0.31174, "stage1_bag_acc": 74.39125, "stage1_neg_loss": 0.05979, "stage1_mean_ious": 0.45791, "stage1_s": 0.0, "stage1_m": 0.04532, "stage1_l": 0.21937, "stage1_h": 0.48007, "loss": 0.64258, "grad_norm": 9.85265, "time": 1.71399}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 18833, "data_time": 0.07618, "stage0_loss_instance_mil": 0.0728, "stage0_bag_acc": 96.89835, "stage0_mean_ious": 0.42247, "stage0_s": 0.0, "stage0_m": 0.03229, "stage0_l": 0.13889, "stage0_h": 0.45279, "stage1_loss_instance_mil": 0.33912, "stage1_bag_acc": 97.74129, "stage1_neg_loss": 0.08579, "stage1_mean_ious": 0.37262, "stage1_s": 0.0, "stage1_m": 0.02502, "stage1_l": 0.12161, "stage1_h": 0.40065, "loss": 0.49772, "grad_norm": 12.26169, "time": 1.7683}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 18833, "data_time": 0.02654, "stage0_loss_instance_mil": 0.0614, "stage0_bag_acc": 96.2104, "stage0_mean_ious": 0.4588, "stage0_s": 0.0, "stage0_m": 0.06836, "stage0_l": 0.16302, "stage0_h": 0.49935, "stage1_loss_instance_mil": 0.29247, "stage1_bag_acc": 97.5582, "stage1_neg_loss": 0.08807, "stage1_mean_ious": 0.4095, "stage1_s": 0.0, "stage1_m": 0.0447, "stage1_l": 0.13816, "stage1_h": 0.44886, "loss": 0.44195, "grad_norm": 13.72485, "time": 1.73422}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 18833, "data_time": 0.02553, "stage0_loss_instance_mil": 0.0494, "stage0_bag_acc": 97.32835, "stage0_mean_ious": 0.40655, "stage0_s": 0.0, "stage0_m": 0.08085, "stage0_l": 0.15199, "stage0_h": 0.44493, "stage1_loss_instance_mil": 0.3254, "stage1_bag_acc": 98.84736, "stage1_neg_loss": 0.08003, "stage1_mean_ious": 0.3652, "stage1_s": 0.0, "stage1_m": 0.05366, "stage1_l": 0.11829, "stage1_h": 0.40473, "loss": 0.45483, "grad_norm": 13.2481, "time": 1.72285}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 4e-05, "memory": 18833, "data_time": 0.07462, "stage0_loss_instance_mil": 0.04155, "stage0_bag_acc": 97.98596, "stage0_mean_ious": 0.44723, "stage0_s": 0.0, "stage0_m": 0.04231, "stage0_l": 0.15729, "stage0_h": 0.4913, "stage1_loss_instance_mil": 0.25894, "stage1_bag_acc": 97.92546, "stage1_neg_loss": 0.07818, "stage1_mean_ious": 0.39337, "stage1_s": 0.0, "stage1_m": 0.02541, "stage1_l": 0.12693, "stage1_h": 0.43386, "loss": 0.37867, "grad_norm": 12.90421, "time": 1.78007}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.0255, "stage0_loss_instance_mil": 0.04213, "stage0_bag_acc": 97.47244, "stage0_mean_ious": 0.46452, "stage0_s": 0.0085, "stage0_m": 0.02689, "stage0_l": 0.15106, "stage0_h": 0.50381, "stage1_loss_instance_mil": 0.28703, "stage1_bag_acc": 97.97168, "stage1_neg_loss": 0.07279, "stage1_mean_ious": 0.40819, "stage1_s": 0.00766, "stage1_m": 0.01584, "stage1_l": 0.12869, "stage1_h": 0.44405, "loss": 0.40195, "grad_norm": 14.78003, "time": 1.7435}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02546, "stage0_loss_instance_mil": 0.02624, "stage0_bag_acc": 98.96408, "stage0_mean_ious": 0.45831, "stage0_s": 0.0, "stage0_m": 0.06057, "stage0_l": 0.14226, "stage0_h": 0.50422, "stage1_loss_instance_mil": 0.2156, "stage1_bag_acc": 99.19021, "stage1_neg_loss": 0.07838, "stage1_mean_ious": 0.4042, "stage1_s": 0.0, "stage1_m": 0.03717, "stage1_l": 0.1229, "stage1_h": 0.44723, "loss": 0.32022, "grad_norm": 12.61033, "time": 1.7391}
{"mode": "val", "epoch": 3, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.05, "bbox_mAP_50": 0.188, "bbox_mAP_75": 0.086, "bbox_mAP_s": 0.025, "bbox_mAP_m": 0.011, "bbox_mAP_l": 0.003, "bbox_mAP_copypaste": "0.050 0.188 0.086 0.025 0.011 0.003"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07348, "stage0_loss_instance_mil": 0.02709, "stage0_bag_acc": 98.84535, "stage0_mean_ious": 0.41219, "stage0_s": 0.00821, "stage0_m": 0.05073, "stage0_l": 0.14048, "stage0_h": 0.46606, "stage1_loss_instance_mil": 0.21424, "stage1_bag_acc": 97.45118, "stage1_neg_loss": 0.07105, "stage1_mean_ious": 0.36075, "stage1_s": 0.00669, "stage1_m": 0.02777, "stage1_l": 0.10855, "stage1_h": 0.41326, "loss": 0.31238, "grad_norm": 14.18833, "time": 1.75654}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02545, "stage0_loss_instance_mil": 0.02025, "stage0_bag_acc": 99.06306, "stage0_mean_ious": 0.42484, "stage0_s": 0.0, "stage0_m": 0.04173, "stage0_l": 0.14474, "stage0_h": 0.46541, "stage1_loss_instance_mil": 0.17638, "stage1_bag_acc": 99.20942, "stage1_neg_loss": 0.07159, "stage1_mean_ious": 0.37265, "stage1_s": 0.0, "stage1_m": 0.03108, "stage1_l": 0.11247, "stage1_h": 0.41081, "loss": 0.26822, "grad_norm": 12.87821, "time": 1.73364}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02972, "stage0_loss_instance_mil": 0.01811, "stage0_bag_acc": 99.2238, "stage0_mean_ious": 0.47129, "stage0_s": 0.0, "stage0_m": 0.04192, "stage0_l": 0.15852, "stage0_h": 0.51933, "stage1_loss_instance_mil": 0.16053, "stage1_bag_acc": 99.1876, "stage1_neg_loss": 0.06097, "stage1_mean_ious": 0.41584, "stage1_s": 0.0, "stage1_m": 0.02783, "stage1_l": 0.13066, "stage1_h": 0.4617, "loss": 0.23961, "grad_norm": 10.18191, "time": 1.75286}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.08001, "stage0_loss_instance_mil": 0.02887, "stage0_bag_acc": 98.07852, "stage0_mean_ious": 0.43976, "stage0_s": 0.0, "stage0_m": 0.03088, "stage0_l": 0.16254, "stage0_h": 0.4818, "stage1_loss_instance_mil": 0.18739, "stage1_bag_acc": 98.46828, "stage1_neg_loss": 0.05952, "stage1_mean_ious": 0.38251, "stage1_s": 0.0, "stage1_m": 0.01993, "stage1_l": 0.13286, "stage1_h": 0.42199, "loss": 0.27578, "grad_norm": 13.27142, "time": 1.80672}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02695, "stage0_loss_instance_mil": 0.00949, "stage0_bag_acc": 99.82308, "stage0_mean_ious": 0.46195, "stage0_s": 0.0, "stage0_m": 0.03416, "stage0_l": 0.13349, "stage0_h": 0.51636, "stage1_loss_instance_mil": 0.13716, "stage1_bag_acc": 99.875, "stage1_neg_loss": 0.06333, "stage1_mean_ious": 0.41164, "stage1_s": 0.0, "stage1_m": 0.02416, "stage1_l": 0.10559, "stage1_h": 0.46278, "loss": 0.20999, "grad_norm": 10.2042, "time": 1.74201}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02717, "stage0_loss_instance_mil": 0.01196, "stage0_bag_acc": 99.63423, "stage0_mean_ious": 0.45985, "stage0_s": 0.0, "stage0_m": 0.03935, "stage0_l": 0.15463, "stage0_h": 0.5047, "stage1_loss_instance_mil": 0.15918, "stage1_bag_acc": 99.46969, "stage1_neg_loss": 0.06428, "stage1_mean_ious": 0.40017, "stage1_s": 0.0, "stage1_m": 0.02684, "stage1_l": 0.12221, "stage1_h": 0.44105, "loss": 0.23542, "grad_norm": 11.98838, "time": 1.6976}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07644, "stage0_loss_instance_mil": 0.01664, "stage0_bag_acc": 98.51173, "stage0_mean_ious": 0.47851, "stage0_s": 0.0, "stage0_m": 0.04856, "stage0_l": 0.21417, "stage0_h": 0.52063, "stage1_loss_instance_mil": 0.11428, "stage1_bag_acc": 98.99209, "stage1_neg_loss": 0.04804, "stage1_mean_ious": 0.40666, "stage1_s": 0.0, "stage1_m": 0.03256, "stage1_l": 0.18295, "stage1_h": 0.44294, "loss": 0.17897, "grad_norm": 8.79483, "time": 1.7822}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02705, "stage0_loss_instance_mil": 0.02483, "stage0_bag_acc": 98.69834, "stage0_mean_ious": 0.49302, "stage0_s": 0.0, "stage0_m": 0.06567, "stage0_l": 0.21142, "stage0_h": 0.53715, "stage1_loss_instance_mil": 0.13002, "stage1_bag_acc": 99.35383, "stage1_neg_loss": 0.05874, "stage1_mean_ious": 0.43276, "stage1_s": 0.0, "stage1_m": 0.04035, "stage1_l": 0.18213, "stage1_h": 0.47326, "loss": 0.21359, "grad_norm": 10.62681, "time": 1.70656}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.0255, "stage0_loss_instance_mil": 0.01377, "stage0_bag_acc": 99.1587, "stage0_mean_ious": 0.4811, "stage0_s": 0.0, "stage0_m": 0.03362, "stage0_l": 0.15143, "stage0_h": 0.53216, "stage1_loss_instance_mil": 0.10605, "stage1_bag_acc": 99.38339, "stage1_neg_loss": 0.05007, "stage1_mean_ious": 0.42715, "stage1_s": 0.0, "stage1_m": 0.02104, "stage1_l": 0.13451, "stage1_h": 0.47372, "loss": 0.16989, "grad_norm": 8.07504, "time": 1.70471}
{"mode": "val", "epoch": 6, "iter": 180, "lr": 5e-05, "eval_iter_num": 90, "bbox_mAP": 0.099, "bbox_mAP_50": 0.285, "bbox_mAP_75": 0.176, "bbox_mAP_s": 0.094, "bbox_mAP_m": 0.056, "bbox_mAP_l": 0.023, "bbox_mAP_copypaste": "0.099 0.285 0.176 0.094 0.056 0.023"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07425, "stage0_loss_instance_mil": 0.00758, "stage0_bag_acc": 99.42143, "stage0_mean_ious": 0.47807, "stage0_s": 0.0, "stage0_m": 0.01752, "stage0_l": 0.12209, "stage0_h": 0.52981, "stage1_loss_instance_mil": 0.09394, "stage1_bag_acc": 99.8381, "stage1_neg_loss": 0.05528, "stage1_mean_ious": 0.42268, "stage1_s": 0.0, "stage1_m": 0.01172, "stage1_l": 0.10051, "stage1_h": 0.47046, "loss": 0.15681, "grad_norm": 9.3087, "time": 1.7405}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02505, "stage0_loss_instance_mil": 0.00898, "stage0_bag_acc": 99.80778, "stage0_mean_ious": 0.49612, "stage0_s": 0.00774, "stage0_m": 0.03888, "stage0_l": 0.15789, "stage0_h": 0.54691, "stage1_loss_instance_mil": 0.10199, "stage1_bag_acc": 99.68429, "stage1_neg_loss": 0.04508, "stage1_mean_ious": 0.43747, "stage1_s": 0.00622, "stage1_m": 0.02345, "stage1_l": 0.12759, "stage1_h": 0.48455, "loss": 0.15605, "grad_norm": 8.63965, "time": 1.70156}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02627, "stage0_loss_instance_mil": 0.00902, "stage0_bag_acc": 99.39808, "stage0_mean_ious": 0.52377, "stage0_s": 0.0, "stage0_m": 0.04742, "stage0_l": 0.19419, "stage0_h": 0.57756, "stage1_loss_instance_mil": 0.09602, "stage1_bag_acc": 99.44325, "stage1_neg_loss": 0.04631, "stage1_mean_ious": 0.45857, "stage1_s": 0.0, "stage1_m": 0.02905, "stage1_l": 0.17376, "stage1_h": 0.50696, "loss": 0.15135, "grad_norm": 8.52341, "time": 1.74643}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 5e-05, "memory": 18833, "data_time": 0.07579, "stage0_loss_instance_mil": 0.00465, "stage0_bag_acc": 99.78363, "stage0_mean_ious": 0.51431, "stage0_s": 0.0, "stage0_m": 0.05, "stage0_l": 0.17671, "stage0_h": 0.56944, "stage1_loss_instance_mil": 0.0821, "stage1_bag_acc": 99.67836, "stage1_neg_loss": 0.0401, "stage1_mean_ious": 0.44705, "stage1_s": 0.0, "stage1_m": 0.03078, "stage1_l": 0.15662, "stage1_h": 0.49471, "loss": 0.12685, "grad_norm": 7.23528, "time": 1.78586}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 5e-05, "memory": 18833, "data_time": 0.02515, "stage0_loss_instance_mil": 0.00953, "stage0_bag_acc": 99.77778, "stage0_mean_ious": 0.54515, "stage0_s": 0.00774, "stage0_m": 0.02109, "stage0_l": 0.17921, "stage0_h": 0.5928, "stage1_loss_instance_mil": 0.08034, "stage1_bag_acc": 99.41667, "stage1_neg_loss": 0.04549, "stage1_mean_ious": 0.47707, "stage1_s": 0.00651, "stage1_m": 0.01308, "stage1_l": 0.1542, "stage1_h": 0.52069, "loss": 0.13536, "grad_norm": 9.3854, "time": 1.69744}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 5e-05, "memory": 18833, "data_time": 0.02615, "stage0_loss_instance_mil": 0.00994, "stage0_bag_acc": 99.41276, "stage0_mean_ious": 0.54168, "stage0_s": 0.0, "stage0_m": 0.02641, "stage0_l": 0.16597, "stage0_h": 0.57606, "stage1_loss_instance_mil": 0.08149, "stage1_bag_acc": 99.61861, "stage1_neg_loss": 0.0404, "stage1_mean_ious": 0.47824, "stage1_s": 0.0, "stage1_m": 0.01436, "stage1_l": 0.14978, "stage1_h": 0.50871, "loss": 0.13183, "grad_norm": 6.81239, "time": 1.75626}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.07421, "stage0_loss_instance_mil": 0.00406, "stage0_bag_acc": 99.88235, "stage0_mean_ious": 0.49433, "stage0_s": 0.0, "stage0_m": 0.019, "stage0_l": 0.15879, "stage0_h": 0.53241, "stage1_loss_instance_mil": 0.06935, "stage1_bag_acc": 99.77124, "stage1_neg_loss": 0.04451, "stage1_mean_ious": 0.43016, "stage1_s": 0.0, "stage1_m": 0.01613, "stage1_l": 0.14039, "stage1_h": 0.4638, "loss": 0.11793, "grad_norm": 6.54467, "time": 1.78416}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.02544, "stage0_loss_instance_mil": 0.00351, "stage0_bag_acc": 99.91667, "stage0_mean_ious": 0.51873, "stage0_s": 0.0, "stage0_m": 0.05535, "stage0_l": 0.1631, "stage0_h": 0.57712, "stage1_loss_instance_mil": 0.06128, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03477, "stage1_mean_ious": 0.45129, "stage1_s": 0.0, "stage1_m": 0.03357, "stage1_l": 0.14005, "stage1_h": 0.5045, "loss": 0.09957, "grad_norm": 5.45353, "time": 1.73459}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.02653, "stage0_loss_instance_mil": 0.00611, "stage0_bag_acc": 99.81818, "stage0_mean_ious": 0.51128, "stage0_s": 0.0, "stage0_m": 0.03309, "stage0_l": 0.18358, "stage0_h": 0.55915, "stage1_loss_instance_mil": 0.05742, "stage1_bag_acc": 99.71292, "stage1_neg_loss": 0.03441, "stage1_mean_ious": 0.44714, "stage1_s": 0.0, "stage1_m": 0.02506, "stage1_l": 0.15429, "stage1_h": 0.48924, "loss": 0.09795, "grad_norm": 4.80364, "time": 1.7635}
{"mode": "val", "epoch": 9, "iter": 180, "lr": 1e-05, "eval_iter_num": 90, "bbox_mAP": 0.146, "bbox_mAP_50": 0.368, "bbox_mAP_75": 0.259, "bbox_mAP_s": 0.156, "bbox_mAP_m": 0.103, "bbox_mAP_l": 0.046, "bbox_mAP_copypaste": "0.146 0.368 0.259 0.156 0.103 0.046"}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08416, "stage0_loss_instance_mil": 0.00353, "stage0_bag_acc": 99.71282, "stage0_mean_ious": 0.52046, "stage0_s": 0.0, "stage0_m": 0.02999, "stage0_l": 0.14068, "stage0_h": 0.57853, "stage1_loss_instance_mil": 0.05674, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03272, "stage1_mean_ious": 0.45235, "stage1_s": 0.0, "stage1_m": 0.01866, "stage1_l": 0.11797, "stage1_h": 0.50325, "loss": 0.09299, "grad_norm": 4.74564, "time": 1.78178}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.03305, "stage0_loss_instance_mil": 0.00604, "stage0_bag_acc": 99.76667, "stage0_mean_ious": 0.51726, "stage0_s": 0.0, "stage0_m": 0.05109, "stage0_l": 0.19044, "stage0_h": 0.56733, "stage1_loss_instance_mil": 0.0556, "stage1_bag_acc": 99.76667, "stage1_neg_loss": 0.03181, "stage1_mean_ious": 0.45548, "stage1_s": 0.0, "stage1_m": 0.03177, "stage1_l": 0.17012, "stage1_h": 0.49969, "loss": 0.09344, "grad_norm": 5.09313, "time": 1.78419}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.0323, "stage0_loss_instance_mil": 0.00119, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.51413, "stage0_s": 0.0, "stage0_m": 0.02805, "stage0_l": 0.21534, "stage0_h": 0.56122, "stage1_loss_instance_mil": 0.05774, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03268, "stage1_mean_ious": 0.45532, "stage1_s": 0.0, "stage1_m": 0.0171, "stage1_l": 0.19459, "stage1_h": 0.49736, "loss": 0.0916, "grad_norm": 4.73757, "time": 1.70861}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18833, "data_time": 0.08302, "stage0_loss_instance_mil": 0.00229, "stage0_bag_acc": 99.91304, "stage0_mean_ious": 0.52317, "stage0_s": 0.0, "stage0_m": 0.02683, "stage0_l": 0.14151, "stage0_h": 0.56965, "stage1_loss_instance_mil": 0.05229, "stage1_bag_acc": 99.76974, "stage1_neg_loss": 0.02999, "stage1_mean_ious": 0.45555, "stage1_s": 0.0, "stage1_m": 0.01718, "stage1_l": 0.11782, "stage1_h": 0.49598, "loss": 0.08456, "grad_norm": 4.40422, "time": 1.78535}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18833, "data_time": 0.03282, "stage0_loss_instance_mil": 0.00207, "stage0_bag_acc": 99.90909, "stage0_mean_ious": 0.52897, "stage0_s": 0.0, "stage0_m": 0.03773, "stage0_l": 0.16108, "stage0_h": 0.57172, "stage1_loss_instance_mil": 0.05154, "stage1_bag_acc": 99.76623, "stage1_neg_loss": 0.03193, "stage1_mean_ious": 0.46528, "stage1_s": 0.0, "stage1_m": 0.02754, "stage1_l": 0.13678, "stage1_h": 0.50373, "loss": 0.08553, "grad_norm": 4.96372, "time": 1.7288}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 1e-05, "memory": 18833, "data_time": 0.03218, "stage0_loss_instance_mil": 0.0019, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.52751, "stage0_s": 0.0, "stage0_m": 0.06057, "stage0_l": 0.1634, "stage0_h": 0.58293, "stage1_loss_instance_mil": 0.05318, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.03043, "stage1_mean_ious": 0.46693, "stage1_s": 0.0, "stage1_m": 0.04892, "stage1_l": 0.15635, "stage1_h": 0.51468, "loss": 0.08552, "grad_norm": 4.78799, "time": 1.70599}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18833, "data_time": 0.08229, "stage0_loss_instance_mil": 0.00163, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.52565, "stage0_s": 0.0, "stage0_m": 0.03182, "stage0_l": 0.16256, "stage0_h": 0.57433, "stage1_loss_instance_mil": 0.04891, "stage1_bag_acc": 100.0, "stage1_neg_loss": 0.02617, "stage1_mean_ious": 0.46464, "stage1_s": 0.0, "stage1_m": 0.01981, "stage1_l": 0.14993, "stage1_h": 0.50709, "loss": 0.07671, "grad_norm": 3.93232, "time": 1.76966}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18833, "data_time": 0.03373, "stage0_loss_instance_mil": 0.01132, "stage0_bag_acc": 99.50338, "stage0_mean_ious": 0.51257, "stage0_s": 0.00766, "stage0_m": 0.03115, "stage0_l": 0.14447, "stage0_h": 0.56482, "stage1_loss_instance_mil": 0.05544, "stage1_bag_acc": 99.52754, "stage1_neg_loss": 0.03029, "stage1_mean_ious": 0.44843, "stage1_s": 0.00612, "stage1_m": 0.02053, "stage1_l": 0.12519, "stage1_h": 0.49441, "loss": 0.09705, "grad_norm": 4.642, "time": 1.76451}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 18833, "data_time": 0.03148, "stage0_loss_instance_mil": 0.00103, "stage0_bag_acc": 100.0, "stage0_mean_ious": 0.51723, "stage0_s": 0.0, "stage0_m": 0.02891, "stage0_l": 0.17505, "stage0_h": 0.57333, "stage1_loss_instance_mil": 0.04812, "stage1_bag_acc": 99.89474, "stage1_neg_loss": 0.03308, "stage1_mean_ious": 0.45646, "stage1_s": 0.0, "stage1_m": 0.01786, "stage1_l": 0.14575, "stage1_h": 0.5082, "loss": 0.08223, "grad_norm": 4.57369, "time": 1.75463}
{"mode": "val", "epoch": 12, "iter": 180, "lr": 0.0, "eval_iter_num": 90, "bbox_mAP": 0.159, "bbox_mAP_50": 0.4, "bbox_mAP_75": 0.279, "bbox_mAP_s": 0.172, "bbox_mAP_m": 0.123, "bbox_mAP_l": 0.053, "bbox_mAP_copypaste": "0.159 0.400 0.279 0.172 0.123 0.053"}
